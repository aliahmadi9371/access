ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_Linux.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_Linux_initVar
  20              		.bss
  21              		.type	UART_Linux_initVar, %object
  22              		.size	UART_Linux_initVar, 1
  23              	UART_Linux_initVar:
  24 0000 00       		.space	1
  25              		.comm	UART_Linux_txBuffer,1024,4
  26              		.global	UART_Linux_txBufferRead
  27 0001 00       		.align	1
  28              		.type	UART_Linux_txBufferRead, %object
  29              		.size	UART_Linux_txBufferRead, 2
  30              	UART_Linux_txBufferRead:
  31 0002 0000     		.space	2
  32              		.global	UART_Linux_txBufferWrite
  33              		.align	1
  34              		.type	UART_Linux_txBufferWrite, %object
  35              		.size	UART_Linux_txBufferWrite, 2
  36              	UART_Linux_txBufferWrite:
  37 0004 0000     		.space	2
  38              		.global	UART_Linux_errorStatus
  39              		.type	UART_Linux_errorStatus, %object
  40              		.size	UART_Linux_errorStatus, 1
  41              	UART_Linux_errorStatus:
  42 0006 00       		.space	1
  43              		.comm	UART_Linux_rxBuffer,1024,4
  44              		.global	UART_Linux_rxBufferRead
  45 0007 00       		.align	1
  46              		.type	UART_Linux_rxBufferRead, %object
  47              		.size	UART_Linux_rxBufferRead, 2
  48              	UART_Linux_rxBufferRead:
  49 0008 0000     		.space	2
  50              		.global	UART_Linux_rxBufferWrite
  51              		.align	1
  52              		.type	UART_Linux_rxBufferWrite, %object
  53              		.size	UART_Linux_rxBufferWrite, 2
  54              	UART_Linux_rxBufferWrite:
  55 000a 0000     		.space	2
  56              		.global	UART_Linux_rxBufferLoopDetect
  57              		.type	UART_Linux_rxBufferLoopDetect, %object
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 2


  58              		.size	UART_Linux_rxBufferLoopDetect, 1
  59              	UART_Linux_rxBufferLoopDetect:
  60 000c 00       		.space	1
  61              		.global	UART_Linux_rxBufferOverflow
  62              		.type	UART_Linux_rxBufferOverflow, %object
  63              		.size	UART_Linux_rxBufferOverflow, 1
  64              	UART_Linux_rxBufferOverflow:
  65 000d 00       		.space	1
  66              		.section	.text.UART_Linux_Start,"ax",%progbits
  67              		.align	2
  68              		.global	UART_Linux_Start
  69              		.thumb
  70              		.thumb_func
  71              		.type	UART_Linux_Start, %function
  72              	UART_Linux_Start:
  73              	.LFB0:
  74              		.file 1 "Generated_Source\\PSoC5\\UART_Linux.c"
   1:Generated_Source\PSoC5/UART_Linux.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_Linux.c **** * File Name: UART_Linux.c
   3:Generated_Source\PSoC5/UART_Linux.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_Linux.c **** *
   5:Generated_Source\PSoC5/UART_Linux.c **** * Description:
   6:Generated_Source\PSoC5/UART_Linux.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_Linux.c **** *
   8:Generated_Source\PSoC5/UART_Linux.c **** * Note:
   9:Generated_Source\PSoC5/UART_Linux.c **** *
  10:Generated_Source\PSoC5/UART_Linux.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_Linux.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_Linux.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_Linux.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_Linux.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_Linux.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_Linux.c **** 
  17:Generated_Source\PSoC5/UART_Linux.c **** #include "UART_Linux.h"
  18:Generated_Source\PSoC5/UART_Linux.c **** #if (UART_Linux_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_Linux.c ****     #include "UART_Linux_IntClock.h"
  20:Generated_Source\PSoC5/UART_Linux.c **** #endif /* End UART_Linux_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_Linux.c **** 
  22:Generated_Source\PSoC5/UART_Linux.c **** 
  23:Generated_Source\PSoC5/UART_Linux.c **** /***************************************
  24:Generated_Source\PSoC5/UART_Linux.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_Linux.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_Linux.c **** 
  27:Generated_Source\PSoC5/UART_Linux.c **** uint8 UART_Linux_initVar = 0u;
  28:Generated_Source\PSoC5/UART_Linux.c **** 
  29:Generated_Source\PSoC5/UART_Linux.c **** #if (UART_Linux_TX_INTERRUPT_ENABLED && UART_Linux_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_Linux.c ****     volatile uint8 UART_Linux_txBuffer[UART_Linux_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART_Linux.c ****     volatile uint16 UART_Linux_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_Linux.c ****     uint16 UART_Linux_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_Linux.c **** #endif /* (UART_Linux_TX_INTERRUPT_ENABLED && UART_Linux_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_Linux.c **** 
  35:Generated_Source\PSoC5/UART_Linux.c **** #if (UART_Linux_RX_INTERRUPT_ENABLED && (UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_Linux.c ****     uint8 UART_Linux_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_Linux.c ****     volatile uint8 UART_Linux_rxBuffer[UART_Linux_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_Linux.c ****     volatile uint16 UART_Linux_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_Linux.c ****     volatile uint16 UART_Linux_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_Linux.c ****     volatile uint8 UART_Linux_rxBufferLoopDetect = 0u;
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 3


  41:Generated_Source\PSoC5/UART_Linux.c ****     volatile uint8 UART_Linux_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_Linux.c ****         volatile uint8 UART_Linux_rxAddressMode = UART_Linux_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_Linux.c ****         volatile uint8 UART_Linux_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_Linux.c **** #endif /* (UART_Linux_RX_INTERRUPT_ENABLED && (UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_Linux.c **** 
  48:Generated_Source\PSoC5/UART_Linux.c **** 
  49:Generated_Source\PSoC5/UART_Linux.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_Linux.c **** * Function Name: UART_Linux_Start
  51:Generated_Source\PSoC5/UART_Linux.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_Linux.c **** *
  53:Generated_Source\PSoC5/UART_Linux.c **** * Summary:
  54:Generated_Source\PSoC5/UART_Linux.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_Linux.c **** *  UART_Linux_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_Linux.c **** *  UART_Linux_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_Linux.c **** *  UART_Linux_Enable() function.
  58:Generated_Source\PSoC5/UART_Linux.c **** *
  59:Generated_Source\PSoC5/UART_Linux.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_Linux.c **** *  None.
  61:Generated_Source\PSoC5/UART_Linux.c **** *
  62:Generated_Source\PSoC5/UART_Linux.c **** * Return:
  63:Generated_Source\PSoC5/UART_Linux.c **** *  None.
  64:Generated_Source\PSoC5/UART_Linux.c **** *
  65:Generated_Source\PSoC5/UART_Linux.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_Linux.c **** *  The UART_Linux_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_Linux.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_Linux.c **** *  and set to one (1u) the first time UART_Linux_Start() is called. This
  69:Generated_Source\PSoC5/UART_Linux.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_Linux.c **** *  subsequent calls to the UART_Linux_Start() routine.
  71:Generated_Source\PSoC5/UART_Linux.c **** *
  72:Generated_Source\PSoC5/UART_Linux.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_Linux.c **** *  No.
  74:Generated_Source\PSoC5/UART_Linux.c **** *
  75:Generated_Source\PSoC5/UART_Linux.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_Linux.c **** void UART_Linux_Start(void) 
  77:Generated_Source\PSoC5/UART_Linux.c **** {
  75              		.loc 1 77 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0000 80B5     		push	{r7, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 00AF     		add	r7, sp, #0
  84              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/UART_Linux.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_Linux.c ****     if(UART_Linux_initVar == 0u)
  85              		.loc 1 79 0
  86 0004 064B     		ldr	r3, .L3
  87 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88 0008 002B     		cmp	r3, #0
  89 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/UART_Linux.c ****     {
  81:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_Init();
  90              		.loc 1 81 0
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 4


  91 000c FFF7FEFF 		bl	UART_Linux_Init
  82:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_initVar = 1u;
  92              		.loc 1 82 0
  93 0010 034B     		ldr	r3, .L3
  94 0012 0122     		movs	r2, #1
  95 0014 1A70     		strb	r2, [r3]
  96              	.L2:
  83:Generated_Source\PSoC5/UART_Linux.c ****     }
  84:Generated_Source\PSoC5/UART_Linux.c **** 
  85:Generated_Source\PSoC5/UART_Linux.c ****     UART_Linux_Enable();
  97              		.loc 1 85 0
  98 0016 FFF7FEFF 		bl	UART_Linux_Enable
  86:Generated_Source\PSoC5/UART_Linux.c **** }
  99              		.loc 1 86 0
 100 001a 00BF     		nop
 101 001c 80BD     		pop	{r7, pc}
 102              	.L4:
 103 001e 00BF     		.align	2
 104              	.L3:
 105 0020 00000000 		.word	UART_Linux_initVar
 106              		.cfi_endproc
 107              	.LFE0:
 108              		.size	UART_Linux_Start, .-UART_Linux_Start
 109              		.section	.text.UART_Linux_Init,"ax",%progbits
 110              		.align	2
 111              		.global	UART_Linux_Init
 112              		.thumb
 113              		.thumb_func
 114              		.type	UART_Linux_Init, %function
 115              	UART_Linux_Init:
 116              	.LFB1:
  87:Generated_Source\PSoC5/UART_Linux.c **** 
  88:Generated_Source\PSoC5/UART_Linux.c **** 
  89:Generated_Source\PSoC5/UART_Linux.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_Linux.c **** * Function Name: UART_Linux_Init
  91:Generated_Source\PSoC5/UART_Linux.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_Linux.c **** *
  93:Generated_Source\PSoC5/UART_Linux.c **** * Summary:
  94:Generated_Source\PSoC5/UART_Linux.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_Linux.c **** *  dialog settings. It is not necessary to call UART_Linux_Init() because
  96:Generated_Source\PSoC5/UART_Linux.c **** *  the UART_Linux_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_Linux.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_Linux.c **** *
  99:Generated_Source\PSoC5/UART_Linux.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_Linux.c **** *  None.
 101:Generated_Source\PSoC5/UART_Linux.c **** *
 102:Generated_Source\PSoC5/UART_Linux.c **** * Return:
 103:Generated_Source\PSoC5/UART_Linux.c **** *  None.
 104:Generated_Source\PSoC5/UART_Linux.c **** *
 105:Generated_Source\PSoC5/UART_Linux.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_Linux.c **** void UART_Linux_Init(void) 
 107:Generated_Source\PSoC5/UART_Linux.c **** {
 117              		.loc 1 107 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 5


 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/UART_Linux.c ****     #if(UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_Linux.c **** 
 110:Generated_Source\PSoC5/UART_Linux.c ****         #if (UART_Linux_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_Linux.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_Linux.c ****             (void) CyIntSetVector(UART_Linux_RX_VECT_NUM, &UART_Linux_RXISR);
 127              		.loc 1 112 0
 128 0004 1149     		ldr	r1, .L6
 129 0006 0220     		movs	r0, #2
 130 0008 FFF7FEFF 		bl	CyIntSetVector
 113:Generated_Source\PSoC5/UART_Linux.c ****             CyIntSetPriority(UART_Linux_RX_VECT_NUM, UART_Linux_RX_PRIOR_NUM);
 131              		.loc 1 113 0
 132 000c 0721     		movs	r1, #7
 133 000e 0220     		movs	r0, #2
 134 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_errorStatus = 0u;
 135              		.loc 1 114 0
 136 0014 0E4B     		ldr	r3, .L6+4
 137 0016 0022     		movs	r2, #0
 138 0018 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (UART_Linux_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_Linux.c **** 
 117:Generated_Source\PSoC5/UART_Linux.c ****         #if (UART_Linux_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_SetRxAddressMode(UART_Linux_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_SetRxAddress1(UART_Linux_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_SetRxAddress2(UART_Linux_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* End UART_Linux_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_Linux.c **** 
 123:Generated_Source\PSoC5/UART_Linux.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXBITCTR_PERIOD_REG = UART_Linux_RXBITCTR_INIT;
 139              		.loc 1 124 0
 140 001a 0E4B     		ldr	r3, .L6+8
 141 001c 7222     		movs	r2, #114
 142 001e 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART_Linux.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXSTATUS_MASK_REG  = UART_Linux_INIT_RX_INTERRUPTS_MASK;
 143              		.loc 1 126 0
 144 0020 0D4B     		ldr	r3, .L6+12
 145 0022 2022     		movs	r2, #32
 146 0024 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* End UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_Linux.c **** 
 129:Generated_Source\PSoC5/UART_Linux.c ****     #if(UART_Linux_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_Linux.c ****         #if (UART_Linux_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_Linux.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_Linux.c ****             (void) CyIntSetVector(UART_Linux_TX_VECT_NUM, &UART_Linux_TXISR);
 147              		.loc 1 132 0
 148 0026 0D49     		ldr	r1, .L6+16
 149 0028 0320     		movs	r0, #3
 150 002a FFF7FEFF 		bl	CyIntSetVector
 133:Generated_Source\PSoC5/UART_Linux.c ****             CyIntSetPriority(UART_Linux_TX_VECT_NUM, UART_Linux_TX_PRIOR_NUM);
 151              		.loc 1 133 0
 152 002e 0721     		movs	r1, #7
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 6


 153 0030 0320     		movs	r0, #3
 154 0032 FFF7FEFF 		bl	CyIntSetPriority
 134:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (UART_Linux_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_Linux.c **** 
 136:Generated_Source\PSoC5/UART_Linux.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_Linux.c ****         #if (UART_Linux_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_TXBITCLKGEN_CTR_REG = UART_Linux_BIT_CENTER;
 155              		.loc 1 138 0
 156 0036 0A4B     		ldr	r3, .L6+20
 157 0038 0622     		movs	r2, #6
 158 003a 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_TXBITCLKTX_COMPLETE_REG = ((UART_Linux_NUMBER_OF_DATA_BITS +
 159              		.loc 1 139 0
 160 003c 094B     		ldr	r3, .L6+24
 161 003e 4722     		movs	r2, #71
 162 0040 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_Linux.c ****                         UART_Linux_NUMBER_OF_START_BIT) * UART_Linux_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_Linux.c ****         #else
 142:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_TXBITCTR_PERIOD_REG = ((UART_Linux_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_Linux.c ****                         UART_Linux_NUMBER_OF_START_BIT) * UART_Linux_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* End UART_Linux_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_Linux.c **** 
 146:Generated_Source\PSoC5/UART_Linux.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_Linux.c ****         #if (UART_Linux_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_TXSTATUS_MASK_REG = UART_Linux_TX_STS_FIFO_EMPTY;
 163              		.loc 1 148 0
 164 0042 094B     		ldr	r3, .L6+28
 165 0044 0222     		movs	r2, #2
 166 0046 1A70     		strb	r2, [r3]
 149:Generated_Source\PSoC5/UART_Linux.c ****         #else
 150:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_TXSTATUS_MASK_REG = UART_Linux_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART_Linux.c ****         #endif /*End UART_Linux_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_Linux.c **** 
 153:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* End UART_Linux_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_Linux.c **** 
 155:Generated_Source\PSoC5/UART_Linux.c ****     #if(UART_Linux_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_Linux.c ****             (UART_Linux_ReadControlRegister() & (uint8)~UART_Linux_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_Linux.c ****             (uint8)(UART_Linux_PARITY_TYPE << UART_Linux_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* End UART_Linux_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_Linux.c **** }
 167              		.loc 1 160 0
 168 0048 00BF     		nop
 169 004a 80BD     		pop	{r7, pc}
 170              	.L7:
 171              		.align	2
 172              	.L6:
 173 004c 00000000 		.word	UART_Linux_RXISR
 174 0050 00000000 		.word	UART_Linux_errorStatus
 175 0054 82640040 		.word	1073767554
 176 0058 85640040 		.word	1073767557
 177 005c 00000000 		.word	UART_Linux_TXISR
 178 0060 26640040 		.word	1073767462
 179 0064 36640040 		.word	1073767478
 180 0068 86650040 		.word	1073767814
 181              		.cfi_endproc
 182              	.LFE1:
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 7


 183              		.size	UART_Linux_Init, .-UART_Linux_Init
 184              		.section	.text.UART_Linux_Enable,"ax",%progbits
 185              		.align	2
 186              		.global	UART_Linux_Enable
 187              		.thumb
 188              		.thumb_func
 189              		.type	UART_Linux_Enable, %function
 190              	UART_Linux_Enable:
 191              	.LFB2:
 161:Generated_Source\PSoC5/UART_Linux.c **** 
 162:Generated_Source\PSoC5/UART_Linux.c **** 
 163:Generated_Source\PSoC5/UART_Linux.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_Linux.c **** * Function Name: UART_Linux_Enable
 165:Generated_Source\PSoC5/UART_Linux.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_Linux.c **** *
 167:Generated_Source\PSoC5/UART_Linux.c **** * Summary:
 168:Generated_Source\PSoC5/UART_Linux.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_Linux.c **** *  to call UART_Linux_Enable() because the UART_Linux_Start() API
 170:Generated_Source\PSoC5/UART_Linux.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_Linux.c **** *  operation.
 172:Generated_Source\PSoC5/UART_Linux.c **** 
 173:Generated_Source\PSoC5/UART_Linux.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_Linux.c **** *  None.
 175:Generated_Source\PSoC5/UART_Linux.c **** *
 176:Generated_Source\PSoC5/UART_Linux.c **** * Return:
 177:Generated_Source\PSoC5/UART_Linux.c **** *  None.
 178:Generated_Source\PSoC5/UART_Linux.c **** *
 179:Generated_Source\PSoC5/UART_Linux.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_Linux.c **** *  UART_Linux_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_Linux.c **** *
 182:Generated_Source\PSoC5/UART_Linux.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_Linux.c **** void UART_Linux_Enable(void) 
 184:Generated_Source\PSoC5/UART_Linux.c **** {
 192              		.loc 1 184 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 0000 80B5     		push	{r7, lr}
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 82B0     		sub	sp, sp, #8
 201              		.cfi_def_cfa_offset 16
 202 0004 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/UART_Linux.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_Linux.c ****     enableInterrupts = CyEnterCriticalSection();
 204              		.loc 1 186 0
 205 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 206 000a 0346     		mov	r3, r0
 207 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/UART_Linux.c **** 
 188:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_Linux.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXBITCTR_CONTROL_REG |= UART_Linux_CNTR_ENABLE;
 208              		.loc 1 190 0
 209 000e 154A     		ldr	r2, .L9
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 8


 210 0010 144B     		ldr	r3, .L9
 211 0012 1B78     		ldrb	r3, [r3]
 212 0014 DBB2     		uxtb	r3, r3
 213 0016 43F02003 		orr	r3, r3, #32
 214 001a DBB2     		uxtb	r3, r3
 215 001c 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART_Linux.c **** 
 192:Generated_Source\PSoC5/UART_Linux.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXSTATUS_ACTL_REG  |= UART_Linux_INT_ENABLE;
 216              		.loc 1 193 0
 217 001e 124A     		ldr	r2, .L9+4
 218 0020 114B     		ldr	r3, .L9+4
 219 0022 1B78     		ldrb	r3, [r3]
 220 0024 DBB2     		uxtb	r3, r3
 221 0026 43F01003 		orr	r3, r3, #16
 222 002a DBB2     		uxtb	r3, r3
 223 002c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART_Linux.c **** 
 195:Generated_Source\PSoC5/UART_Linux.c ****         #if (UART_Linux_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_EnableRxInt();
 224              		.loc 1 196 0
 225 002e 0F4B     		ldr	r3, .L9+8
 226 0030 0422     		movs	r2, #4
 227 0032 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC5/UART_Linux.c **** 
 198:Generated_Source\PSoC5/UART_Linux.c ****             #if (UART_Linux_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_Linux.c ****             #endif /* (UART_Linux_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (UART_Linux_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_Linux.c **** 
 204:Generated_Source\PSoC5/UART_Linux.c ****     #if(UART_Linux_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_Linux.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_Linux.c ****         #if(!UART_Linux_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_TXBITCTR_CONTROL_REG |= UART_Linux_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* End UART_Linux_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_Linux.c **** 
 210:Generated_Source\PSoC5/UART_Linux.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_TXSTATUS_ACTL_REG |= UART_Linux_INT_ENABLE;
 228              		.loc 1 211 0
 229 0034 0E4A     		ldr	r2, .L9+12
 230 0036 0E4B     		ldr	r3, .L9+12
 231 0038 1B78     		ldrb	r3, [r3]
 232 003a DBB2     		uxtb	r3, r3
 233 003c 43F01003 		orr	r3, r3, #16
 234 0040 DBB2     		uxtb	r3, r3
 235 0042 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_Linux.c ****         #if (UART_Linux_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 236              		.loc 1 213 0
 237 0044 0B4B     		ldr	r3, .L9+16
 238 0046 0822     		movs	r2, #8
 239 0048 1A60     		str	r2, [r3]
 214:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_EnableTxInt();
 240              		.loc 1 214 0
 241 004a 084B     		ldr	r3, .L9+8
 242 004c 0822     		movs	r2, #8
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 9


 243 004e 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (UART_Linux_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_Linux.c ****      #endif /* (UART_Linux_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_Linux.c **** 
 218:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_IntClock_Start();  /* Enable the clock */
 244              		.loc 1 219 0
 245 0050 FFF7FEFF 		bl	UART_Linux_IntClock_Start
 220:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_Linux.c **** 
 222:Generated_Source\PSoC5/UART_Linux.c ****     CyExitCriticalSection(enableInterrupts);
 246              		.loc 1 222 0
 247 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 248 0056 1846     		mov	r0, r3
 249 0058 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/UART_Linux.c **** }
 250              		.loc 1 223 0
 251 005c 00BF     		nop
 252 005e 0837     		adds	r7, r7, #8
 253              		.cfi_def_cfa_offset 8
 254 0060 BD46     		mov	sp, r7
 255              		.cfi_def_cfa_register 13
 256              		@ sp needed
 257 0062 80BD     		pop	{r7, pc}
 258              	.L10:
 259              		.align	2
 260              	.L9:
 261 0064 92640040 		.word	1073767570
 262 0068 95640040 		.word	1073767573
 263 006c 00E100E0 		.word	-536813312
 264 0070 96650040 		.word	1073767830
 265 0074 80E200E0 		.word	-536812928
 266              		.cfi_endproc
 267              	.LFE2:
 268              		.size	UART_Linux_Enable, .-UART_Linux_Enable
 269              		.section	.text.UART_Linux_Stop,"ax",%progbits
 270              		.align	2
 271              		.global	UART_Linux_Stop
 272              		.thumb
 273              		.thumb_func
 274              		.type	UART_Linux_Stop, %function
 275              	UART_Linux_Stop:
 276              	.LFB3:
 224:Generated_Source\PSoC5/UART_Linux.c **** 
 225:Generated_Source\PSoC5/UART_Linux.c **** 
 226:Generated_Source\PSoC5/UART_Linux.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_Linux.c **** * Function Name: UART_Linux_Stop
 228:Generated_Source\PSoC5/UART_Linux.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_Linux.c **** *
 230:Generated_Source\PSoC5/UART_Linux.c **** * Summary:
 231:Generated_Source\PSoC5/UART_Linux.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_Linux.c **** *
 233:Generated_Source\PSoC5/UART_Linux.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_Linux.c **** *  None.
 235:Generated_Source\PSoC5/UART_Linux.c **** *
 236:Generated_Source\PSoC5/UART_Linux.c **** * Return:
 237:Generated_Source\PSoC5/UART_Linux.c **** *  None.
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 10


 238:Generated_Source\PSoC5/UART_Linux.c **** *
 239:Generated_Source\PSoC5/UART_Linux.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_Linux.c **** void UART_Linux_Stop(void) 
 241:Generated_Source\PSoC5/UART_Linux.c **** {
 277              		.loc 1 241 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 8
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281 0000 80B5     		push	{r7, lr}
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 82B0     		sub	sp, sp, #8
 286              		.cfi_def_cfa_offset 16
 287 0004 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/UART_Linux.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_Linux.c ****     enableInterrupts = CyEnterCriticalSection();
 289              		.loc 1 243 0
 290 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 291 000a 0346     		mov	r3, r0
 292 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/UART_Linux.c **** 
 245:Generated_Source\PSoC5/UART_Linux.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXBITCTR_CONTROL_REG &= (uint8) ~UART_Linux_CNTR_ENABLE;
 293              		.loc 1 247 0
 294 000e 144A     		ldr	r2, .L12
 295 0010 134B     		ldr	r3, .L12
 296 0012 1B78     		ldrb	r3, [r3]
 297 0014 DBB2     		uxtb	r3, r3
 298 0016 23F02003 		bic	r3, r3, #32
 299 001a DBB2     		uxtb	r3, r3
 300 001c 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_Linux.c **** 
 250:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_Linux.c ****         #if(!UART_Linux_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_TXBITCTR_CONTROL_REG &= (uint8) ~UART_Linux_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (!UART_Linux_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_Linux.c **** 
 256:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_IntClock_Stop();   /* Disable the clock */
 301              		.loc 1 257 0
 302 001e FFF7FEFF 		bl	UART_Linux_IntClock_Stop
 258:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_Linux.c **** 
 260:Generated_Source\PSoC5/UART_Linux.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXSTATUS_ACTL_REG  &= (uint8) ~UART_Linux_INT_ENABLE;
 303              		.loc 1 262 0
 304 0022 104A     		ldr	r2, .L12+4
 305 0024 0F4B     		ldr	r3, .L12+4
 306 0026 1B78     		ldrb	r3, [r3]
 307 0028 DBB2     		uxtb	r3, r3
 308 002a 23F01003 		bic	r3, r3, #16
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 11


 309 002e DBB2     		uxtb	r3, r3
 310 0030 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART_Linux.c **** 
 264:Generated_Source\PSoC5/UART_Linux.c ****         #if (UART_Linux_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_DisableRxInt();
 311              		.loc 1 265 0
 312 0032 0D4B     		ldr	r3, .L12+8
 313 0034 0422     		movs	r2, #4
 314 0036 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (UART_Linux_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_Linux.c **** 
 269:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_TXSTATUS_ACTL_REG &= (uint8) ~UART_Linux_INT_ENABLE;
 315              		.loc 1 270 0
 316 0038 0C4A     		ldr	r2, .L12+12
 317 003a 0C4B     		ldr	r3, .L12+12
 318 003c 1B78     		ldrb	r3, [r3]
 319 003e DBB2     		uxtb	r3, r3
 320 0040 23F01003 		bic	r3, r3, #16
 321 0044 DBB2     		uxtb	r3, r3
 322 0046 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_Linux.c **** 
 272:Generated_Source\PSoC5/UART_Linux.c ****         #if (UART_Linux_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_DisableTxInt();
 323              		.loc 1 273 0
 324 0048 074B     		ldr	r3, .L12+8
 325 004a 0822     		movs	r2, #8
 326 004c 1A60     		str	r2, [r3]
 274:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (UART_Linux_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_Linux.c **** 
 277:Generated_Source\PSoC5/UART_Linux.c ****     CyExitCriticalSection(enableInterrupts);
 327              		.loc 1 277 0
 328 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 329 0050 1846     		mov	r0, r3
 330 0052 FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC5/UART_Linux.c **** }
 331              		.loc 1 278 0
 332 0056 00BF     		nop
 333 0058 0837     		adds	r7, r7, #8
 334              		.cfi_def_cfa_offset 8
 335 005a BD46     		mov	sp, r7
 336              		.cfi_def_cfa_register 13
 337              		@ sp needed
 338 005c 80BD     		pop	{r7, pc}
 339              	.L13:
 340 005e 00BF     		.align	2
 341              	.L12:
 342 0060 92640040 		.word	1073767570
 343 0064 95640040 		.word	1073767573
 344 0068 80E100E0 		.word	-536813184
 345 006c 96650040 		.word	1073767830
 346              		.cfi_endproc
 347              	.LFE3:
 348              		.size	UART_Linux_Stop, .-UART_Linux_Stop
 349              		.section	.text.UART_Linux_ReadControlRegister,"ax",%progbits
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 12


 350              		.align	2
 351              		.global	UART_Linux_ReadControlRegister
 352              		.thumb
 353              		.thumb_func
 354              		.type	UART_Linux_ReadControlRegister, %function
 355              	UART_Linux_ReadControlRegister:
 356              	.LFB4:
 279:Generated_Source\PSoC5/UART_Linux.c **** 
 280:Generated_Source\PSoC5/UART_Linux.c **** 
 281:Generated_Source\PSoC5/UART_Linux.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_Linux.c **** * Function Name: UART_Linux_ReadControlRegister
 283:Generated_Source\PSoC5/UART_Linux.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_Linux.c **** *
 285:Generated_Source\PSoC5/UART_Linux.c **** * Summary:
 286:Generated_Source\PSoC5/UART_Linux.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_Linux.c **** *
 288:Generated_Source\PSoC5/UART_Linux.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_Linux.c **** *  None.
 290:Generated_Source\PSoC5/UART_Linux.c **** *
 291:Generated_Source\PSoC5/UART_Linux.c **** * Return:
 292:Generated_Source\PSoC5/UART_Linux.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_Linux.c **** *
 294:Generated_Source\PSoC5/UART_Linux.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_Linux.c **** uint8 UART_Linux_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_Linux.c **** {
 357              		.loc 1 296 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 0000 80B4     		push	{r7}
 363              		.cfi_def_cfa_offset 4
 364              		.cfi_offset 7, -4
 365 0002 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_Linux.c ****         return(0u);
 367              		.loc 1 298 0
 368 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC5/UART_Linux.c ****     #else
 300:Generated_Source\PSoC5/UART_Linux.c ****         return(UART_Linux_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_Linux.c **** }
 369              		.loc 1 302 0
 370 0006 1846     		mov	r0, r3
 371 0008 BD46     		mov	sp, r7
 372              		.cfi_def_cfa_register 13
 373              		@ sp needed
 374 000a 80BC     		pop	{r7}
 375              		.cfi_restore 7
 376              		.cfi_def_cfa_offset 0
 377 000c 7047     		bx	lr
 378              		.cfi_endproc
 379              	.LFE4:
 380              		.size	UART_Linux_ReadControlRegister, .-UART_Linux_ReadControlRegister
 381 000e 00BF     		.section	.text.UART_Linux_WriteControlRegister,"ax",%progbits
 382              		.align	2
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 13


 383              		.global	UART_Linux_WriteControlRegister
 384              		.thumb
 385              		.thumb_func
 386              		.type	UART_Linux_WriteControlRegister, %function
 387              	UART_Linux_WriteControlRegister:
 388              	.LFB5:
 303:Generated_Source\PSoC5/UART_Linux.c **** 
 304:Generated_Source\PSoC5/UART_Linux.c **** 
 305:Generated_Source\PSoC5/UART_Linux.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_Linux.c **** * Function Name: UART_Linux_WriteControlRegister
 307:Generated_Source\PSoC5/UART_Linux.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_Linux.c **** *
 309:Generated_Source\PSoC5/UART_Linux.c **** * Summary:
 310:Generated_Source\PSoC5/UART_Linux.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_Linux.c **** *
 312:Generated_Source\PSoC5/UART_Linux.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_Linux.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_Linux.c **** *
 315:Generated_Source\PSoC5/UART_Linux.c **** * Return:
 316:Generated_Source\PSoC5/UART_Linux.c **** *  None.
 317:Generated_Source\PSoC5/UART_Linux.c **** *
 318:Generated_Source\PSoC5/UART_Linux.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_Linux.c **** void  UART_Linux_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_Linux.c **** {
 389              		.loc 1 320 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 8
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394 0000 80B4     		push	{r7}
 395              		.cfi_def_cfa_offset 4
 396              		.cfi_offset 7, -4
 397 0002 83B0     		sub	sp, sp, #12
 398              		.cfi_def_cfa_offset 16
 399 0004 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 401 0006 0346     		mov	r3, r0
 402 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_Linux.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_Linux.c ****         {
 324:Generated_Source\PSoC5/UART_Linux.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_Linux.c ****         }
 326:Generated_Source\PSoC5/UART_Linux.c ****     #else
 327:Generated_Source\PSoC5/UART_Linux.c ****        UART_Linux_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_Linux.c **** }
 403              		.loc 1 329 0
 404 000a 00BF     		nop
 405 000c 0C37     		adds	r7, r7, #12
 406              		.cfi_def_cfa_offset 4
 407 000e BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 0010 80BC     		pop	{r7}
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 14


 413 0012 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE5:
 416              		.size	UART_Linux_WriteControlRegister, .-UART_Linux_WriteControlRegister
 417              		.section	.text.UART_Linux_SetRxInterruptMode,"ax",%progbits
 418              		.align	2
 419              		.global	UART_Linux_SetRxInterruptMode
 420              		.thumb
 421              		.thumb_func
 422              		.type	UART_Linux_SetRxInterruptMode, %function
 423              	UART_Linux_SetRxInterruptMode:
 424              	.LFB6:
 330:Generated_Source\PSoC5/UART_Linux.c **** 
 331:Generated_Source\PSoC5/UART_Linux.c **** 
 332:Generated_Source\PSoC5/UART_Linux.c **** #if(UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_Linux.c ****     *
 337:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_Linux.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_Linux.c ****     *
 340:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_Linux.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_Linux.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_Linux.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_Linux.c ****     *      UART_Linux_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_Linux.c ****     *      UART_Linux_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_Linux.c ****     *      UART_Linux_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_Linux.c ****     *      UART_Linux_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_Linux.c ****     *      UART_Linux_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_Linux.c ****     *      UART_Linux_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_Linux.c ****     *      UART_Linux_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_Linux.c ****     *
 352:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 353:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 354:Generated_Source\PSoC5/UART_Linux.c ****     *
 355:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_Linux.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_Linux.c ****     *
 358:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_Linux.c ****     {
 425              		.loc 1 360 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0002 83B0     		sub	sp, sp, #12
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 437 0006 0346     		mov	r3, r0
 438 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 15


 361:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXSTATUS_MASK_REG  = intSrc;
 439              		.loc 1 361 0
 440 000a 044A     		ldr	r2, .L18
 441 000c FB79     		ldrb	r3, [r7, #7]
 442 000e 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC5/UART_Linux.c ****     }
 443              		.loc 1 362 0
 444 0010 00BF     		nop
 445 0012 0C37     		adds	r7, r7, #12
 446              		.cfi_def_cfa_offset 4
 447 0014 BD46     		mov	sp, r7
 448              		.cfi_def_cfa_register 13
 449              		@ sp needed
 450 0016 80BC     		pop	{r7}
 451              		.cfi_restore 7
 452              		.cfi_def_cfa_offset 0
 453 0018 7047     		bx	lr
 454              	.L19:
 455 001a 00BF     		.align	2
 456              	.L18:
 457 001c 85640040 		.word	1073767557
 458              		.cfi_endproc
 459              	.LFE6:
 460              		.size	UART_Linux_SetRxInterruptMode, .-UART_Linux_SetRxInterruptMode
 461              		.section	.text.UART_Linux_ReadRxData,"ax",%progbits
 462              		.align	2
 463              		.global	UART_Linux_ReadRxData
 464              		.thumb
 465              		.thumb_func
 466              		.type	UART_Linux_ReadRxData, %function
 467              	UART_Linux_ReadRxData:
 468              	.LFB7:
 363:Generated_Source\PSoC5/UART_Linux.c **** 
 364:Generated_Source\PSoC5/UART_Linux.c **** 
 365:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_ReadRxData
 367:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_Linux.c ****     *
 369:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_Linux.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_Linux.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_Linux.c ****     *
 373:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 375:Generated_Source\PSoC5/UART_Linux.c ****     *
 376:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 377:Generated_Source\PSoC5/UART_Linux.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_Linux.c ****     *
 379:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_Linux.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_Linux.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_Linux.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_Linux.c ****     *
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 16


 388:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
 390:Generated_Source\PSoC5/UART_Linux.c ****     *
 391:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_Linux.c ****     uint8 UART_Linux_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_Linux.c ****     {
 469              		.loc 1 393 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 8
 472              		@ frame_needed = 1, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 474 0000 80B4     		push	{r7}
 475              		.cfi_def_cfa_offset 4
 476              		.cfi_offset 7, -4
 477 0002 83B0     		sub	sp, sp, #12
 478              		.cfi_def_cfa_offset 16
 479 0004 00AF     		add	r7, sp, #0
 480              		.cfi_def_cfa_register 7
 394:Generated_Source\PSoC5/UART_Linux.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_Linux.c **** 
 396:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_Linux.c **** 
 398:Generated_Source\PSoC5/UART_Linux.c ****         uint16 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_Linux.c ****         uint16 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_Linux.c **** 
 401:Generated_Source\PSoC5/UART_Linux.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_DisableRxInt();
 481              		.loc 1 402 0
 482 0006 1B4B     		ldr	r3, .L27
 483 0008 0422     		movs	r2, #4
 484 000a 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/UART_Linux.c **** 
 404:Generated_Source\PSoC5/UART_Linux.c ****         locRxBufferRead  = UART_Linux_rxBufferRead;
 485              		.loc 1 404 0
 486 000c 1A4B     		ldr	r3, .L27+4
 487 000e 1B88     		ldrh	r3, [r3]	@ movhi
 488 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 405:Generated_Source\PSoC5/UART_Linux.c ****         locRxBufferWrite = UART_Linux_rxBufferWrite;
 489              		.loc 1 405 0
 490 0012 1A4B     		ldr	r3, .L27+8
 491 0014 1B88     		ldrh	r3, [r3]	@ movhi
 492 0016 7B80     		strh	r3, [r7, #2]	@ movhi
 406:Generated_Source\PSoC5/UART_Linux.c **** 
 407:Generated_Source\PSoC5/UART_Linux.c ****         if( (UART_Linux_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 493              		.loc 1 407 0
 494 0018 194B     		ldr	r3, .L27+12
 495 001a 1B78     		ldrb	r3, [r3]
 496 001c DBB2     		uxtb	r3, r3
 497 001e 002B     		cmp	r3, #0
 498 0020 03D1     		bne	.L21
 499              		.loc 1 407 0 is_stmt 0 discriminator 1
 500 0022 BA88     		ldrh	r2, [r7, #4]
 501 0024 7B88     		ldrh	r3, [r7, #2]
 502 0026 9A42     		cmp	r2, r3
 503 0028 18D0     		beq	.L22
 504              	.L21:
 408:Generated_Source\PSoC5/UART_Linux.c ****         {
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 17


 409:Generated_Source\PSoC5/UART_Linux.c ****             rxData = UART_Linux_rxBuffer[locRxBufferRead];
 505              		.loc 1 409 0 is_stmt 1
 506 002a BB88     		ldrh	r3, [r7, #4]
 507 002c 154A     		ldr	r2, .L27+16
 508 002e D35C     		ldrb	r3, [r2, r3]
 509 0030 FB71     		strb	r3, [r7, #7]
 410:Generated_Source\PSoC5/UART_Linux.c ****             locRxBufferRead++;
 510              		.loc 1 410 0
 511 0032 BB88     		ldrh	r3, [r7, #4]
 512 0034 0133     		adds	r3, r3, #1
 513 0036 BB80     		strh	r3, [r7, #4]	@ movhi
 411:Generated_Source\PSoC5/UART_Linux.c **** 
 412:Generated_Source\PSoC5/UART_Linux.c ****             if(locRxBufferRead >= UART_Linux_RX_BUFFER_SIZE)
 514              		.loc 1 412 0
 515 0038 BB88     		ldrh	r3, [r7, #4]
 516 003a B3F5806F 		cmp	r3, #1024
 517 003e 01D3     		bcc	.L23
 413:Generated_Source\PSoC5/UART_Linux.c ****             {
 414:Generated_Source\PSoC5/UART_Linux.c ****                 locRxBufferRead = 0u;
 518              		.loc 1 414 0
 519 0040 0023     		movs	r3, #0
 520 0042 BB80     		strh	r3, [r7, #4]	@ movhi
 521              	.L23:
 415:Generated_Source\PSoC5/UART_Linux.c ****             }
 416:Generated_Source\PSoC5/UART_Linux.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_rxBufferRead = locRxBufferRead;
 522              		.loc 1 417 0
 523 0044 0C4A     		ldr	r2, .L27+4
 524 0046 BB88     		ldrh	r3, [r7, #4]	@ movhi
 525 0048 1380     		strh	r3, [r2]	@ movhi
 418:Generated_Source\PSoC5/UART_Linux.c **** 
 419:Generated_Source\PSoC5/UART_Linux.c ****             if(UART_Linux_rxBufferLoopDetect != 0u)
 526              		.loc 1 419 0
 527 004a 0D4B     		ldr	r3, .L27+12
 528 004c 1B78     		ldrb	r3, [r3]
 529 004e DBB2     		uxtb	r3, r3
 530 0050 002B     		cmp	r3, #0
 531 0052 06D0     		beq	.L25
 420:Generated_Source\PSoC5/UART_Linux.c ****             {
 421:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_rxBufferLoopDetect = 0u;
 532              		.loc 1 421 0
 533 0054 0A4B     		ldr	r3, .L27+12
 534 0056 0022     		movs	r2, #0
 535 0058 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC5/UART_Linux.c ****             {
 536              		.loc 1 419 0
 537 005a 02E0     		b	.L25
 538              	.L22:
 422:Generated_Source\PSoC5/UART_Linux.c ****                 #if ((UART_Linux_RX_INTERRUPT_ENABLED) && (UART_Linux_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_Linux.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_Linux.c ****                     #if( UART_Linux_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_Linux.c ****                         if((UART_Linux_CONTROL_REG & UART_Linux_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_Linux.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_Linux.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_Linux.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_Linux.c ****                             */
 430:Generated_Source\PSoC5/UART_Linux.c ****                             UART_Linux_RXSTATUS_MASK_REG  |= UART_Linux_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 18


 431:Generated_Source\PSoC5/UART_Linux.c ****                         }
 432:Generated_Source\PSoC5/UART_Linux.c ****                     #else
 433:Generated_Source\PSoC5/UART_Linux.c ****                         UART_Linux_RXSTATUS_MASK_REG  |= UART_Linux_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_Linux.c ****                     #endif /* end UART_Linux_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_Linux.c ****                 #endif /* ((UART_Linux_RX_INTERRUPT_ENABLED) && (UART_Linux_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_Linux.c ****             }
 437:Generated_Source\PSoC5/UART_Linux.c ****         }
 438:Generated_Source\PSoC5/UART_Linux.c ****         else
 439:Generated_Source\PSoC5/UART_Linux.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_Linux.c ****             rxData = UART_Linux_RXDATA_REG;
 539              		.loc 1 440 0
 540 005c 0A4B     		ldr	r3, .L27+20
 541 005e 1B78     		ldrb	r3, [r3]
 542 0060 FB71     		strb	r3, [r7, #7]
 543              	.L25:
 441:Generated_Source\PSoC5/UART_Linux.c ****         }
 442:Generated_Source\PSoC5/UART_Linux.c **** 
 443:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_EnableRxInt();
 544              		.loc 1 443 0
 545 0062 0A4B     		ldr	r3, .L27+24
 546 0064 0422     		movs	r2, #4
 547 0066 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/UART_Linux.c **** 
 445:Generated_Source\PSoC5/UART_Linux.c ****     #else
 446:Generated_Source\PSoC5/UART_Linux.c **** 
 447:Generated_Source\PSoC5/UART_Linux.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_Linux.c ****         rxData = UART_Linux_RXDATA_REG;
 449:Generated_Source\PSoC5/UART_Linux.c **** 
 450:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_Linux.c **** 
 452:Generated_Source\PSoC5/UART_Linux.c ****         return(rxData);
 548              		.loc 1 452 0
 549 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:Generated_Source\PSoC5/UART_Linux.c ****     }
 550              		.loc 1 453 0
 551 006a 1846     		mov	r0, r3
 552 006c 0C37     		adds	r7, r7, #12
 553              		.cfi_def_cfa_offset 4
 554 006e BD46     		mov	sp, r7
 555              		.cfi_def_cfa_register 13
 556              		@ sp needed
 557 0070 80BC     		pop	{r7}
 558              		.cfi_restore 7
 559              		.cfi_def_cfa_offset 0
 560 0072 7047     		bx	lr
 561              	.L28:
 562              		.align	2
 563              	.L27:
 564 0074 80E100E0 		.word	-536813184
 565 0078 00000000 		.word	UART_Linux_rxBufferRead
 566 007c 00000000 		.word	UART_Linux_rxBufferWrite
 567 0080 00000000 		.word	UART_Linux_rxBufferLoopDetect
 568 0084 00000000 		.word	UART_Linux_rxBuffer
 569 0088 45640040 		.word	1073767493
 570 008c 00E100E0 		.word	-536813312
 571              		.cfi_endproc
 572              	.LFE7:
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 19


 573              		.size	UART_Linux_ReadRxData, .-UART_Linux_ReadRxData
 574              		.section	.text.UART_Linux_ReadRxStatus,"ax",%progbits
 575              		.align	2
 576              		.global	UART_Linux_ReadRxStatus
 577              		.thumb
 578              		.thumb_func
 579              		.type	UART_Linux_ReadRxStatus, %function
 580              	UART_Linux_ReadRxStatus:
 581              	.LFB8:
 454:Generated_Source\PSoC5/UART_Linux.c **** 
 455:Generated_Source\PSoC5/UART_Linux.c **** 
 456:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_ReadRxStatus
 458:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_Linux.c ****     *
 460:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_Linux.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_Linux.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_Linux.c ****     *
 464:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 466:Generated_Source\PSoC5/UART_Linux.c ****     *
 467:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 468:Generated_Source\PSoC5/UART_Linux.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_Linux.c ****     *
 470:Generated_Source\PSoC5/UART_Linux.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_Linux.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_Linux.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_Linux.c ****     *
 476:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_Linux.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_Linux.c ****     *   UART_Linux_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_Linux.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_Linux.c ****     *   UART_Linux_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_Linux.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_Linux.c ****     *
 484:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_Linux.c ****     uint8 UART_Linux_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_Linux.c ****     {
 582              		.loc 1 486 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 8
 585              		@ frame_needed = 1, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587 0000 80B4     		push	{r7}
 588              		.cfi_def_cfa_offset 4
 589              		.cfi_offset 7, -4
 590 0002 83B0     		sub	sp, sp, #12
 591              		.cfi_def_cfa_offset 16
 592 0004 00AF     		add	r7, sp, #0
 593              		.cfi_def_cfa_register 7
 487:Generated_Source\PSoC5/UART_Linux.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_Linux.c **** 
 489:Generated_Source\PSoC5/UART_Linux.c ****         status = UART_Linux_RXSTATUS_REG & UART_Linux_RX_HW_MASK;
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 20


 594              		.loc 1 489 0
 595 0006 0C4B     		ldr	r3, .L32
 596 0008 1B78     		ldrb	r3, [r3]
 597 000a DBB2     		uxtb	r3, r3
 598 000c 03F07F03 		and	r3, r3, #127
 599 0010 FB71     		strb	r3, [r7, #7]
 490:Generated_Source\PSoC5/UART_Linux.c **** 
 491:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_Linux.c ****         if(UART_Linux_rxBufferOverflow != 0u)
 600              		.loc 1 492 0
 601 0012 0A4B     		ldr	r3, .L32+4
 602 0014 1B78     		ldrb	r3, [r3]
 603 0016 DBB2     		uxtb	r3, r3
 604 0018 002B     		cmp	r3, #0
 605 001a 06D0     		beq	.L30
 493:Generated_Source\PSoC5/UART_Linux.c ****         {
 494:Generated_Source\PSoC5/UART_Linux.c ****             status |= UART_Linux_RX_STS_SOFT_BUFF_OVER;
 606              		.loc 1 494 0
 607 001c FB79     		ldrb	r3, [r7, #7]
 608 001e 63F07F03 		orn	r3, r3, #127
 609 0022 FB71     		strb	r3, [r7, #7]
 495:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_rxBufferOverflow = 0u;
 610              		.loc 1 495 0
 611 0024 054B     		ldr	r3, .L32+4
 612 0026 0022     		movs	r2, #0
 613 0028 1A70     		strb	r2, [r3]
 614              	.L30:
 496:Generated_Source\PSoC5/UART_Linux.c ****         }
 497:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_Linux.c **** 
 499:Generated_Source\PSoC5/UART_Linux.c ****         return(status);
 615              		.loc 1 499 0
 616 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:Generated_Source\PSoC5/UART_Linux.c ****     }
 617              		.loc 1 500 0
 618 002c 1846     		mov	r0, r3
 619 002e 0C37     		adds	r7, r7, #12
 620              		.cfi_def_cfa_offset 4
 621 0030 BD46     		mov	sp, r7
 622              		.cfi_def_cfa_register 13
 623              		@ sp needed
 624 0032 80BC     		pop	{r7}
 625              		.cfi_restore 7
 626              		.cfi_def_cfa_offset 0
 627 0034 7047     		bx	lr
 628              	.L33:
 629 0036 00BF     		.align	2
 630              	.L32:
 631 0038 65640040 		.word	1073767525
 632 003c 00000000 		.word	UART_Linux_rxBufferOverflow
 633              		.cfi_endproc
 634              	.LFE8:
 635              		.size	UART_Linux_ReadRxStatus, .-UART_Linux_ReadRxStatus
 636              		.section	.text.UART_Linux_GetChar,"ax",%progbits
 637              		.align	2
 638              		.global	UART_Linux_GetChar
 639              		.thumb
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 21


 640              		.thumb_func
 641              		.type	UART_Linux_GetChar, %function
 642              	UART_Linux_GetChar:
 643              	.LFB9:
 501:Generated_Source\PSoC5/UART_Linux.c **** 
 502:Generated_Source\PSoC5/UART_Linux.c **** 
 503:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_GetChar
 505:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_Linux.c ****     *
 507:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_Linux.c ****     *  Returns the last received byte of data. UART_Linux_GetChar() is
 509:Generated_Source\PSoC5/UART_Linux.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_Linux.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_Linux.c ****     *
 512:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 514:Generated_Source\PSoC5/UART_Linux.c ****     *
 515:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 516:Generated_Source\PSoC5/UART_Linux.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_Linux.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_Linux.c ****     *
 519:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_Linux.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_Linux.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_Linux.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_Linux.c ****     *
 528:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
 530:Generated_Source\PSoC5/UART_Linux.c ****     *
 531:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_Linux.c ****     uint8 UART_Linux_GetChar(void) 
 533:Generated_Source\PSoC5/UART_Linux.c ****     {
 644              		.loc 1 533 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 8
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649 0000 80B4     		push	{r7}
 650              		.cfi_def_cfa_offset 4
 651              		.cfi_offset 7, -4
 652 0002 83B0     		sub	sp, sp, #12
 653              		.cfi_def_cfa_offset 16
 654 0004 00AF     		add	r7, sp, #0
 655              		.cfi_def_cfa_register 7
 534:Generated_Source\PSoC5/UART_Linux.c ****         uint8 rxData = 0u;
 656              		.loc 1 534 0
 657 0006 0023     		movs	r3, #0
 658 0008 FB71     		strb	r3, [r7, #7]
 535:Generated_Source\PSoC5/UART_Linux.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_Linux.c **** 
 537:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_Linux.c ****         uint16 locRxBufferRead;
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 22


 539:Generated_Source\PSoC5/UART_Linux.c ****         uint16 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_Linux.c **** 
 541:Generated_Source\PSoC5/UART_Linux.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_DisableRxInt();
 659              		.loc 1 542 0
 660 000a 234B     		ldr	r3, .L41
 661 000c 0422     		movs	r2, #4
 662 000e 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/UART_Linux.c **** 
 544:Generated_Source\PSoC5/UART_Linux.c ****         locRxBufferRead  = UART_Linux_rxBufferRead;
 663              		.loc 1 544 0
 664 0010 224B     		ldr	r3, .L41+4
 665 0012 1B88     		ldrh	r3, [r3]	@ movhi
 666 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 545:Generated_Source\PSoC5/UART_Linux.c ****         locRxBufferWrite = UART_Linux_rxBufferWrite;
 667              		.loc 1 545 0
 668 0016 224B     		ldr	r3, .L41+8
 669 0018 1B88     		ldrh	r3, [r3]	@ movhi
 670 001a 7B80     		strh	r3, [r7, #2]	@ movhi
 546:Generated_Source\PSoC5/UART_Linux.c **** 
 547:Generated_Source\PSoC5/UART_Linux.c ****         if( (UART_Linux_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 671              		.loc 1 547 0
 672 001c 214B     		ldr	r3, .L41+12
 673 001e 1B78     		ldrb	r3, [r3]
 674 0020 DBB2     		uxtb	r3, r3
 675 0022 002B     		cmp	r3, #0
 676 0024 03D1     		bne	.L35
 677              		.loc 1 547 0 is_stmt 0 discriminator 1
 678 0026 BA88     		ldrh	r2, [r7, #4]
 679 0028 7B88     		ldrh	r3, [r7, #2]
 680 002a 9A42     		cmp	r2, r3
 681 002c 18D0     		beq	.L36
 682              	.L35:
 548:Generated_Source\PSoC5/UART_Linux.c ****         {
 549:Generated_Source\PSoC5/UART_Linux.c ****             rxData = UART_Linux_rxBuffer[locRxBufferRead];
 683              		.loc 1 549 0 is_stmt 1
 684 002e BB88     		ldrh	r3, [r7, #4]
 685 0030 1D4A     		ldr	r2, .L41+16
 686 0032 D35C     		ldrb	r3, [r2, r3]
 687 0034 FB71     		strb	r3, [r7, #7]
 550:Generated_Source\PSoC5/UART_Linux.c ****             locRxBufferRead++;
 688              		.loc 1 550 0
 689 0036 BB88     		ldrh	r3, [r7, #4]
 690 0038 0133     		adds	r3, r3, #1
 691 003a BB80     		strh	r3, [r7, #4]	@ movhi
 551:Generated_Source\PSoC5/UART_Linux.c ****             if(locRxBufferRead >= UART_Linux_RX_BUFFER_SIZE)
 692              		.loc 1 551 0
 693 003c BB88     		ldrh	r3, [r7, #4]
 694 003e B3F5806F 		cmp	r3, #1024
 695 0042 01D3     		bcc	.L37
 552:Generated_Source\PSoC5/UART_Linux.c ****             {
 553:Generated_Source\PSoC5/UART_Linux.c ****                 locRxBufferRead = 0u;
 696              		.loc 1 553 0
 697 0044 0023     		movs	r3, #0
 698 0046 BB80     		strh	r3, [r7, #4]	@ movhi
 699              	.L37:
 554:Generated_Source\PSoC5/UART_Linux.c ****             }
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 23


 555:Generated_Source\PSoC5/UART_Linux.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_rxBufferRead = locRxBufferRead;
 700              		.loc 1 556 0
 701 0048 144A     		ldr	r2, .L41+4
 702 004a BB88     		ldrh	r3, [r7, #4]	@ movhi
 703 004c 1380     		strh	r3, [r2]	@ movhi
 557:Generated_Source\PSoC5/UART_Linux.c **** 
 558:Generated_Source\PSoC5/UART_Linux.c ****             if(UART_Linux_rxBufferLoopDetect != 0u)
 704              		.loc 1 558 0
 705 004e 154B     		ldr	r3, .L41+12
 706 0050 1B78     		ldrb	r3, [r3]
 707 0052 DBB2     		uxtb	r3, r3
 708 0054 002B     		cmp	r3, #0
 709 0056 15D0     		beq	.L39
 559:Generated_Source\PSoC5/UART_Linux.c ****             {
 560:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_rxBufferLoopDetect = 0u;
 710              		.loc 1 560 0
 711 0058 124B     		ldr	r3, .L41+12
 712 005a 0022     		movs	r2, #0
 713 005c 1A70     		strb	r2, [r3]
 558:Generated_Source\PSoC5/UART_Linux.c ****             {
 714              		.loc 1 558 0
 715 005e 11E0     		b	.L39
 716              	.L36:
 561:Generated_Source\PSoC5/UART_Linux.c ****                 #if( (UART_Linux_RX_INTERRUPT_ENABLED) && (UART_Linux_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_Linux.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_Linux.c ****                     #if( UART_Linux_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_Linux.c ****                         if((UART_Linux_CONTROL_REG & UART_Linux_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_Linux.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_Linux.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_Linux.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_Linux.c ****                             */
 569:Generated_Source\PSoC5/UART_Linux.c ****                             UART_Linux_RXSTATUS_MASK_REG |= UART_Linux_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_Linux.c ****                         }
 571:Generated_Source\PSoC5/UART_Linux.c ****                     #else
 572:Generated_Source\PSoC5/UART_Linux.c ****                         UART_Linux_RXSTATUS_MASK_REG |= UART_Linux_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_Linux.c ****                     #endif /* end UART_Linux_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_Linux.c ****                 #endif /* UART_Linux_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_Linux.c ****             }
 576:Generated_Source\PSoC5/UART_Linux.c **** 
 577:Generated_Source\PSoC5/UART_Linux.c ****         }
 578:Generated_Source\PSoC5/UART_Linux.c ****         else
 579:Generated_Source\PSoC5/UART_Linux.c ****         {   rxStatus = UART_Linux_RXSTATUS_REG;
 717              		.loc 1 579 0
 718 0060 124B     		ldr	r3, .L41+20
 719 0062 1B78     		ldrb	r3, [r3]
 720 0064 7B70     		strb	r3, [r7, #1]
 580:Generated_Source\PSoC5/UART_Linux.c ****             if((rxStatus & UART_Linux_RX_STS_FIFO_NOTEMPTY) != 0u)
 721              		.loc 1 580 0
 722 0066 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 723 0068 03F02003 		and	r3, r3, #32
 724 006c 002B     		cmp	r3, #0
 725 006e 09D0     		beq	.L39
 581:Generated_Source\PSoC5/UART_Linux.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_Linux.c ****                 rxData = UART_Linux_RXDATA_REG;
 726              		.loc 1 582 0
 727 0070 0F4B     		ldr	r3, .L41+24
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 24


 728 0072 1B78     		ldrb	r3, [r3]
 729 0074 FB71     		strb	r3, [r7, #7]
 583:Generated_Source\PSoC5/UART_Linux.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_Linux.c ****                 if((rxStatus & (UART_Linux_RX_STS_BREAK | UART_Linux_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_Linux.c ****                                 UART_Linux_RX_STS_STOP_ERROR | UART_Linux_RX_STS_OVERRUN)) != 0u)
 730              		.loc 1 585 0
 731 0076 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 732 0078 03F01E03 		and	r3, r3, #30
 584:Generated_Source\PSoC5/UART_Linux.c ****                                 UART_Linux_RX_STS_STOP_ERROR | UART_Linux_RX_STS_OVERRUN)) != 0u)
 733              		.loc 1 584 0
 734 007c 002B     		cmp	r3, #0
 735 007e 01D0     		beq	.L39
 586:Generated_Source\PSoC5/UART_Linux.c ****                 {
 587:Generated_Source\PSoC5/UART_Linux.c ****                     rxData = 0u;
 736              		.loc 1 587 0
 737 0080 0023     		movs	r3, #0
 738 0082 FB71     		strb	r3, [r7, #7]
 739              	.L39:
 588:Generated_Source\PSoC5/UART_Linux.c ****                 }
 589:Generated_Source\PSoC5/UART_Linux.c ****             }
 590:Generated_Source\PSoC5/UART_Linux.c ****         }
 591:Generated_Source\PSoC5/UART_Linux.c **** 
 592:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_EnableRxInt();
 740              		.loc 1 592 0
 741 0084 0B4B     		ldr	r3, .L41+28
 742 0086 0422     		movs	r2, #4
 743 0088 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/UART_Linux.c **** 
 594:Generated_Source\PSoC5/UART_Linux.c ****     #else
 595:Generated_Source\PSoC5/UART_Linux.c **** 
 596:Generated_Source\PSoC5/UART_Linux.c ****         rxStatus =UART_Linux_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART_Linux.c ****         if((rxStatus & UART_Linux_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART_Linux.c ****         {
 599:Generated_Source\PSoC5/UART_Linux.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_Linux.c ****             rxData = UART_Linux_RXDATA_REG;
 601:Generated_Source\PSoC5/UART_Linux.c **** 
 602:Generated_Source\PSoC5/UART_Linux.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_Linux.c ****             if((rxStatus & (UART_Linux_RX_STS_BREAK | UART_Linux_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART_Linux.c ****                             UART_Linux_RX_STS_STOP_ERROR | UART_Linux_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_Linux.c ****             {
 606:Generated_Source\PSoC5/UART_Linux.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART_Linux.c ****             }
 608:Generated_Source\PSoC5/UART_Linux.c ****         }
 609:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_Linux.c **** 
 611:Generated_Source\PSoC5/UART_Linux.c ****         return(rxData);
 744              		.loc 1 611 0
 745 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:Generated_Source\PSoC5/UART_Linux.c ****     }
 746              		.loc 1 612 0
 747 008c 1846     		mov	r0, r3
 748 008e 0C37     		adds	r7, r7, #12
 749              		.cfi_def_cfa_offset 4
 750 0090 BD46     		mov	sp, r7
 751              		.cfi_def_cfa_register 13
 752              		@ sp needed
 753 0092 80BC     		pop	{r7}
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 25


 754              		.cfi_restore 7
 755              		.cfi_def_cfa_offset 0
 756 0094 7047     		bx	lr
 757              	.L42:
 758 0096 00BF     		.align	2
 759              	.L41:
 760 0098 80E100E0 		.word	-536813184
 761 009c 00000000 		.word	UART_Linux_rxBufferRead
 762 00a0 00000000 		.word	UART_Linux_rxBufferWrite
 763 00a4 00000000 		.word	UART_Linux_rxBufferLoopDetect
 764 00a8 00000000 		.word	UART_Linux_rxBuffer
 765 00ac 65640040 		.word	1073767525
 766 00b0 45640040 		.word	1073767493
 767 00b4 00E100E0 		.word	-536813312
 768              		.cfi_endproc
 769              	.LFE9:
 770              		.size	UART_Linux_GetChar, .-UART_Linux_GetChar
 771              		.section	.text.UART_Linux_GetByte,"ax",%progbits
 772              		.align	2
 773              		.global	UART_Linux_GetByte
 774              		.thumb
 775              		.thumb_func
 776              		.type	UART_Linux_GetByte, %function
 777              	UART_Linux_GetByte:
 778              	.LFB10:
 613:Generated_Source\PSoC5/UART_Linux.c **** 
 614:Generated_Source\PSoC5/UART_Linux.c **** 
 615:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_GetByte
 617:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_Linux.c ****     *
 619:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_Linux.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_Linux.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_Linux.c ****     *
 623:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 625:Generated_Source\PSoC5/UART_Linux.c ****     *
 626:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 627:Generated_Source\PSoC5/UART_Linux.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_Linux.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_Linux.c ****     *
 630:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
 632:Generated_Source\PSoC5/UART_Linux.c ****     *
 633:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_Linux.c ****     uint16 UART_Linux_GetByte(void) 
 635:Generated_Source\PSoC5/UART_Linux.c ****     {
 779              		.loc 1 635 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 8
 782              		@ frame_needed = 1, uses_anonymous_args = 0
 783 0000 90B5     		push	{r4, r7, lr}
 784              		.cfi_def_cfa_offset 12
 785              		.cfi_offset 4, -12
 786              		.cfi_offset 7, -8
 787              		.cfi_offset 14, -4
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 26


 788 0002 83B0     		sub	sp, sp, #12
 789              		.cfi_def_cfa_offset 24
 790 0004 00AF     		add	r7, sp, #0
 791              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC5/UART_Linux.c ****         
 637:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_Linux.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_Linux.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_DisableRxInt();
 792              		.loc 1 640 0
 793 0006 0C4B     		ldr	r3, .L45
 794 0008 0422     		movs	r2, #4
 795 000a 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC5/UART_Linux.c ****         locErrorStatus = (uint16)UART_Linux_errorStatus;
 796              		.loc 1 641 0
 797 000c 0B4B     		ldr	r3, .L45+4
 798 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 799 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_errorStatus = 0u;
 800              		.loc 1 642 0
 801 0012 0A4B     		ldr	r3, .L45+4
 802 0014 0022     		movs	r2, #0
 803 0016 1A70     		strb	r2, [r3]
 643:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_EnableRxInt();
 804              		.loc 1 643 0
 805 0018 094B     		ldr	r3, .L45+8
 806 001a 0422     		movs	r2, #4
 807 001c 1A60     		str	r2, [r3]
 644:Generated_Source\PSoC5/UART_Linux.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_Linux_ReadRxData() );
 808              		.loc 1 644 0
 809 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 810 0020 1B02     		lsls	r3, r3, #8
 811 0022 9CB2     		uxth	r4, r3
 812 0024 FFF7FEFF 		bl	UART_Linux_ReadRxData
 813 0028 0346     		mov	r3, r0
 814 002a 9BB2     		uxth	r3, r3
 815 002c 2343     		orrs	r3, r3, r4
 816 002e 9BB2     		uxth	r3, r3
 645:Generated_Source\PSoC5/UART_Linux.c ****     #else
 646:Generated_Source\PSoC5/UART_Linux.c ****         return ( ((uint16)UART_Linux_ReadRxStatus() << 8u) | UART_Linux_ReadRxData() );
 647:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* UART_Linux_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_Linux.c ****         
 649:Generated_Source\PSoC5/UART_Linux.c ****     }
 817              		.loc 1 649 0
 818 0030 1846     		mov	r0, r3
 819 0032 0C37     		adds	r7, r7, #12
 820              		.cfi_def_cfa_offset 12
 821 0034 BD46     		mov	sp, r7
 822              		.cfi_def_cfa_register 13
 823              		@ sp needed
 824 0036 90BD     		pop	{r4, r7, pc}
 825              	.L46:
 826              		.align	2
 827              	.L45:
 828 0038 80E100E0 		.word	-536813184
 829 003c 00000000 		.word	UART_Linux_errorStatus
 830 0040 00E100E0 		.word	-536813312
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 27


 831              		.cfi_endproc
 832              	.LFE10:
 833              		.size	UART_Linux_GetByte, .-UART_Linux_GetByte
 834              		.section	.text.UART_Linux_GetRxBufferSize,"ax",%progbits
 835              		.align	2
 836              		.global	UART_Linux_GetRxBufferSize
 837              		.thumb
 838              		.thumb_func
 839              		.type	UART_Linux_GetRxBufferSize, %function
 840              	UART_Linux_GetRxBufferSize:
 841              	.LFB11:
 650:Generated_Source\PSoC5/UART_Linux.c **** 
 651:Generated_Source\PSoC5/UART_Linux.c **** 
 652:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_Linux.c ****     *
 656:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_Linux.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_Linux.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_Linux.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_Linux.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_Linux.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_Linux.c ****     *    account.
 663:Generated_Source\PSoC5/UART_Linux.c ****     *
 664:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 666:Generated_Source\PSoC5/UART_Linux.c ****     *
 667:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 668:Generated_Source\PSoC5/UART_Linux.c ****     *  uint16: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_Linux.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_Linux.c ****     *
 671:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_Linux.c ****     *
 676:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
 678:Generated_Source\PSoC5/UART_Linux.c ****     *
 679:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_Linux.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_Linux.c ****     *
 682:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_Linux.c ****     uint16 UART_Linux_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_Linux.c ****                                                             
 685:Generated_Source\PSoC5/UART_Linux.c ****     {
 842              		.loc 1 685 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 8
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847 0000 80B4     		push	{r7}
 848              		.cfi_def_cfa_offset 4
 849              		.cfi_offset 7, -4
 850 0002 83B0     		sub	sp, sp, #12
 851              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 28


 852 0004 00AF     		add	r7, sp, #0
 853              		.cfi_def_cfa_register 7
 686:Generated_Source\PSoC5/UART_Linux.c ****         uint16 size;
 687:Generated_Source\PSoC5/UART_Linux.c **** 
 688:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_Linux.c **** 
 690:Generated_Source\PSoC5/UART_Linux.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_DisableRxInt();
 854              		.loc 1 691 0
 855 0006 1E4B     		ldr	r3, .L54
 856 0008 0422     		movs	r2, #4
 857 000a 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/UART_Linux.c **** 
 693:Generated_Source\PSoC5/UART_Linux.c ****         if(UART_Linux_rxBufferRead == UART_Linux_rxBufferWrite)
 858              		.loc 1 693 0
 859 000c 1D4B     		ldr	r3, .L54+4
 860 000e 1B88     		ldrh	r3, [r3]	@ movhi
 861 0010 9AB2     		uxth	r2, r3
 862 0012 1D4B     		ldr	r3, .L54+8
 863 0014 1B88     		ldrh	r3, [r3]	@ movhi
 864 0016 9BB2     		uxth	r3, r3
 865 0018 9A42     		cmp	r2, r3
 866 001a 0BD1     		bne	.L48
 694:Generated_Source\PSoC5/UART_Linux.c ****         {
 695:Generated_Source\PSoC5/UART_Linux.c ****             if(UART_Linux_rxBufferLoopDetect != 0u)
 867              		.loc 1 695 0
 868 001c 1B4B     		ldr	r3, .L54+12
 869 001e 1B78     		ldrb	r3, [r3]
 870 0020 DBB2     		uxtb	r3, r3
 871 0022 002B     		cmp	r3, #0
 872 0024 03D0     		beq	.L49
 696:Generated_Source\PSoC5/UART_Linux.c ****             {
 697:Generated_Source\PSoC5/UART_Linux.c ****                 size = UART_Linux_RX_BUFFER_SIZE;
 873              		.loc 1 697 0
 874 0026 4FF48063 		mov	r3, #1024
 875 002a FB80     		strh	r3, [r7, #6]	@ movhi
 876 002c 1EE0     		b	.L51
 877              	.L49:
 698:Generated_Source\PSoC5/UART_Linux.c ****             }
 699:Generated_Source\PSoC5/UART_Linux.c ****             else
 700:Generated_Source\PSoC5/UART_Linux.c ****             {
 701:Generated_Source\PSoC5/UART_Linux.c ****                 size = 0u;
 878              		.loc 1 701 0
 879 002e 0023     		movs	r3, #0
 880 0030 FB80     		strh	r3, [r7, #6]	@ movhi
 881 0032 1BE0     		b	.L51
 882              	.L48:
 702:Generated_Source\PSoC5/UART_Linux.c ****             }
 703:Generated_Source\PSoC5/UART_Linux.c ****         }
 704:Generated_Source\PSoC5/UART_Linux.c ****         else if(UART_Linux_rxBufferRead < UART_Linux_rxBufferWrite)
 883              		.loc 1 704 0
 884 0034 134B     		ldr	r3, .L54+4
 885 0036 1B88     		ldrh	r3, [r3]	@ movhi
 886 0038 9AB2     		uxth	r2, r3
 887 003a 134B     		ldr	r3, .L54+8
 888 003c 1B88     		ldrh	r3, [r3]	@ movhi
 889 003e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 29


 890 0040 9A42     		cmp	r2, r3
 891 0042 08D2     		bcs	.L52
 705:Generated_Source\PSoC5/UART_Linux.c ****         {
 706:Generated_Source\PSoC5/UART_Linux.c ****             size = (UART_Linux_rxBufferWrite - UART_Linux_rxBufferRead);
 892              		.loc 1 706 0
 893 0044 104B     		ldr	r3, .L54+8
 894 0046 1B88     		ldrh	r3, [r3]	@ movhi
 895 0048 9AB2     		uxth	r2, r3
 896 004a 0E4B     		ldr	r3, .L54+4
 897 004c 1B88     		ldrh	r3, [r3]	@ movhi
 898 004e 9BB2     		uxth	r3, r3
 899 0050 D31A     		subs	r3, r2, r3
 900 0052 FB80     		strh	r3, [r7, #6]	@ movhi
 901 0054 0AE0     		b	.L51
 902              	.L52:
 707:Generated_Source\PSoC5/UART_Linux.c ****         }
 708:Generated_Source\PSoC5/UART_Linux.c ****         else
 709:Generated_Source\PSoC5/UART_Linux.c ****         {
 710:Generated_Source\PSoC5/UART_Linux.c ****             size = (UART_Linux_RX_BUFFER_SIZE - UART_Linux_rxBufferRead) + UART_Linux_rxBufferWrite
 903              		.loc 1 710 0
 904 0056 0C4B     		ldr	r3, .L54+8
 905 0058 1B88     		ldrh	r3, [r3]	@ movhi
 906 005a 9AB2     		uxth	r2, r3
 907 005c 094B     		ldr	r3, .L54+4
 908 005e 1B88     		ldrh	r3, [r3]	@ movhi
 909 0060 9BB2     		uxth	r3, r3
 910 0062 D31A     		subs	r3, r2, r3
 911 0064 9BB2     		uxth	r3, r3
 912 0066 03F58063 		add	r3, r3, #1024
 913 006a FB80     		strh	r3, [r7, #6]	@ movhi
 914              	.L51:
 711:Generated_Source\PSoC5/UART_Linux.c ****         }
 712:Generated_Source\PSoC5/UART_Linux.c **** 
 713:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_EnableRxInt();
 915              		.loc 1 713 0
 916 006c 084B     		ldr	r3, .L54+16
 917 006e 0422     		movs	r2, #4
 918 0070 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/UART_Linux.c **** 
 715:Generated_Source\PSoC5/UART_Linux.c ****     #else
 716:Generated_Source\PSoC5/UART_Linux.c **** 
 717:Generated_Source\PSoC5/UART_Linux.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_Linux.c ****         size = ((UART_Linux_RXSTATUS_REG & UART_Linux_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART_Linux.c **** 
 720:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_Linux.c **** 
 722:Generated_Source\PSoC5/UART_Linux.c ****         return(size);
 919              		.loc 1 722 0
 920 0072 FB88     		ldrh	r3, [r7, #6]
 723:Generated_Source\PSoC5/UART_Linux.c ****     }
 921              		.loc 1 723 0
 922 0074 1846     		mov	r0, r3
 923 0076 0C37     		adds	r7, r7, #12
 924              		.cfi_def_cfa_offset 4
 925 0078 BD46     		mov	sp, r7
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 30


 928 007a 80BC     		pop	{r7}
 929              		.cfi_restore 7
 930              		.cfi_def_cfa_offset 0
 931 007c 7047     		bx	lr
 932              	.L55:
 933 007e 00BF     		.align	2
 934              	.L54:
 935 0080 80E100E0 		.word	-536813184
 936 0084 00000000 		.word	UART_Linux_rxBufferRead
 937 0088 00000000 		.word	UART_Linux_rxBufferWrite
 938 008c 00000000 		.word	UART_Linux_rxBufferLoopDetect
 939 0090 00E100E0 		.word	-536813312
 940              		.cfi_endproc
 941              	.LFE11:
 942              		.size	UART_Linux_GetRxBufferSize, .-UART_Linux_GetRxBufferSize
 943              		.section	.text.UART_Linux_ClearRxBuffer,"ax",%progbits
 944              		.align	2
 945              		.global	UART_Linux_ClearRxBuffer
 946              		.thumb
 947              		.thumb_func
 948              		.type	UART_Linux_ClearRxBuffer, %function
 949              	UART_Linux_ClearRxBuffer:
 950              	.LFB12:
 724:Generated_Source\PSoC5/UART_Linux.c **** 
 725:Generated_Source\PSoC5/UART_Linux.c **** 
 726:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_Linux.c ****     *
 730:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_Linux.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_Linux.c ****     *
 733:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 735:Generated_Source\PSoC5/UART_Linux.c ****     *
 736:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 737:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 738:Generated_Source\PSoC5/UART_Linux.c ****     *
 739:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_Linux.c ****     *
 745:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
 747:Generated_Source\PSoC5/UART_Linux.c ****     *
 748:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_Linux.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_Linux.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_Linux.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_Linux.c ****     *
 753:Generated_Source\PSoC5/UART_Linux.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_Linux.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_Linux.c ****     *
 756:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_ClearRxBuffer(void) 
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 31


 758:Generated_Source\PSoC5/UART_Linux.c ****     {
 951              		.loc 1 758 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 8
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955 0000 80B5     		push	{r7, lr}
 956              		.cfi_def_cfa_offset 8
 957              		.cfi_offset 7, -8
 958              		.cfi_offset 14, -4
 959 0002 82B0     		sub	sp, sp, #8
 960              		.cfi_def_cfa_offset 16
 961 0004 00AF     		add	r7, sp, #0
 962              		.cfi_def_cfa_register 7
 759:Generated_Source\PSoC5/UART_Linux.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_Linux.c **** 
 761:Generated_Source\PSoC5/UART_Linux.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_Linux.c ****         enableInterrupts = CyEnterCriticalSection();
 963              		.loc 1 762 0
 964 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 965 000a 0346     		mov	r3, r0
 966 000c FB71     		strb	r3, [r7, #7]
 763:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXDATA_AUX_CTL_REG |= (uint8)  UART_Linux_RX_FIFO_CLR;
 967              		.loc 1 763 0
 968 000e 154A     		ldr	r2, .L57
 969 0010 144B     		ldr	r3, .L57
 970 0012 1B78     		ldrb	r3, [r3]
 971 0014 DBB2     		uxtb	r3, r3
 972 0016 43F00103 		orr	r3, r3, #1
 973 001a DBB2     		uxtb	r3, r3
 974 001c 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXDATA_AUX_CTL_REG &= (uint8) ~UART_Linux_RX_FIFO_CLR;
 975              		.loc 1 764 0
 976 001e 114A     		ldr	r2, .L57
 977 0020 104B     		ldr	r3, .L57
 978 0022 1B78     		ldrb	r3, [r3]
 979 0024 DBB2     		uxtb	r3, r3
 980 0026 23F00103 		bic	r3, r3, #1
 981 002a DBB2     		uxtb	r3, r3
 982 002c 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC5/UART_Linux.c ****         CyExitCriticalSection(enableInterrupts);
 983              		.loc 1 765 0
 984 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 985 0030 1846     		mov	r0, r3
 986 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:Generated_Source\PSoC5/UART_Linux.c **** 
 767:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_Linux.c **** 
 769:Generated_Source\PSoC5/UART_Linux.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_DisableRxInt();
 987              		.loc 1 770 0
 988 0036 0C4B     		ldr	r3, .L57+4
 989 0038 0422     		movs	r2, #4
 990 003a 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/UART_Linux.c **** 
 772:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_rxBufferRead = 0u;
 991              		.loc 1 772 0
 992 003c 0B4B     		ldr	r3, .L57+8
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 32


 993 003e 0022     		movs	r2, #0
 994 0040 1A80     		strh	r2, [r3]	@ movhi
 773:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_rxBufferWrite = 0u;
 995              		.loc 1 773 0
 996 0042 0B4B     		ldr	r3, .L57+12
 997 0044 0022     		movs	r2, #0
 998 0046 1A80     		strh	r2, [r3]	@ movhi
 774:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_rxBufferLoopDetect = 0u;
 999              		.loc 1 774 0
 1000 0048 0A4B     		ldr	r3, .L57+16
 1001 004a 0022     		movs	r2, #0
 1002 004c 1A70     		strb	r2, [r3]
 775:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_rxBufferOverflow = 0u;
 1003              		.loc 1 775 0
 1004 004e 0A4B     		ldr	r3, .L57+20
 1005 0050 0022     		movs	r2, #0
 1006 0052 1A70     		strb	r2, [r3]
 776:Generated_Source\PSoC5/UART_Linux.c **** 
 777:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_EnableRxInt();
 1007              		.loc 1 777 0
 1008 0054 094B     		ldr	r3, .L57+24
 1009 0056 0422     		movs	r2, #4
 1010 0058 1A60     		str	r2, [r3]
 778:Generated_Source\PSoC5/UART_Linux.c **** 
 779:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_Linux.c **** 
 781:Generated_Source\PSoC5/UART_Linux.c ****     }
 1011              		.loc 1 781 0
 1012 005a 00BF     		nop
 1013 005c 0837     		adds	r7, r7, #8
 1014              		.cfi_def_cfa_offset 8
 1015 005e BD46     		mov	sp, r7
 1016              		.cfi_def_cfa_register 13
 1017              		@ sp needed
 1018 0060 80BD     		pop	{r7, pc}
 1019              	.L58:
 1020 0062 00BF     		.align	2
 1021              	.L57:
 1022 0064 95640040 		.word	1073767573
 1023 0068 80E100E0 		.word	-536813184
 1024 006c 00000000 		.word	UART_Linux_rxBufferRead
 1025 0070 00000000 		.word	UART_Linux_rxBufferWrite
 1026 0074 00000000 		.word	UART_Linux_rxBufferLoopDetect
 1027 0078 00000000 		.word	UART_Linux_rxBufferOverflow
 1028 007c 00E100E0 		.word	-536813312
 1029              		.cfi_endproc
 1030              	.LFE12:
 1031              		.size	UART_Linux_ClearRxBuffer, .-UART_Linux_ClearRxBuffer
 1032              		.section	.text.UART_Linux_SetRxAddressMode,"ax",%progbits
 1033              		.align	2
 1034              		.global	UART_Linux_SetRxAddressMode
 1035              		.thumb
 1036              		.thumb_func
 1037              		.type	UART_Linux_SetRxAddressMode, %function
 1038              	UART_Linux_SetRxAddressMode:
 1039              	.LFB13:
 782:Generated_Source\PSoC5/UART_Linux.c **** 
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 33


 783:Generated_Source\PSoC5/UART_Linux.c **** 
 784:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_Linux.c ****     *
 788:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_Linux.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_Linux.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_Linux.c ****     *
 792:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_Linux.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_Linux.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_Linux.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_Linux.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_Linux.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_Linux.c ****     *
 804:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 805:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 806:Generated_Source\PSoC5/UART_Linux.c ****     *
 807:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_Linux.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_Linux.c ****     *
 812:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_Linux.c ****                                                         
 815:Generated_Source\PSoC5/UART_Linux.c ****     {
 1040              		.loc 1 815 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 8
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 1045 0000 80B4     		push	{r7}
 1046              		.cfi_def_cfa_offset 4
 1047              		.cfi_offset 7, -4
 1048 0002 83B0     		sub	sp, sp, #12
 1049              		.cfi_def_cfa_offset 16
 1050 0004 00AF     		add	r7, sp, #0
 1051              		.cfi_def_cfa_register 7
 1052 0006 0346     		mov	r3, r0
 1053 0008 FB71     		strb	r3, [r7, #7]
 816:Generated_Source\PSoC5/UART_Linux.c ****         #if(UART_Linux_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_Linux.c ****             #if(UART_Linux_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_Linux.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_Linux.c ****                 {
 820:Generated_Source\PSoC5/UART_Linux.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_Linux.c ****                 }
 822:Generated_Source\PSoC5/UART_Linux.c ****             #else /* UART_Linux_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_Linux.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_Linux.c ****                 tmpCtrl = UART_Linux_CONTROL_REG & (uint8)~UART_Linux_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_Linux.c ****                 tmpCtrl |= (uint8)(addressMode << UART_Linux_CTRL_RXADDR_MODE0_SHIFT);
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 34


 826:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_Linux.c **** 
 828:Generated_Source\PSoC5/UART_Linux.c ****                 #if(UART_Linux_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_Linux.c ****                    (UART_Linux_RXBUFFERSIZE > UART_Linux_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_Linux.c ****                     UART_Linux_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_Linux.c ****                     UART_Linux_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_Linux.c ****                 #endif /* End UART_Linux_RXBUFFERSIZE > UART_Linux_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_Linux.c ****             #endif /* End UART_Linux_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_Linux.c ****         #else /* UART_Linux_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_Linux.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_Linux.c ****             {
 837:Generated_Source\PSoC5/UART_Linux.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_Linux.c ****             }
 839:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* End UART_Linux_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_Linux.c ****     }
 1054              		.loc 1 840 0
 1055 000a 00BF     		nop
 1056 000c 0C37     		adds	r7, r7, #12
 1057              		.cfi_def_cfa_offset 4
 1058 000e BD46     		mov	sp, r7
 1059              		.cfi_def_cfa_register 13
 1060              		@ sp needed
 1061 0010 80BC     		pop	{r7}
 1062              		.cfi_restore 7
 1063              		.cfi_def_cfa_offset 0
 1064 0012 7047     		bx	lr
 1065              		.cfi_endproc
 1066              	.LFE13:
 1067              		.size	UART_Linux_SetRxAddressMode, .-UART_Linux_SetRxAddressMode
 1068              		.section	.text.UART_Linux_SetRxAddress1,"ax",%progbits
 1069              		.align	2
 1070              		.global	UART_Linux_SetRxAddress1
 1071              		.thumb
 1072              		.thumb_func
 1073              		.type	UART_Linux_SetRxAddress1, %function
 1074              	UART_Linux_SetRxAddress1:
 1075              	.LFB14:
 841:Generated_Source\PSoC5/UART_Linux.c **** 
 842:Generated_Source\PSoC5/UART_Linux.c **** 
 843:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_SetRxAddress1
 845:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_Linux.c ****     *
 847:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_Linux.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_Linux.c ****     *
 850:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_Linux.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_Linux.c ****     *
 853:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 854:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 855:Generated_Source\PSoC5/UART_Linux.c ****     *
 856:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_Linux.c ****     {
 1076              		.loc 1 858 0
 1077              		.cfi_startproc
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 35


 1078              		@ args = 0, pretend = 0, frame = 8
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 1081 0000 80B4     		push	{r7}
 1082              		.cfi_def_cfa_offset 4
 1083              		.cfi_offset 7, -4
 1084 0002 83B0     		sub	sp, sp, #12
 1085              		.cfi_def_cfa_offset 16
 1086 0004 00AF     		add	r7, sp, #0
 1087              		.cfi_def_cfa_register 7
 1088 0006 0346     		mov	r3, r0
 1089 0008 FB71     		strb	r3, [r7, #7]
 859:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXADDRESS1_REG = address;
 1090              		.loc 1 859 0
 1091 000a 044A     		ldr	r2, .L61
 1092 000c FB79     		ldrb	r3, [r7, #7]
 1093 000e 1370     		strb	r3, [r2]
 860:Generated_Source\PSoC5/UART_Linux.c ****     }
 1094              		.loc 1 860 0
 1095 0010 00BF     		nop
 1096 0012 0C37     		adds	r7, r7, #12
 1097              		.cfi_def_cfa_offset 4
 1098 0014 BD46     		mov	sp, r7
 1099              		.cfi_def_cfa_register 13
 1100              		@ sp needed
 1101 0016 80BC     		pop	{r7}
 1102              		.cfi_restore 7
 1103              		.cfi_def_cfa_offset 0
 1104 0018 7047     		bx	lr
 1105              	.L62:
 1106 001a 00BF     		.align	2
 1107              	.L61:
 1108 001c 25640040 		.word	1073767461
 1109              		.cfi_endproc
 1110              	.LFE14:
 1111              		.size	UART_Linux_SetRxAddress1, .-UART_Linux_SetRxAddress1
 1112              		.section	.text.UART_Linux_SetRxAddress2,"ax",%progbits
 1113              		.align	2
 1114              		.global	UART_Linux_SetRxAddress2
 1115              		.thumb
 1116              		.thumb_func
 1117              		.type	UART_Linux_SetRxAddress2, %function
 1118              	UART_Linux_SetRxAddress2:
 1119              	.LFB15:
 861:Generated_Source\PSoC5/UART_Linux.c **** 
 862:Generated_Source\PSoC5/UART_Linux.c **** 
 863:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_SetRxAddress2
 865:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_Linux.c ****     *
 867:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_Linux.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_Linux.c ****     *
 870:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_Linux.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_Linux.c ****     *
 873:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 36


 874:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 875:Generated_Source\PSoC5/UART_Linux.c ****     *
 876:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_Linux.c ****     {
 1120              		.loc 1 878 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 8
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124              		@ link register save eliminated.
 1125 0000 80B4     		push	{r7}
 1126              		.cfi_def_cfa_offset 4
 1127              		.cfi_offset 7, -4
 1128 0002 83B0     		sub	sp, sp, #12
 1129              		.cfi_def_cfa_offset 16
 1130 0004 00AF     		add	r7, sp, #0
 1131              		.cfi_def_cfa_register 7
 1132 0006 0346     		mov	r3, r0
 1133 0008 FB71     		strb	r3, [r7, #7]
 879:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_RXADDRESS2_REG = address;
 1134              		.loc 1 879 0
 1135 000a 044A     		ldr	r2, .L64
 1136 000c FB79     		ldrb	r3, [r7, #7]
 1137 000e 1370     		strb	r3, [r2]
 880:Generated_Source\PSoC5/UART_Linux.c ****     }
 1138              		.loc 1 880 0
 1139 0010 00BF     		nop
 1140 0012 0C37     		adds	r7, r7, #12
 1141              		.cfi_def_cfa_offset 4
 1142 0014 BD46     		mov	sp, r7
 1143              		.cfi_def_cfa_register 13
 1144              		@ sp needed
 1145 0016 80BC     		pop	{r7}
 1146              		.cfi_restore 7
 1147              		.cfi_def_cfa_offset 0
 1148 0018 7047     		bx	lr
 1149              	.L65:
 1150 001a 00BF     		.align	2
 1151              	.L64:
 1152 001c 35640040 		.word	1073767477
 1153              		.cfi_endproc
 1154              	.LFE15:
 1155              		.size	UART_Linux_SetRxAddress2, .-UART_Linux_SetRxAddress2
 1156              		.section	.text.UART_Linux_SetTxInterruptMode,"ax",%progbits
 1157              		.align	2
 1158              		.global	UART_Linux_SetTxInterruptMode
 1159              		.thumb
 1160              		.thumb_func
 1161              		.type	UART_Linux_SetTxInterruptMode, %function
 1162              	UART_Linux_SetTxInterruptMode:
 1163              	.LFB16:
 881:Generated_Source\PSoC5/UART_Linux.c **** 
 882:Generated_Source\PSoC5/UART_Linux.c **** #endif  /* UART_Linux_RX_ENABLED || UART_Linux_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_Linux.c **** 
 884:Generated_Source\PSoC5/UART_Linux.c **** 
 885:Generated_Source\PSoC5/UART_Linux.c **** #if( (UART_Linux_TX_ENABLED) || (UART_Linux_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 37


 887:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_Linux.c ****     *
 890:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_Linux.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_Linux.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_Linux.c ****     *
 894:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_Linux.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_Linux.c ****     *   UART_Linux_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_Linux.c ****     *   UART_Linux_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_Linux.c ****     *   UART_Linux_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_Linux.c ****     *   UART_Linux_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_Linux.c ****     *
 901:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 902:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 903:Generated_Source\PSoC5/UART_Linux.c ****     *
 904:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_Linux.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_Linux.c ****     *
 907:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_Linux.c ****     {
 1164              		.loc 1 909 0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 8
 1167              		@ frame_needed = 1, uses_anonymous_args = 0
 1168              		@ link register save eliminated.
 1169 0000 80B4     		push	{r7}
 1170              		.cfi_def_cfa_offset 4
 1171              		.cfi_offset 7, -4
 1172 0002 83B0     		sub	sp, sp, #12
 1173              		.cfi_def_cfa_offset 16
 1174 0004 00AF     		add	r7, sp, #0
 1175              		.cfi_def_cfa_register 7
 1176 0006 0346     		mov	r3, r0
 1177 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_TXSTATUS_MASK_REG = intSrc;
 1178              		.loc 1 910 0
 1179 000a 044A     		ldr	r2, .L67
 1180 000c FB79     		ldrb	r3, [r7, #7]
 1181 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/UART_Linux.c ****     }
 1182              		.loc 1 911 0
 1183 0010 00BF     		nop
 1184 0012 0C37     		adds	r7, r7, #12
 1185              		.cfi_def_cfa_offset 4
 1186 0014 BD46     		mov	sp, r7
 1187              		.cfi_def_cfa_register 13
 1188              		@ sp needed
 1189 0016 80BC     		pop	{r7}
 1190              		.cfi_restore 7
 1191              		.cfi_def_cfa_offset 0
 1192 0018 7047     		bx	lr
 1193              	.L68:
 1194 001a 00BF     		.align	2
 1195              	.L67:
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 38


 1196 001c 86650040 		.word	1073767814
 1197              		.cfi_endproc
 1198              	.LFE16:
 1199              		.size	UART_Linux_SetTxInterruptMode, .-UART_Linux_SetTxInterruptMode
 1200              		.section	.text.UART_Linux_WriteTxData,"ax",%progbits
 1201              		.align	2
 1202              		.global	UART_Linux_WriteTxData
 1203              		.thumb
 1204              		.thumb_func
 1205              		.type	UART_Linux_WriteTxData, %function
 1206              	UART_Linux_WriteTxData:
 1207              	.LFB17:
 912:Generated_Source\PSoC5/UART_Linux.c **** 
 913:Generated_Source\PSoC5/UART_Linux.c **** 
 914:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_WriteTxData
 916:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_Linux.c ****     *
 918:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_Linux.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_Linux.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_Linux.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_Linux.c ****     *
 923:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_Linux.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_Linux.c ****     *
 926:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 927:Generated_Source\PSoC5/UART_Linux.c ****     * None.
 928:Generated_Source\PSoC5/UART_Linux.c ****     *
 929:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_Linux.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_Linux.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_Linux.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_Linux.c ****     *
 938:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
 940:Generated_Source\PSoC5/UART_Linux.c ****     *
 941:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_Linux.c ****     {
 1208              		.loc 1 943 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 8
 1211              		@ frame_needed = 1, uses_anonymous_args = 0
 1212              		@ link register save eliminated.
 1213 0000 80B4     		push	{r7}
 1214              		.cfi_def_cfa_offset 4
 1215              		.cfi_offset 7, -4
 1216 0002 83B0     		sub	sp, sp, #12
 1217              		.cfi_def_cfa_offset 16
 1218 0004 00AF     		add	r7, sp, #0
 1219              		.cfi_def_cfa_register 7
 1220 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 39


 1221 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/UART_Linux.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_Linux.c ****         if(UART_Linux_initVar != 0u)
 1222              		.loc 1 945 0
 1223 000a 1A4B     		ldr	r3, .L75
 1224 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 000e 002B     		cmp	r3, #0
 1226 0010 2BD0     		beq	.L74
 946:Generated_Source\PSoC5/UART_Linux.c ****         {
 947:Generated_Source\PSoC5/UART_Linux.c ****         #if (UART_Linux_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_Linux.c **** 
 949:Generated_Source\PSoC5/UART_Linux.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_DisableTxInt();
 1227              		.loc 1 950 0
 1228 0012 194B     		ldr	r3, .L75+4
 1229 0014 0822     		movs	r2, #8
 1230 0016 1A60     		str	r2, [r3]
 951:Generated_Source\PSoC5/UART_Linux.c **** 
 952:Generated_Source\PSoC5/UART_Linux.c ****             if( (UART_Linux_txBufferRead == UART_Linux_txBufferWrite) &&
 1231              		.loc 1 952 0
 1232 0018 184B     		ldr	r3, .L75+8
 1233 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1234 001c 9AB2     		uxth	r2, r3
 1235 001e 184B     		ldr	r3, .L75+12
 1236 0020 1B88     		ldrh	r3, [r3]
 1237 0022 9A42     		cmp	r2, r3
 1238 0024 0AD1     		bne	.L71
 953:Generated_Source\PSoC5/UART_Linux.c ****                 ((UART_Linux_TXSTATUS_REG & UART_Linux_TX_STS_FIFO_FULL) == 0u) )
 1239              		.loc 1 953 0 discriminator 1
 1240 0026 174B     		ldr	r3, .L75+16
 1241 0028 1B78     		ldrb	r3, [r3]
 1242 002a DBB2     		uxtb	r3, r3
 1243 002c 03F00403 		and	r3, r3, #4
 952:Generated_Source\PSoC5/UART_Linux.c ****                 ((UART_Linux_TXSTATUS_REG & UART_Linux_TX_STS_FIFO_FULL) == 0u) )
 1244              		.loc 1 952 0 discriminator 1
 1245 0030 002B     		cmp	r3, #0
 1246 0032 03D1     		bne	.L71
 954:Generated_Source\PSoC5/UART_Linux.c ****             {
 955:Generated_Source\PSoC5/UART_Linux.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_TXDATA_REG = txDataByte;
 1247              		.loc 1 956 0
 1248 0034 144A     		ldr	r2, .L75+20
 1249 0036 FB79     		ldrb	r3, [r7, #7]
 1250 0038 1370     		strb	r3, [r2]
 1251 003a 13E0     		b	.L72
 1252              	.L71:
 957:Generated_Source\PSoC5/UART_Linux.c ****             }
 958:Generated_Source\PSoC5/UART_Linux.c ****             else
 959:Generated_Source\PSoC5/UART_Linux.c ****             {
 960:Generated_Source\PSoC5/UART_Linux.c ****                 if(UART_Linux_txBufferWrite >= UART_Linux_TX_BUFFER_SIZE)
 1253              		.loc 1 960 0
 1254 003c 104B     		ldr	r3, .L75+12
 1255 003e 1B88     		ldrh	r3, [r3]
 1256 0040 B3F5806F 		cmp	r3, #1024
 1257 0044 02D3     		bcc	.L73
 961:Generated_Source\PSoC5/UART_Linux.c ****                 {
 962:Generated_Source\PSoC5/UART_Linux.c ****                     UART_Linux_txBufferWrite = 0u;
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 40


 1258              		.loc 1 962 0
 1259 0046 0E4B     		ldr	r3, .L75+12
 1260 0048 0022     		movs	r2, #0
 1261 004a 1A80     		strh	r2, [r3]	@ movhi
 1262              	.L73:
 963:Generated_Source\PSoC5/UART_Linux.c ****                 }
 964:Generated_Source\PSoC5/UART_Linux.c **** 
 965:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_txBuffer[UART_Linux_txBufferWrite] = txDataByte;
 1263              		.loc 1 965 0
 1264 004c 0C4B     		ldr	r3, .L75+12
 1265 004e 1B88     		ldrh	r3, [r3]
 1266 0050 1946     		mov	r1, r3
 1267 0052 0E4A     		ldr	r2, .L75+24
 1268 0054 FB79     		ldrb	r3, [r7, #7]
 1269 0056 5354     		strb	r3, [r2, r1]
 966:Generated_Source\PSoC5/UART_Linux.c **** 
 967:Generated_Source\PSoC5/UART_Linux.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_txBufferWrite++;
 1270              		.loc 1 968 0
 1271 0058 094B     		ldr	r3, .L75+12
 1272 005a 1B88     		ldrh	r3, [r3]
 1273 005c 0133     		adds	r3, r3, #1
 1274 005e 9AB2     		uxth	r2, r3
 1275 0060 074B     		ldr	r3, .L75+12
 1276 0062 1A80     		strh	r2, [r3]	@ movhi
 1277              	.L72:
 969:Generated_Source\PSoC5/UART_Linux.c ****             }
 970:Generated_Source\PSoC5/UART_Linux.c **** 
 971:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_EnableTxInt();
 1278              		.loc 1 971 0
 1279 0064 0A4B     		ldr	r3, .L75+28
 1280 0066 0822     		movs	r2, #8
 1281 0068 1A60     		str	r2, [r3]
 1282              	.L74:
 972:Generated_Source\PSoC5/UART_Linux.c **** 
 973:Generated_Source\PSoC5/UART_Linux.c ****         #else
 974:Generated_Source\PSoC5/UART_Linux.c **** 
 975:Generated_Source\PSoC5/UART_Linux.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART_Linux.c **** 
 978:Generated_Source\PSoC5/UART_Linux.c ****         #endif /*(UART_Linux_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_Linux.c ****         }
 980:Generated_Source\PSoC5/UART_Linux.c ****     }
 1283              		.loc 1 980 0
 1284 006a 00BF     		nop
 1285 006c 0C37     		adds	r7, r7, #12
 1286              		.cfi_def_cfa_offset 4
 1287 006e BD46     		mov	sp, r7
 1288              		.cfi_def_cfa_register 13
 1289              		@ sp needed
 1290 0070 80BC     		pop	{r7}
 1291              		.cfi_restore 7
 1292              		.cfi_def_cfa_offset 0
 1293 0072 7047     		bx	lr
 1294              	.L76:
 1295              		.align	2
 1296              	.L75:
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 41


 1297 0074 00000000 		.word	UART_Linux_initVar
 1298 0078 80E100E0 		.word	-536813184
 1299 007c 00000000 		.word	UART_Linux_txBufferRead
 1300 0080 00000000 		.word	UART_Linux_txBufferWrite
 1301 0084 66650040 		.word	1073767782
 1302 0088 46650040 		.word	1073767750
 1303 008c 00000000 		.word	UART_Linux_txBuffer
 1304 0090 00E100E0 		.word	-536813312
 1305              		.cfi_endproc
 1306              	.LFE17:
 1307              		.size	UART_Linux_WriteTxData, .-UART_Linux_WriteTxData
 1308              		.section	.text.UART_Linux_ReadTxStatus,"ax",%progbits
 1309              		.align	2
 1310              		.global	UART_Linux_ReadTxStatus
 1311              		.thumb
 1312              		.thumb_func
 1313              		.type	UART_Linux_ReadTxStatus, %function
 1314              	UART_Linux_ReadTxStatus:
 1315              	.LFB18:
 981:Generated_Source\PSoC5/UART_Linux.c **** 
 982:Generated_Source\PSoC5/UART_Linux.c **** 
 983:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_ReadTxStatus
 985:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_Linux.c ****     *
 987:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_Linux.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_Linux.c ****     *
 990:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
 992:Generated_Source\PSoC5/UART_Linux.c ****     *
 993:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
 994:Generated_Source\PSoC5/UART_Linux.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_Linux.c ****     *
 996:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_Linux.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_Linux.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_Linux.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_Linux.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_Linux.c ****     *
1002:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_Linux.c ****     uint8 UART_Linux_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_Linux.c ****     {
 1316              		.loc 1 1004 0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 0
 1319              		@ frame_needed = 1, uses_anonymous_args = 0
 1320              		@ link register save eliminated.
 1321 0000 80B4     		push	{r7}
 1322              		.cfi_def_cfa_offset 4
 1323              		.cfi_offset 7, -4
 1324 0002 00AF     		add	r7, sp, #0
 1325              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/UART_Linux.c ****         return(UART_Linux_TXSTATUS_REG);
 1326              		.loc 1 1005 0
 1327 0004 034B     		ldr	r3, .L79
 1328 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 42


 1329 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/UART_Linux.c ****     }
 1330              		.loc 1 1006 0
 1331 000a 1846     		mov	r0, r3
 1332 000c BD46     		mov	sp, r7
 1333              		.cfi_def_cfa_register 13
 1334              		@ sp needed
 1335 000e 80BC     		pop	{r7}
 1336              		.cfi_restore 7
 1337              		.cfi_def_cfa_offset 0
 1338 0010 7047     		bx	lr
 1339              	.L80:
 1340 0012 00BF     		.align	2
 1341              	.L79:
 1342 0014 66650040 		.word	1073767782
 1343              		.cfi_endproc
 1344              	.LFE18:
 1345              		.size	UART_Linux_ReadTxStatus, .-UART_Linux_ReadTxStatus
 1346              		.section	.text.UART_Linux_PutChar,"ax",%progbits
 1347              		.align	2
 1348              		.global	UART_Linux_PutChar
 1349              		.thumb
 1350              		.thumb_func
 1351              		.type	UART_Linux_PutChar, %function
 1352              	UART_Linux_PutChar:
 1353              	.LFB19:
1007:Generated_Source\PSoC5/UART_Linux.c **** 
1008:Generated_Source\PSoC5/UART_Linux.c **** 
1009:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_PutChar
1011:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_Linux.c ****     *
1013:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_Linux.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_Linux.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_Linux.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_Linux.c ****     *
1018:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_Linux.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_Linux.c ****     *
1021:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
1022:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
1023:Generated_Source\PSoC5/UART_Linux.c ****     *
1024:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_Linux.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_Linux.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_Linux.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_Linux.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_Linux.c ****     *
1034:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
1036:Generated_Source\PSoC5/UART_Linux.c ****     *
1037:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 43


1038:Generated_Source\PSoC5/UART_Linux.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_Linux.c ****     *
1040:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_Linux.c ****     {
 1354              		.loc 1 1042 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 16
 1357              		@ frame_needed = 1, uses_anonymous_args = 0
 1358              		@ link register save eliminated.
 1359 0000 80B4     		push	{r7}
 1360              		.cfi_def_cfa_offset 4
 1361              		.cfi_offset 7, -4
 1362 0002 85B0     		sub	sp, sp, #20
 1363              		.cfi_def_cfa_offset 24
 1364 0004 00AF     		add	r7, sp, #0
 1365              		.cfi_def_cfa_register 7
 1366 0006 0346     		mov	r3, r0
 1367 0008 FB71     		strb	r3, [r7, #7]
 1368              	.L84:
1043:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_Linux.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_Linux.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_Linux.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_Linux.c ****         */
1048:Generated_Source\PSoC5/UART_Linux.c ****         uint16 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_Linux.c ****         uint16 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_Linux.c **** 
1051:Generated_Source\PSoC5/UART_Linux.c ****         do
1052:Generated_Source\PSoC5/UART_Linux.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_Linux.c **** 
1054:Generated_Source\PSoC5/UART_Linux.c ****         #if ((UART_Linux_TX_BUFFER_SIZE > UART_Linux_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_Linux.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_DisableTxInt();
1057:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (UART_Linux_TX_BUFFER_SIZE > UART_Linux_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_Linux.c **** 
1059:Generated_Source\PSoC5/UART_Linux.c ****             locTxBufferWrite = UART_Linux_txBufferWrite;
 1369              		.loc 1 1059 0
 1370 000a 264B     		ldr	r3, .L89
 1371 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1372 000e FB81     		strh	r3, [r7, #14]	@ movhi
1060:Generated_Source\PSoC5/UART_Linux.c ****             locTxBufferRead  = UART_Linux_txBufferRead;
 1373              		.loc 1 1060 0
 1374 0010 254B     		ldr	r3, .L89+4
 1375 0012 1B88     		ldrh	r3, [r3]	@ movhi
 1376 0014 BB81     		strh	r3, [r7, #12]	@ movhi
1061:Generated_Source\PSoC5/UART_Linux.c **** 
1062:Generated_Source\PSoC5/UART_Linux.c ****         #if ((UART_Linux_TX_BUFFER_SIZE > UART_Linux_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_Linux.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_EnableTxInt();
1065:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (UART_Linux_TX_BUFFER_SIZE > UART_Linux_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_Linux.c ****         }
1067:Generated_Source\PSoC5/UART_Linux.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 1377              		.loc 1 1067 0
 1378 0016 FA89     		ldrh	r2, [r7, #14]
 1379 0018 BB89     		ldrh	r3, [r7, #12]
 1380 001a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 44


 1381 001c 08D2     		bcs	.L82
 1382              		.loc 1 1067 0 is_stmt 0 discriminator 1
 1383 001e FA89     		ldrh	r2, [r7, #14]
 1384 0020 BB89     		ldrh	r3, [r7, #12]
 1385 0022 013B     		subs	r3, r3, #1
 1386 0024 9A42     		cmp	r2, r3
 1387 0026 0CBF     		ite	eq
 1388 0028 0123     		moveq	r3, #1
 1389 002a 0023     		movne	r3, #0
 1390 002c DBB2     		uxtb	r3, r3
 1391 002e 09E0     		b	.L83
 1392              	.L82:
1068:Generated_Source\PSoC5/UART_Linux.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1393              		.loc 1 1068 0 is_stmt 1 discriminator 2
 1394 0030 FA89     		ldrh	r2, [r7, #14]
 1395 0032 BB89     		ldrh	r3, [r7, #12]
 1396 0034 D31A     		subs	r3, r2, r3
1067:Generated_Source\PSoC5/UART_Linux.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1397              		.loc 1 1067 0 discriminator 2
 1398 0036 40F2FF32 		movw	r2, #1023
 1399 003a 9342     		cmp	r3, r2
 1400 003c 0CBF     		ite	eq
 1401 003e 0123     		moveq	r3, #1
 1402 0040 0023     		movne	r3, #0
 1403 0042 DBB2     		uxtb	r3, r3
 1404              	.L83:
1069:Generated_Source\PSoC5/UART_Linux.c ****                                 (uint16)(UART_Linux_TX_BUFFER_SIZE - 1u)) );
 1405              		.loc 1 1069 0
 1406 0044 002B     		cmp	r3, #0
 1407 0046 E0D1     		bne	.L84
1070:Generated_Source\PSoC5/UART_Linux.c **** 
1071:Generated_Source\PSoC5/UART_Linux.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 1408              		.loc 1 1071 0
 1409 0048 BA89     		ldrh	r2, [r7, #12]
 1410 004a FB89     		ldrh	r3, [r7, #14]
 1411 004c 9A42     		cmp	r2, r3
 1412 004e 0AD1     		bne	.L85
1072:Generated_Source\PSoC5/UART_Linux.c ****             ((UART_Linux_TXSTATUS_REG & UART_Linux_TX_STS_FIFO_FULL) == 0u) )
 1413              		.loc 1 1072 0 discriminator 1
 1414 0050 164B     		ldr	r3, .L89+8
 1415 0052 1B78     		ldrb	r3, [r3]
 1416 0054 DBB2     		uxtb	r3, r3
 1417 0056 03F00403 		and	r3, r3, #4
1071:Generated_Source\PSoC5/UART_Linux.c ****             ((UART_Linux_TXSTATUS_REG & UART_Linux_TX_STS_FIFO_FULL) == 0u) )
 1418              		.loc 1 1071 0 discriminator 1
 1419 005a 002B     		cmp	r3, #0
 1420 005c 03D1     		bne	.L85
1073:Generated_Source\PSoC5/UART_Linux.c ****         {
1074:Generated_Source\PSoC5/UART_Linux.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_TXDATA_REG = txDataByte;
 1421              		.loc 1 1075 0
 1422 005e 144A     		ldr	r2, .L89+12
 1423 0060 FB79     		ldrb	r3, [r7, #7]
 1424 0062 1370     		strb	r3, [r2]
1076:Generated_Source\PSoC5/UART_Linux.c ****         }
1077:Generated_Source\PSoC5/UART_Linux.c ****         else
1078:Generated_Source\PSoC5/UART_Linux.c ****         {
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 45


1079:Generated_Source\PSoC5/UART_Linux.c ****             if(locTxBufferWrite >= UART_Linux_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_Linux.c ****             {
1081:Generated_Source\PSoC5/UART_Linux.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_Linux.c ****             }
1083:Generated_Source\PSoC5/UART_Linux.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_Linux.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_Linux.c **** 
1087:Generated_Source\PSoC5/UART_Linux.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_Linux.c ****         #if ((UART_Linux_TX_BUFFER_SIZE > UART_Linux_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_DisableTxInt();
1090:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (UART_Linux_TX_BUFFER_SIZE > UART_Linux_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_Linux.c **** 
1092:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_Linux.c **** 
1094:Generated_Source\PSoC5/UART_Linux.c ****         #if ((UART_Linux_TX_BUFFER_SIZE > UART_Linux_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_EnableTxInt();
1096:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* (UART_Linux_TX_BUFFER_SIZE > UART_Linux_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_Linux.c **** 
1098:Generated_Source\PSoC5/UART_Linux.c ****             if(0u != (UART_Linux_TXSTATUS_REG & UART_Linux_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_Linux.c ****             {
1100:Generated_Source\PSoC5/UART_Linux.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_Linux.c ****             }
1103:Generated_Source\PSoC5/UART_Linux.c ****         }
1104:Generated_Source\PSoC5/UART_Linux.c **** 
1105:Generated_Source\PSoC5/UART_Linux.c ****     #else
1106:Generated_Source\PSoC5/UART_Linux.c **** 
1107:Generated_Source\PSoC5/UART_Linux.c ****         while((UART_Linux_TXSTATUS_REG & UART_Linux_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/UART_Linux.c ****         {
1109:Generated_Source\PSoC5/UART_Linux.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_Linux.c ****         }
1111:Generated_Source\PSoC5/UART_Linux.c **** 
1112:Generated_Source\PSoC5/UART_Linux.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART_Linux.c **** 
1115:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* UART_Linux_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_Linux.c ****     }
 1425              		.loc 1 1116 0
 1426 0064 19E0     		b	.L88
 1427              	.L85:
1079:Generated_Source\PSoC5/UART_Linux.c ****             {
 1428              		.loc 1 1079 0
 1429 0066 FB89     		ldrh	r3, [r7, #14]
 1430 0068 B3F5806F 		cmp	r3, #1024
 1431 006c 01D3     		bcc	.L87
1081:Generated_Source\PSoC5/UART_Linux.c ****             }
 1432              		.loc 1 1081 0
 1433 006e 0023     		movs	r3, #0
 1434 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 1435              	.L87:
1084:Generated_Source\PSoC5/UART_Linux.c ****             locTxBufferWrite++;
 1436              		.loc 1 1084 0
 1437 0072 FB89     		ldrh	r3, [r7, #14]
 1438 0074 0F49     		ldr	r1, .L89+16
 1439 0076 FA79     		ldrb	r2, [r7, #7]
 1440 0078 CA54     		strb	r2, [r1, r3]
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 46


1085:Generated_Source\PSoC5/UART_Linux.c **** 
 1441              		.loc 1 1085 0
 1442 007a FB89     		ldrh	r3, [r7, #14]
 1443 007c 0133     		adds	r3, r3, #1
 1444 007e FB81     		strh	r3, [r7, #14]	@ movhi
1092:Generated_Source\PSoC5/UART_Linux.c **** 
 1445              		.loc 1 1092 0
 1446 0080 084A     		ldr	r2, .L89
 1447 0082 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1448 0084 1380     		strh	r3, [r2]	@ movhi
1098:Generated_Source\PSoC5/UART_Linux.c ****             {
 1449              		.loc 1 1098 0
 1450 0086 094B     		ldr	r3, .L89+8
 1451 0088 1B78     		ldrb	r3, [r3]
 1452 008a DBB2     		uxtb	r3, r3
 1453 008c 03F00203 		and	r3, r3, #2
 1454 0090 002B     		cmp	r3, #0
 1455 0092 02D0     		beq	.L88
1101:Generated_Source\PSoC5/UART_Linux.c ****             }
 1456              		.loc 1 1101 0
 1457 0094 084B     		ldr	r3, .L89+20
 1458 0096 0822     		movs	r2, #8
 1459 0098 1A60     		str	r2, [r3]
 1460              	.L88:
 1461              		.loc 1 1116 0
 1462 009a 00BF     		nop
 1463 009c 1437     		adds	r7, r7, #20
 1464              		.cfi_def_cfa_offset 4
 1465 009e BD46     		mov	sp, r7
 1466              		.cfi_def_cfa_register 13
 1467              		@ sp needed
 1468 00a0 80BC     		pop	{r7}
 1469              		.cfi_restore 7
 1470              		.cfi_def_cfa_offset 0
 1471 00a2 7047     		bx	lr
 1472              	.L90:
 1473              		.align	2
 1474              	.L89:
 1475 00a4 00000000 		.word	UART_Linux_txBufferWrite
 1476 00a8 00000000 		.word	UART_Linux_txBufferRead
 1477 00ac 66650040 		.word	1073767782
 1478 00b0 46650040 		.word	1073767750
 1479 00b4 00000000 		.word	UART_Linux_txBuffer
 1480 00b8 00E200E0 		.word	-536813056
 1481              		.cfi_endproc
 1482              	.LFE19:
 1483              		.size	UART_Linux_PutChar, .-UART_Linux_PutChar
 1484              		.section	.text.UART_Linux_PutString,"ax",%progbits
 1485              		.align	2
 1486              		.global	UART_Linux_PutString
 1487              		.thumb
 1488              		.thumb_func
 1489              		.type	UART_Linux_PutString, %function
 1490              	UART_Linux_PutString:
 1491              	.LFB20:
1117:Generated_Source\PSoC5/UART_Linux.c **** 
1118:Generated_Source\PSoC5/UART_Linux.c **** 
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 47


1119:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_PutString
1121:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_Linux.c ****     *
1123:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_Linux.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_Linux.c ****     *
1126:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_Linux.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_Linux.c ****     *
1129:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
1130:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
1131:Generated_Source\PSoC5/UART_Linux.c ****     *
1132:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_Linux.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_Linux.c ****     *
1136:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
1138:Generated_Source\PSoC5/UART_Linux.c ****     *
1139:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_Linux.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_Linux.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_Linux.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_Linux.c ****     *
1144:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_Linux.c ****     {
 1492              		.loc 1 1146 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 16
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496 0000 80B5     		push	{r7, lr}
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 84B0     		sub	sp, sp, #16
 1501              		.cfi_def_cfa_offset 24
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/UART_Linux.c ****         uint16 bufIndex = 0u;
 1505              		.loc 1 1147 0
 1506 0008 0023     		movs	r3, #0
 1507 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/UART_Linux.c **** 
1149:Generated_Source\PSoC5/UART_Linux.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_Linux.c ****         if(UART_Linux_initVar != 0u)
 1508              		.loc 1 1150 0
 1509 000c 0C4B     		ldr	r3, .L96
 1510 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1511 0010 002B     		cmp	r3, #0
 1512 0012 10D0     		beq	.L95
1151:Generated_Source\PSoC5/UART_Linux.c ****         {
1152:Generated_Source\PSoC5/UART_Linux.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_Linux.c ****             while(string[bufIndex] != (char8) 0)
 1513              		.loc 1 1153 0
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 48


 1514 0014 09E0     		b	.L93
 1515              	.L94:
1154:Generated_Source\PSoC5/UART_Linux.c ****             {
1155:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_PutChar((uint8)string[bufIndex]);
 1516              		.loc 1 1155 0
 1517 0016 FB89     		ldrh	r3, [r7, #14]
 1518 0018 7A68     		ldr	r2, [r7, #4]
 1519 001a 1344     		add	r3, r3, r2
 1520 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1521 001e 1846     		mov	r0, r3
 1522 0020 FFF7FEFF 		bl	UART_Linux_PutChar
1156:Generated_Source\PSoC5/UART_Linux.c ****                 bufIndex++;
 1523              		.loc 1 1156 0
 1524 0024 FB89     		ldrh	r3, [r7, #14]
 1525 0026 0133     		adds	r3, r3, #1
 1526 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1527              	.L93:
1153:Generated_Source\PSoC5/UART_Linux.c ****             {
 1528              		.loc 1 1153 0
 1529 002a FB89     		ldrh	r3, [r7, #14]
 1530 002c 7A68     		ldr	r2, [r7, #4]
 1531 002e 1344     		add	r3, r3, r2
 1532 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1533 0032 002B     		cmp	r3, #0
 1534 0034 EFD1     		bne	.L94
 1535              	.L95:
1157:Generated_Source\PSoC5/UART_Linux.c ****             }
1158:Generated_Source\PSoC5/UART_Linux.c ****         }
1159:Generated_Source\PSoC5/UART_Linux.c ****     }
 1536              		.loc 1 1159 0
 1537 0036 00BF     		nop
 1538 0038 1037     		adds	r7, r7, #16
 1539              		.cfi_def_cfa_offset 8
 1540 003a BD46     		mov	sp, r7
 1541              		.cfi_def_cfa_register 13
 1542              		@ sp needed
 1543 003c 80BD     		pop	{r7, pc}
 1544              	.L97:
 1545 003e 00BF     		.align	2
 1546              	.L96:
 1547 0040 00000000 		.word	UART_Linux_initVar
 1548              		.cfi_endproc
 1549              	.LFE20:
 1550              		.size	UART_Linux_PutString, .-UART_Linux_PutString
 1551              		.section	.text.UART_Linux_PutArray,"ax",%progbits
 1552              		.align	2
 1553              		.global	UART_Linux_PutArray
 1554              		.thumb
 1555              		.thumb_func
 1556              		.type	UART_Linux_PutArray, %function
 1557              	UART_Linux_PutArray:
 1558              	.LFB21:
1160:Generated_Source\PSoC5/UART_Linux.c **** 
1161:Generated_Source\PSoC5/UART_Linux.c **** 
1162:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_PutArray
1164:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 49


1165:Generated_Source\PSoC5/UART_Linux.c ****     *
1166:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_Linux.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_Linux.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_Linux.c ****     *
1170:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_Linux.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_Linux.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_Linux.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_Linux.c ****     *
1175:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
1176:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
1177:Generated_Source\PSoC5/UART_Linux.c ****     *
1178:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_Linux.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_Linux.c ****     *
1182:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
1184:Generated_Source\PSoC5/UART_Linux.c ****     *
1185:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_Linux.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_Linux.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_Linux.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_Linux.c ****     *
1190:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_PutArray(const uint8 string[], uint16 byteCount)
1192:Generated_Source\PSoC5/UART_Linux.c ****                                                                     
1193:Generated_Source\PSoC5/UART_Linux.c ****     {
 1559              		.loc 1 1193 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 16
 1562              		@ frame_needed = 1, uses_anonymous_args = 0
 1563 0000 80B5     		push	{r7, lr}
 1564              		.cfi_def_cfa_offset 8
 1565              		.cfi_offset 7, -8
 1566              		.cfi_offset 14, -4
 1567 0002 84B0     		sub	sp, sp, #16
 1568              		.cfi_def_cfa_offset 24
 1569 0004 00AF     		add	r7, sp, #0
 1570              		.cfi_def_cfa_register 7
 1571 0006 7860     		str	r0, [r7, #4]
 1572 0008 0B46     		mov	r3, r1
 1573 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1194:Generated_Source\PSoC5/UART_Linux.c ****         uint16 bufIndex = 0u;
 1574              		.loc 1 1194 0
 1575 000c 0023     		movs	r3, #0
 1576 000e FB81     		strh	r3, [r7, #14]	@ movhi
1195:Generated_Source\PSoC5/UART_Linux.c **** 
1196:Generated_Source\PSoC5/UART_Linux.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_Linux.c ****         if(UART_Linux_initVar != 0u)
 1577              		.loc 1 1197 0
 1578 0010 0B4B     		ldr	r3, .L103
 1579 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1580 0014 002B     		cmp	r3, #0
 1581 0016 0ED0     		beq	.L102
1198:Generated_Source\PSoC5/UART_Linux.c ****         {
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 50


1199:Generated_Source\PSoC5/UART_Linux.c ****             while(bufIndex < byteCount)
 1582              		.loc 1 1199 0
 1583 0018 09E0     		b	.L100
 1584              	.L101:
1200:Generated_Source\PSoC5/UART_Linux.c ****             {
1201:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_PutChar(string[bufIndex]);
 1585              		.loc 1 1201 0
 1586 001a FB89     		ldrh	r3, [r7, #14]
 1587 001c 7A68     		ldr	r2, [r7, #4]
 1588 001e 1344     		add	r3, r3, r2
 1589 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590 0022 1846     		mov	r0, r3
 1591 0024 FFF7FEFF 		bl	UART_Linux_PutChar
1202:Generated_Source\PSoC5/UART_Linux.c ****                 bufIndex++;
 1592              		.loc 1 1202 0
 1593 0028 FB89     		ldrh	r3, [r7, #14]
 1594 002a 0133     		adds	r3, r3, #1
 1595 002c FB81     		strh	r3, [r7, #14]	@ movhi
 1596              	.L100:
1199:Generated_Source\PSoC5/UART_Linux.c ****             {
 1597              		.loc 1 1199 0
 1598 002e FA89     		ldrh	r2, [r7, #14]
 1599 0030 7B88     		ldrh	r3, [r7, #2]
 1600 0032 9A42     		cmp	r2, r3
 1601 0034 F1D3     		bcc	.L101
 1602              	.L102:
1203:Generated_Source\PSoC5/UART_Linux.c ****             }
1204:Generated_Source\PSoC5/UART_Linux.c ****         }
1205:Generated_Source\PSoC5/UART_Linux.c ****     }
 1603              		.loc 1 1205 0
 1604 0036 00BF     		nop
 1605 0038 1037     		adds	r7, r7, #16
 1606              		.cfi_def_cfa_offset 8
 1607 003a BD46     		mov	sp, r7
 1608              		.cfi_def_cfa_register 13
 1609              		@ sp needed
 1610 003c 80BD     		pop	{r7, pc}
 1611              	.L104:
 1612 003e 00BF     		.align	2
 1613              	.L103:
 1614 0040 00000000 		.word	UART_Linux_initVar
 1615              		.cfi_endproc
 1616              	.LFE21:
 1617              		.size	UART_Linux_PutArray, .-UART_Linux_PutArray
 1618              		.section	.text.UART_Linux_PutCRLF,"ax",%progbits
 1619              		.align	2
 1620              		.global	UART_Linux_PutCRLF
 1621              		.thumb
 1622              		.thumb_func
 1623              		.type	UART_Linux_PutCRLF, %function
 1624              	UART_Linux_PutCRLF:
 1625              	.LFB22:
1206:Generated_Source\PSoC5/UART_Linux.c **** 
1207:Generated_Source\PSoC5/UART_Linux.c **** 
1208:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_PutCRLF
1210:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 51


1211:Generated_Source\PSoC5/UART_Linux.c ****     *
1212:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_Linux.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_Linux.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_Linux.c ****     *
1216:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_Linux.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_Linux.c ****     *
1219:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
1220:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
1221:Generated_Source\PSoC5/UART_Linux.c ****     *
1222:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_Linux.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_Linux.c ****     *
1226:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
1228:Generated_Source\PSoC5/UART_Linux.c ****     *
1229:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_Linux.c ****     {
 1626              		.loc 1 1231 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 8
 1629              		@ frame_needed = 1, uses_anonymous_args = 0
 1630 0000 80B5     		push	{r7, lr}
 1631              		.cfi_def_cfa_offset 8
 1632              		.cfi_offset 7, -8
 1633              		.cfi_offset 14, -4
 1634 0002 82B0     		sub	sp, sp, #8
 1635              		.cfi_def_cfa_offset 16
 1636 0004 00AF     		add	r7, sp, #0
 1637              		.cfi_def_cfa_register 7
 1638 0006 0346     		mov	r3, r0
 1639 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/UART_Linux.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_Linux.c ****         if(UART_Linux_initVar != 0u)
 1640              		.loc 1 1233 0
 1641 000a 094B     		ldr	r3, .L108
 1642 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1643 000e 002B     		cmp	r3, #0
 1644 0010 09D0     		beq	.L107
1234:Generated_Source\PSoC5/UART_Linux.c ****         {
1235:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_PutChar(txDataByte);
 1645              		.loc 1 1235 0
 1646 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1647 0014 1846     		mov	r0, r3
 1648 0016 FFF7FEFF 		bl	UART_Linux_PutChar
1236:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_PutChar(0x0Du);
 1649              		.loc 1 1236 0
 1650 001a 0D20     		movs	r0, #13
 1651 001c FFF7FEFF 		bl	UART_Linux_PutChar
1237:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_PutChar(0x0Au);
 1652              		.loc 1 1237 0
 1653 0020 0A20     		movs	r0, #10
 1654 0022 FFF7FEFF 		bl	UART_Linux_PutChar
 1655              	.L107:
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 52


1238:Generated_Source\PSoC5/UART_Linux.c ****         }
1239:Generated_Source\PSoC5/UART_Linux.c ****     }
 1656              		.loc 1 1239 0
 1657 0026 00BF     		nop
 1658 0028 0837     		adds	r7, r7, #8
 1659              		.cfi_def_cfa_offset 8
 1660 002a BD46     		mov	sp, r7
 1661              		.cfi_def_cfa_register 13
 1662              		@ sp needed
 1663 002c 80BD     		pop	{r7, pc}
 1664              	.L109:
 1665 002e 00BF     		.align	2
 1666              	.L108:
 1667 0030 00000000 		.word	UART_Linux_initVar
 1668              		.cfi_endproc
 1669              	.LFE22:
 1670              		.size	UART_Linux_PutCRLF, .-UART_Linux_PutCRLF
 1671              		.section	.text.UART_Linux_GetTxBufferSize,"ax",%progbits
 1672              		.align	2
 1673              		.global	UART_Linux_GetTxBufferSize
 1674              		.thumb
 1675              		.thumb_func
 1676              		.type	UART_Linux_GetTxBufferSize, %function
 1677              	UART_Linux_GetTxBufferSize:
 1678              	.LFB23:
1240:Generated_Source\PSoC5/UART_Linux.c **** 
1241:Generated_Source\PSoC5/UART_Linux.c **** 
1242:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_Linux.c ****     *
1246:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_Linux.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_Linux.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_Linux.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_Linux.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_Linux.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_Linux.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_Linux.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_Linux.c ****     *
1255:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
1257:Generated_Source\PSoC5/UART_Linux.c ****     *
1258:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
1259:Generated_Source\PSoC5/UART_Linux.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_Linux.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_Linux.c ****     *
1262:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_Linux.c ****     *
1266:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
1268:Generated_Source\PSoC5/UART_Linux.c ****     *
1269:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_Linux.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_Linux.c ****     *
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 53


1272:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_Linux.c ****     uint16 UART_Linux_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_Linux.c ****                                                             
1275:Generated_Source\PSoC5/UART_Linux.c ****     {
 1679              		.loc 1 1275 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 8
 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683              		@ link register save eliminated.
 1684 0000 80B4     		push	{r7}
 1685              		.cfi_def_cfa_offset 4
 1686              		.cfi_offset 7, -4
 1687 0002 83B0     		sub	sp, sp, #12
 1688              		.cfi_def_cfa_offset 16
 1689 0004 00AF     		add	r7, sp, #0
 1690              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/UART_Linux.c ****         uint16 size;
1277:Generated_Source\PSoC5/UART_Linux.c **** 
1278:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_Linux.c **** 
1280:Generated_Source\PSoC5/UART_Linux.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_DisableTxInt();
 1691              		.loc 1 1281 0
 1692 0006 174B     		ldr	r3, .L115
 1693 0008 0822     		movs	r2, #8
 1694 000a 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/UART_Linux.c **** 
1283:Generated_Source\PSoC5/UART_Linux.c ****         if(UART_Linux_txBufferRead == UART_Linux_txBufferWrite)
 1695              		.loc 1 1283 0
 1696 000c 164B     		ldr	r3, .L115+4
 1697 000e 1B88     		ldrh	r3, [r3]	@ movhi
 1698 0010 9AB2     		uxth	r2, r3
 1699 0012 164B     		ldr	r3, .L115+8
 1700 0014 1B88     		ldrh	r3, [r3]
 1701 0016 9A42     		cmp	r2, r3
 1702 0018 02D1     		bne	.L111
1284:Generated_Source\PSoC5/UART_Linux.c ****         {
1285:Generated_Source\PSoC5/UART_Linux.c ****             size = 0u;
 1703              		.loc 1 1285 0
 1704 001a 0023     		movs	r3, #0
 1705 001c FB80     		strh	r3, [r7, #6]	@ movhi
 1706 001e 18E0     		b	.L112
 1707              	.L111:
1286:Generated_Source\PSoC5/UART_Linux.c ****         }
1287:Generated_Source\PSoC5/UART_Linux.c ****         else if(UART_Linux_txBufferRead < UART_Linux_txBufferWrite)
 1708              		.loc 1 1287 0
 1709 0020 114B     		ldr	r3, .L115+4
 1710 0022 1B88     		ldrh	r3, [r3]	@ movhi
 1711 0024 9AB2     		uxth	r2, r3
 1712 0026 114B     		ldr	r3, .L115+8
 1713 0028 1B88     		ldrh	r3, [r3]
 1714 002a 9A42     		cmp	r2, r3
 1715 002c 07D2     		bcs	.L113
1288:Generated_Source\PSoC5/UART_Linux.c ****         {
1289:Generated_Source\PSoC5/UART_Linux.c ****             size = (UART_Linux_txBufferWrite - UART_Linux_txBufferRead);
 1716              		.loc 1 1289 0
 1717 002e 0F4B     		ldr	r3, .L115+8
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 54


 1718 0030 1A88     		ldrh	r2, [r3]
 1719 0032 0D4B     		ldr	r3, .L115+4
 1720 0034 1B88     		ldrh	r3, [r3]	@ movhi
 1721 0036 9BB2     		uxth	r3, r3
 1722 0038 D31A     		subs	r3, r2, r3
 1723 003a FB80     		strh	r3, [r7, #6]	@ movhi
 1724 003c 09E0     		b	.L112
 1725              	.L113:
1290:Generated_Source\PSoC5/UART_Linux.c ****         }
1291:Generated_Source\PSoC5/UART_Linux.c ****         else
1292:Generated_Source\PSoC5/UART_Linux.c ****         {
1293:Generated_Source\PSoC5/UART_Linux.c ****             size = (UART_Linux_TX_BUFFER_SIZE - UART_Linux_txBufferRead) +
 1726              		.loc 1 1293 0
 1727 003e 0B4B     		ldr	r3, .L115+8
 1728 0040 1A88     		ldrh	r2, [r3]
 1729 0042 094B     		ldr	r3, .L115+4
 1730 0044 1B88     		ldrh	r3, [r3]	@ movhi
 1731 0046 9BB2     		uxth	r3, r3
 1732 0048 D31A     		subs	r3, r2, r3
 1733 004a 9BB2     		uxth	r3, r3
 1734 004c 03F58063 		add	r3, r3, #1024
 1735 0050 FB80     		strh	r3, [r7, #6]	@ movhi
 1736              	.L112:
1294:Generated_Source\PSoC5/UART_Linux.c ****                     UART_Linux_txBufferWrite;
1295:Generated_Source\PSoC5/UART_Linux.c ****         }
1296:Generated_Source\PSoC5/UART_Linux.c **** 
1297:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_EnableTxInt();
 1737              		.loc 1 1297 0
 1738 0052 074B     		ldr	r3, .L115+12
 1739 0054 0822     		movs	r2, #8
 1740 0056 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART_Linux.c **** 
1299:Generated_Source\PSoC5/UART_Linux.c ****     #else
1300:Generated_Source\PSoC5/UART_Linux.c **** 
1301:Generated_Source\PSoC5/UART_Linux.c ****         size = UART_Linux_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART_Linux.c **** 
1303:Generated_Source\PSoC5/UART_Linux.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_Linux.c ****         if((size & UART_Linux_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART_Linux.c ****         {
1306:Generated_Source\PSoC5/UART_Linux.c ****             size = UART_Linux_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART_Linux.c ****         }
1308:Generated_Source\PSoC5/UART_Linux.c ****         else if((size & UART_Linux_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART_Linux.c ****         {
1310:Generated_Source\PSoC5/UART_Linux.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART_Linux.c ****         }
1312:Generated_Source\PSoC5/UART_Linux.c ****         else
1313:Generated_Source\PSoC5/UART_Linux.c ****         {
1314:Generated_Source\PSoC5/UART_Linux.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_Linux.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART_Linux.c ****         }
1317:Generated_Source\PSoC5/UART_Linux.c **** 
1318:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_Linux.c **** 
1320:Generated_Source\PSoC5/UART_Linux.c ****     return(size);
 1741              		.loc 1 1320 0
 1742 0058 FB88     		ldrh	r3, [r7, #6]
1321:Generated_Source\PSoC5/UART_Linux.c ****     }
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 55


 1743              		.loc 1 1321 0
 1744 005a 1846     		mov	r0, r3
 1745 005c 0C37     		adds	r7, r7, #12
 1746              		.cfi_def_cfa_offset 4
 1747 005e BD46     		mov	sp, r7
 1748              		.cfi_def_cfa_register 13
 1749              		@ sp needed
 1750 0060 80BC     		pop	{r7}
 1751              		.cfi_restore 7
 1752              		.cfi_def_cfa_offset 0
 1753 0062 7047     		bx	lr
 1754              	.L116:
 1755              		.align	2
 1756              	.L115:
 1757 0064 80E100E0 		.word	-536813184
 1758 0068 00000000 		.word	UART_Linux_txBufferRead
 1759 006c 00000000 		.word	UART_Linux_txBufferWrite
 1760 0070 00E100E0 		.word	-536813312
 1761              		.cfi_endproc
 1762              	.LFE23:
 1763              		.size	UART_Linux_GetTxBufferSize, .-UART_Linux_GetTxBufferSize
 1764              		.section	.text.UART_Linux_ClearTxBuffer,"ax",%progbits
 1765              		.align	2
 1766              		.global	UART_Linux_ClearTxBuffer
 1767              		.thumb
 1768              		.thumb_func
 1769              		.type	UART_Linux_ClearTxBuffer, %function
 1770              	UART_Linux_ClearTxBuffer:
 1771              	.LFB24:
1322:Generated_Source\PSoC5/UART_Linux.c **** 
1323:Generated_Source\PSoC5/UART_Linux.c **** 
1324:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_Linux.c ****     *
1328:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_Linux.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_Linux.c ****     *
1331:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
1333:Generated_Source\PSoC5/UART_Linux.c ****     *
1334:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
1335:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
1336:Generated_Source\PSoC5/UART_Linux.c ****     *
1337:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_Linux.c ****     *
1341:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
1343:Generated_Source\PSoC5/UART_Linux.c ****     *
1344:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_Linux.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_Linux.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_Linux.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_Linux.c ****     *
1349:Generated_Source\PSoC5/UART_Linux.c ****     * Side Effects:
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 56


1350:Generated_Source\PSoC5/UART_Linux.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_Linux.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_Linux.c ****     *
1353:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_Linux.c ****     {
 1772              		.loc 1 1355 0
 1773              		.cfi_startproc
 1774              		@ args = 0, pretend = 0, frame = 8
 1775              		@ frame_needed = 1, uses_anonymous_args = 0
 1776 0000 80B5     		push	{r7, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 7, -8
 1779              		.cfi_offset 14, -4
 1780 0002 82B0     		sub	sp, sp, #8
 1781              		.cfi_def_cfa_offset 16
 1782 0004 00AF     		add	r7, sp, #0
 1783              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC5/UART_Linux.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_Linux.c **** 
1358:Generated_Source\PSoC5/UART_Linux.c ****         enableInterrupts = CyEnterCriticalSection();
 1784              		.loc 1 1358 0
 1785 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1786 000a 0346     		mov	r3, r0
 1787 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/UART_Linux.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_TXDATA_AUX_CTL_REG |= (uint8)  UART_Linux_TX_FIFO_CLR;
 1788              		.loc 1 1360 0
 1789 000e 124A     		ldr	r2, .L118
 1790 0010 114B     		ldr	r3, .L118
 1791 0012 1B78     		ldrb	r3, [r3]
 1792 0014 DBB2     		uxtb	r3, r3
 1793 0016 43F00103 		orr	r3, r3, #1
 1794 001a DBB2     		uxtb	r3, r3
 1795 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_TXDATA_AUX_CTL_REG &= (uint8) ~UART_Linux_TX_FIFO_CLR;
 1796              		.loc 1 1361 0
 1797 001e 0E4A     		ldr	r2, .L118
 1798 0020 0D4B     		ldr	r3, .L118
 1799 0022 1B78     		ldrb	r3, [r3]
 1800 0024 DBB2     		uxtb	r3, r3
 1801 0026 23F00103 		bic	r3, r3, #1
 1802 002a DBB2     		uxtb	r3, r3
 1803 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/UART_Linux.c ****         CyExitCriticalSection(enableInterrupts);
 1804              		.loc 1 1362 0
 1805 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1806 0030 1846     		mov	r0, r3
 1807 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/UART_Linux.c **** 
1364:Generated_Source\PSoC5/UART_Linux.c ****     #if (UART_Linux_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_Linux.c **** 
1366:Generated_Source\PSoC5/UART_Linux.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_DisableTxInt();
 1808              		.loc 1 1367 0
 1809 0036 094B     		ldr	r3, .L118+4
 1810 0038 0822     		movs	r2, #8
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 57


 1811 003a 1A60     		str	r2, [r3]
1368:Generated_Source\PSoC5/UART_Linux.c **** 
1369:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_txBufferRead = 0u;
 1812              		.loc 1 1369 0
 1813 003c 084B     		ldr	r3, .L118+8
 1814 003e 0022     		movs	r2, #0
 1815 0040 1A80     		strh	r2, [r3]	@ movhi
1370:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_txBufferWrite = 0u;
 1816              		.loc 1 1370 0
 1817 0042 084B     		ldr	r3, .L118+12
 1818 0044 0022     		movs	r2, #0
 1819 0046 1A80     		strh	r2, [r3]	@ movhi
1371:Generated_Source\PSoC5/UART_Linux.c **** 
1372:Generated_Source\PSoC5/UART_Linux.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_Linux.c ****         UART_Linux_EnableTxInt();
 1820              		.loc 1 1373 0
 1821 0048 074B     		ldr	r3, .L118+16
 1822 004a 0822     		movs	r2, #8
 1823 004c 1A60     		str	r2, [r3]
1374:Generated_Source\PSoC5/UART_Linux.c **** 
1375:Generated_Source\PSoC5/UART_Linux.c ****     #endif /* (UART_Linux_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_Linux.c ****     }
 1824              		.loc 1 1376 0
 1825 004e 00BF     		nop
 1826 0050 0837     		adds	r7, r7, #8
 1827              		.cfi_def_cfa_offset 8
 1828 0052 BD46     		mov	sp, r7
 1829              		.cfi_def_cfa_register 13
 1830              		@ sp needed
 1831 0054 80BD     		pop	{r7, pc}
 1832              	.L119:
 1833 0056 00BF     		.align	2
 1834              	.L118:
 1835 0058 96650040 		.word	1073767830
 1836 005c 80E100E0 		.word	-536813184
 1837 0060 00000000 		.word	UART_Linux_txBufferRead
 1838 0064 00000000 		.word	UART_Linux_txBufferWrite
 1839 0068 00E100E0 		.word	-536813312
 1840              		.cfi_endproc
 1841              	.LFE24:
 1842              		.size	UART_Linux_ClearTxBuffer, .-UART_Linux_ClearTxBuffer
 1843              		.section	.text.UART_Linux_SendBreak,"ax",%progbits
 1844              		.align	2
 1845              		.global	UART_Linux_SendBreak
 1846              		.thumb
 1847              		.thumb_func
 1848              		.type	UART_Linux_SendBreak, %function
 1849              	UART_Linux_SendBreak:
 1850              	.LFB25:
1377:Generated_Source\PSoC5/UART_Linux.c **** 
1378:Generated_Source\PSoC5/UART_Linux.c **** 
1379:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_SendBreak
1381:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_Linux.c ****     *
1383:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_Linux.c ****     *  Transmits a break signal on the bus.
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 58


1385:Generated_Source\PSoC5/UART_Linux.c ****     *
1386:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_Linux.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_Linux.c ****     *   UART_Linux_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_Linux.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_Linux.c ****     *   UART_Linux_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_Linux.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_Linux.c ****     *   UART_Linux_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_Linux.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_Linux.c ****     *   UART_Linux_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_Linux.c ****     *      UART_Linux_SEND_BREAK and UART_Linux_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_Linux.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_Linux.c ****     *
1398:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
1399:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
1400:Generated_Source\PSoC5/UART_Linux.c ****     *
1401:Generated_Source\PSoC5/UART_Linux.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_Linux.c ****     *  UART_Linux_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_Linux.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_Linux.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_Linux.c ****     *
1406:Generated_Source\PSoC5/UART_Linux.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_Linux.c ****     *  No.
1408:Generated_Source\PSoC5/UART_Linux.c ****     *
1409:Generated_Source\PSoC5/UART_Linux.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_Linux.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_Linux.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_Linux.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_Linux.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_Linux.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_Linux.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_Linux.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_Linux.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_Linux.c ****     *     operation
1419:Generated_Source\PSoC5/UART_Linux.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_Linux.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_Linux.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_Linux.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_Linux.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_Linux.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_Linux.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_Linux.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_Linux.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_Linux.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_Linux.c ****     *     When interrupt appear with UART_Linux_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_Linux.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_Linux.c ****     *
1432:Generated_Source\PSoC5/UART_Linux.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_Linux.c ****     *  The UART_Linux_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_Linux.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_Linux.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_Linux.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_Linux.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_Linux.c ****     *
1439:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_Linux.c ****     {
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 59


 1851              		.loc 1 1441 0
 1852              		.cfi_startproc
 1853              		@ args = 0, pretend = 0, frame = 16
 1854              		@ frame_needed = 1, uses_anonymous_args = 0
 1855              		@ link register save eliminated.
 1856 0000 80B4     		push	{r7}
 1857              		.cfi_def_cfa_offset 4
 1858              		.cfi_offset 7, -4
 1859 0002 85B0     		sub	sp, sp, #20
 1860              		.cfi_def_cfa_offset 24
 1861 0004 00AF     		add	r7, sp, #0
 1862              		.cfi_def_cfa_register 7
 1863 0006 0346     		mov	r3, r0
 1864 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/UART_Linux.c **** 
1443:Generated_Source\PSoC5/UART_Linux.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_Linux.c ****         if(UART_Linux_initVar != 0u)
 1865              		.loc 1 1444 0
 1866 000a 1F4B     		ldr	r3, .L129
 1867 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1868 000e 002B     		cmp	r3, #0
 1869 0010 35D0     		beq	.L128
 1870              	.LBB2:
1445:Generated_Source\PSoC5/UART_Linux.c ****         {
1446:Generated_Source\PSoC5/UART_Linux.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_Linux.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_Linux.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_Linux.c **** 
1450:Generated_Source\PSoC5/UART_Linux.c ****         #if(UART_Linux_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_Linux.c **** 
1452:Generated_Source\PSoC5/UART_Linux.c ****             if( (retMode == UART_Linux_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_Linux.c ****                 (retMode == UART_Linux_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_Linux.c ****             {
1455:Generated_Source\PSoC5/UART_Linux.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_WriteControlRegister(UART_Linux_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_Linux.c ****                                                       UART_Linux_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_Linux.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_Linux.c **** 
1461:Generated_Source\PSoC5/UART_Linux.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_Linux.c ****                 {
1463:Generated_Source\PSoC5/UART_Linux.c ****                     tmpStat = UART_Linux_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_Linux.c ****                 }
1465:Generated_Source\PSoC5/UART_Linux.c ****                 while((tmpStat & UART_Linux_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_Linux.c ****             }
1467:Generated_Source\PSoC5/UART_Linux.c **** 
1468:Generated_Source\PSoC5/UART_Linux.c ****             if( (retMode == UART_Linux_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_Linux.c ****                 (retMode == UART_Linux_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_Linux.c ****             {
1471:Generated_Source\PSoC5/UART_Linux.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_Linux.c ****                 {
1473:Generated_Source\PSoC5/UART_Linux.c ****                     tmpStat = UART_Linux_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_Linux.c ****                 }
1475:Generated_Source\PSoC5/UART_Linux.c ****                 while(((uint8)~tmpStat & UART_Linux_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_Linux.c ****             }
1477:Generated_Source\PSoC5/UART_Linux.c **** 
1478:Generated_Source\PSoC5/UART_Linux.c ****             if( (retMode == UART_Linux_WAIT_FOR_COMPLETE_REINIT) ||
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 60


1479:Generated_Source\PSoC5/UART_Linux.c ****                 (retMode == UART_Linux_REINIT) ||
1480:Generated_Source\PSoC5/UART_Linux.c ****                 (retMode == UART_Linux_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_Linux.c ****             {
1482:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_WriteControlRegister(UART_Linux_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_Linux.c ****                                               (uint8)~UART_Linux_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_Linux.c ****             }
1485:Generated_Source\PSoC5/UART_Linux.c **** 
1486:Generated_Source\PSoC5/UART_Linux.c ****         #else /* UART_Linux_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_Linux.c **** 
1488:Generated_Source\PSoC5/UART_Linux.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_Linux.c **** 
1490:Generated_Source\PSoC5/UART_Linux.c ****             if( (retMode == UART_Linux_SEND_BREAK) ||
 1871              		.loc 1 1490 0
 1872 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1873 0014 002B     		cmp	r3, #0
 1874 0016 02D0     		beq	.L122
 1875              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1876 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1877 001a 032B     		cmp	r3, #3
 1878 001c 12D1     		bne	.L123
 1879              	.L122:
1491:Generated_Source\PSoC5/UART_Linux.c ****                 (retMode == UART_Linux_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_Linux.c ****             {
1493:Generated_Source\PSoC5/UART_Linux.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_Linux.c ****                 #if( (UART_Linux_PARITY_TYPE != UART_Linux__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_Linux.c ****                                     (UART_Linux_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_Linux.c ****                     UART_Linux_WriteControlRegister(UART_Linux_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_Linux.c ****                                                           UART_Linux_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_Linux.c ****                 #endif /* End UART_Linux_PARITY_TYPE != UART_Linux__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_Linux.c **** 
1500:Generated_Source\PSoC5/UART_Linux.c ****                 #if(UART_Linux_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_Linux.c ****                     txPeriod = UART_Linux_TXBITCLKTX_COMPLETE_REG;
 1880              		.loc 1 1501 0 is_stmt 1
 1881 001e 1B4B     		ldr	r3, .L129+4
 1882 0020 1B78     		ldrb	r3, [r3]
 1883 0022 DAB2     		uxtb	r2, r3
 1884 0024 1A4B     		ldr	r3, .L129+8
 1885 0026 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC5/UART_Linux.c ****                     UART_Linux_TXBITCLKTX_COMPLETE_REG = UART_Linux_TXBITCTR_BREAKBITS;
 1886              		.loc 1 1502 0
 1887 0028 184B     		ldr	r3, .L129+4
 1888 002a 6722     		movs	r2, #103
 1889 002c 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART_Linux.c ****                 #else
1504:Generated_Source\PSoC5/UART_Linux.c ****                     txPeriod = UART_Linux_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_Linux.c ****                     UART_Linux_TXBITCTR_PERIOD_REG = UART_Linux_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_Linux.c ****                 #endif /* End UART_Linux_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_Linux.c **** 
1508:Generated_Source\PSoC5/UART_Linux.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_TXDATA_REG = 0u;
 1890              		.loc 1 1509 0
 1891 002e 194B     		ldr	r3, .L129+12
 1892 0030 0022     		movs	r2, #0
 1893 0032 1A70     		strb	r2, [r3]
 1894              	.L124:
1510:Generated_Source\PSoC5/UART_Linux.c **** 
1511:Generated_Source\PSoC5/UART_Linux.c ****                 do /* Wait until transmit starts */
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 61


1512:Generated_Source\PSoC5/UART_Linux.c ****                 {
1513:Generated_Source\PSoC5/UART_Linux.c ****                     tmpStat = UART_Linux_TXSTATUS_REG;
 1895              		.loc 1 1513 0 discriminator 1
 1896 0034 184B     		ldr	r3, .L129+16
 1897 0036 1B78     		ldrb	r3, [r3]
 1898 0038 FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/UART_Linux.c ****                 }
1515:Generated_Source\PSoC5/UART_Linux.c ****                 while((tmpStat & UART_Linux_TX_STS_FIFO_EMPTY) != 0u);
 1899              		.loc 1 1515 0 discriminator 1
 1900 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1901 003c 03F00203 		and	r3, r3, #2
 1902 0040 002B     		cmp	r3, #0
 1903 0042 F7D1     		bne	.L124
 1904              	.L123:
1516:Generated_Source\PSoC5/UART_Linux.c ****             }
1517:Generated_Source\PSoC5/UART_Linux.c **** 
1518:Generated_Source\PSoC5/UART_Linux.c ****             if( (retMode == UART_Linux_WAIT_FOR_COMPLETE_REINIT) ||
 1905              		.loc 1 1518 0
 1906 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1907 0046 012B     		cmp	r3, #1
 1908 0048 02D0     		beq	.L125
 1909              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1910 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1911 004c 032B     		cmp	r3, #3
 1912 004e 09D1     		bne	.L126
 1913              	.L125:
1519:Generated_Source\PSoC5/UART_Linux.c ****                 (retMode == UART_Linux_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_Linux.c ****             {
1521:Generated_Source\PSoC5/UART_Linux.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_Linux.c ****                 {
1523:Generated_Source\PSoC5/UART_Linux.c ****                     tmpStat = UART_Linux_TXSTATUS_REG;
 1914              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1915 0050 114B     		ldr	r3, .L129+16
 1916 0052 1B78     		ldrb	r3, [r3]
 1917 0054 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/UART_Linux.c ****                 }
1525:Generated_Source\PSoC5/UART_Linux.c ****                 while(((uint8)~tmpStat & UART_Linux_TX_STS_COMPLETE) != 0u);
 1918              		.loc 1 1525 0 discriminator 1
 1919 0056 FB7B     		ldrb	r3, [r7, #15]
 1920 0058 DB43     		mvns	r3, r3
 1921 005a DBB2     		uxtb	r3, r3
 1922 005c 03F00103 		and	r3, r3, #1
 1923 0060 002B     		cmp	r3, #0
 1924 0062 F5D1     		bne	.L125
 1925              	.L126:
1526:Generated_Source\PSoC5/UART_Linux.c ****             }
1527:Generated_Source\PSoC5/UART_Linux.c **** 
1528:Generated_Source\PSoC5/UART_Linux.c ****             if( (retMode == UART_Linux_WAIT_FOR_COMPLETE_REINIT) ||
 1926              		.loc 1 1528 0
 1927 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1928 0066 012B     		cmp	r3, #1
 1929 0068 05D0     		beq	.L127
 1930              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1931 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1932 006c 022B     		cmp	r3, #2
 1933 006e 02D0     		beq	.L127
1529:Generated_Source\PSoC5/UART_Linux.c ****                 (retMode == UART_Linux_REINIT) ||
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 62


 1934              		.loc 1 1529 0 is_stmt 1
 1935 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1936 0072 032B     		cmp	r3, #3
 1937 0074 03D1     		bne	.L128
 1938              	.L127:
1530:Generated_Source\PSoC5/UART_Linux.c ****                 (retMode == UART_Linux_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_Linux.c ****             {
1532:Generated_Source\PSoC5/UART_Linux.c **** 
1533:Generated_Source\PSoC5/UART_Linux.c ****             #if(UART_Linux_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1939              		.loc 1 1534 0
 1940 0076 054B     		ldr	r3, .L129+4
 1941 0078 054A     		ldr	r2, .L129+8
 1942 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1943 007c 1A70     		strb	r2, [r3]
 1944              	.L128:
 1945              	.LBE2:
1535:Generated_Source\PSoC5/UART_Linux.c ****             #else
1536:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_Linux.c ****             #endif /* End UART_Linux_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_Linux.c **** 
1539:Generated_Source\PSoC5/UART_Linux.c ****             #if( (UART_Linux_PARITY_TYPE != UART_Linux__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_Linux.c ****                  (UART_Linux_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_Linux.c ****                 UART_Linux_WriteControlRegister(UART_Linux_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_Linux.c ****                                                       (uint8) ~UART_Linux_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_Linux.c ****             #endif /* End UART_Linux_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_Linux.c ****             }
1545:Generated_Source\PSoC5/UART_Linux.c ****         #endif    /* End UART_Linux_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_Linux.c ****         }
1547:Generated_Source\PSoC5/UART_Linux.c ****     }
 1946              		.loc 1 1547 0
 1947 007e 00BF     		nop
 1948 0080 1437     		adds	r7, r7, #20
 1949              		.cfi_def_cfa_offset 4
 1950 0082 BD46     		mov	sp, r7
 1951              		.cfi_def_cfa_register 13
 1952              		@ sp needed
 1953 0084 80BC     		pop	{r7}
 1954              		.cfi_restore 7
 1955              		.cfi_def_cfa_offset 0
 1956 0086 7047     		bx	lr
 1957              	.L130:
 1958              		.align	2
 1959              	.L129:
 1960 0088 00000000 		.word	UART_Linux_initVar
 1961 008c 36640040 		.word	1073767478
 1962 0090 0E000000 		.word	txPeriod.5150
 1963 0094 46650040 		.word	1073767750
 1964 0098 66650040 		.word	1073767782
 1965              		.cfi_endproc
 1966              	.LFE25:
 1967              		.size	UART_Linux_SendBreak, .-UART_Linux_SendBreak
 1968              		.section	.text.UART_Linux_SetTxAddressMode,"ax",%progbits
 1969              		.align	2
 1970              		.global	UART_Linux_SetTxAddressMode
 1971              		.thumb
 1972              		.thumb_func
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 63


 1973              		.type	UART_Linux_SetTxAddressMode, %function
 1974              	UART_Linux_SetTxAddressMode:
 1975              	.LFB26:
1548:Generated_Source\PSoC5/UART_Linux.c **** 
1549:Generated_Source\PSoC5/UART_Linux.c **** 
1550:Generated_Source\PSoC5/UART_Linux.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_Linux.c ****     * Function Name: UART_Linux_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_Linux.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_Linux.c ****     *
1554:Generated_Source\PSoC5/UART_Linux.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_Linux.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_Linux.c ****     *
1557:Generated_Source\PSoC5/UART_Linux.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_Linux.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_Linux.c ****     *       UART_Linux_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_Linux.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_Linux.c ****     *       UART_Linux_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_Linux.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_Linux.c ****     *
1564:Generated_Source\PSoC5/UART_Linux.c ****     * Return:
1565:Generated_Source\PSoC5/UART_Linux.c ****     *  None.
1566:Generated_Source\PSoC5/UART_Linux.c ****     *
1567:Generated_Source\PSoC5/UART_Linux.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_Linux.c ****     *  This function sets and clears UART_Linux_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_Linux.c ****     *  register.
1570:Generated_Source\PSoC5/UART_Linux.c ****     *
1571:Generated_Source\PSoC5/UART_Linux.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_Linux.c ****     void UART_Linux_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_Linux.c ****     {
 1976              		.loc 1 1573 0
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 8
 1979              		@ frame_needed = 1, uses_anonymous_args = 0
 1980              		@ link register save eliminated.
 1981 0000 80B4     		push	{r7}
 1982              		.cfi_def_cfa_offset 4
 1983              		.cfi_offset 7, -4
 1984 0002 83B0     		sub	sp, sp, #12
 1985              		.cfi_def_cfa_offset 16
 1986 0004 00AF     		add	r7, sp, #0
 1987              		.cfi_def_cfa_register 7
 1988 0006 0346     		mov	r3, r0
 1989 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/UART_Linux.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART_Linux.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/UART_Linux.c ****         {
1577:Generated_Source\PSoC5/UART_Linux.c ****         #if( UART_Linux_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_WriteControlRegister(UART_Linux_ReadControlRegister() |
1579:Generated_Source\PSoC5/UART_Linux.c ****                                                   UART_Linux_CTRL_MARK);
1580:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* End UART_Linux_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART_Linux.c ****         }
1582:Generated_Source\PSoC5/UART_Linux.c ****         else
1583:Generated_Source\PSoC5/UART_Linux.c ****         {
1584:Generated_Source\PSoC5/UART_Linux.c ****         #if( UART_Linux_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART_Linux.c ****             UART_Linux_WriteControlRegister(UART_Linux_ReadControlRegister() &
1586:Generated_Source\PSoC5/UART_Linux.c ****                                                   (uint8) ~UART_Linux_CTRL_MARK);
1587:Generated_Source\PSoC5/UART_Linux.c ****         #endif /* End UART_Linux_CONTROL_REG_REMOVED == 0u */
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 64


1588:Generated_Source\PSoC5/UART_Linux.c ****         }
1589:Generated_Source\PSoC5/UART_Linux.c ****     }
 1990              		.loc 1 1589 0
 1991 000a 00BF     		nop
 1992 000c 0C37     		adds	r7, r7, #12
 1993              		.cfi_def_cfa_offset 4
 1994 000e BD46     		mov	sp, r7
 1995              		.cfi_def_cfa_register 13
 1996              		@ sp needed
 1997 0010 80BC     		pop	{r7}
 1998              		.cfi_restore 7
 1999              		.cfi_def_cfa_offset 0
 2000 0012 7047     		bx	lr
 2001              		.cfi_endproc
 2002              	.LFE26:
 2003              		.size	UART_Linux_SetTxAddressMode, .-UART_Linux_SetTxAddressMode
 2004              		.bss
 2005              	txPeriod.5150:
 2006 000e 00       		.space	1
 2007              		.text
 2008              	.Letext0:
 2009              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2010              		.section	.debug_info,"",%progbits
 2011              	.Ldebug_info0:
 2012 0000 4A060000 		.4byte	0x64a
 2013 0004 0400     		.2byte	0x4
 2014 0006 00000000 		.4byte	.Ldebug_abbrev0
 2015 000a 04       		.byte	0x4
 2016 000b 01       		.uleb128 0x1
 2017 000c 4B000000 		.4byte	.LASF78
 2018 0010 0C       		.byte	0xc
 2019 0011 9A010000 		.4byte	.LASF79
 2020 0015 8D040000 		.4byte	.LASF80
 2021 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2022 001d 00000000 		.4byte	0
 2023 0021 00000000 		.4byte	.Ldebug_line0
 2024 0025 02       		.uleb128 0x2
 2025 0026 01       		.byte	0x1
 2026 0027 06       		.byte	0x6
 2027 0028 21010000 		.4byte	.LASF0
 2028 002c 02       		.uleb128 0x2
 2029 002d 01       		.byte	0x1
 2030 002e 08       		.byte	0x8
 2031 002f 30040000 		.4byte	.LASF1
 2032 0033 02       		.uleb128 0x2
 2033 0034 02       		.byte	0x2
 2034 0035 05       		.byte	0x5
 2035 0036 3E040000 		.4byte	.LASF2
 2036 003a 02       		.uleb128 0x2
 2037 003b 02       		.byte	0x2
 2038 003c 07       		.byte	0x7
 2039 003d 9F020000 		.4byte	.LASF3
 2040 0041 02       		.uleb128 0x2
 2041 0042 04       		.byte	0x4
 2042 0043 05       		.byte	0x5
 2043 0044 49010000 		.4byte	.LASF4
 2044 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 65


 2045 0049 04       		.byte	0x4
 2046 004a 07       		.byte	0x7
 2047 004b 77020000 		.4byte	.LASF5
 2048 004f 02       		.uleb128 0x2
 2049 0050 08       		.byte	0x8
 2050 0051 05       		.byte	0x5
 2051 0052 13010000 		.4byte	.LASF6
 2052 0056 02       		.uleb128 0x2
 2053 0057 08       		.byte	0x8
 2054 0058 07       		.byte	0x7
 2055 0059 D9000000 		.4byte	.LASF7
 2056 005d 03       		.uleb128 0x3
 2057 005e 04       		.byte	0x4
 2058 005f 05       		.byte	0x5
 2059 0060 696E7400 		.ascii	"int\000"
 2060 0064 02       		.uleb128 0x2
 2061 0065 04       		.byte	0x4
 2062 0066 07       		.byte	0x7
 2063 0067 37020000 		.4byte	.LASF8
 2064 006b 04       		.uleb128 0x4
 2065 006c 67010000 		.4byte	.LASF9
 2066 0070 02       		.byte	0x2
 2067 0071 E801     		.2byte	0x1e8
 2068 0073 2C000000 		.4byte	0x2c
 2069 0077 04       		.uleb128 0x4
 2070 0078 00000000 		.4byte	.LASF10
 2071 007c 02       		.byte	0x2
 2072 007d E901     		.2byte	0x1e9
 2073 007f 3A000000 		.4byte	0x3a
 2074 0083 04       		.uleb128 0x4
 2075 0084 80010000 		.4byte	.LASF11
 2076 0088 02       		.byte	0x2
 2077 0089 EA01     		.2byte	0x1ea
 2078 008b 48000000 		.4byte	0x48
 2079 008f 02       		.uleb128 0x2
 2080 0090 04       		.byte	0x4
 2081 0091 04       		.byte	0x4
 2082 0092 07040000 		.4byte	.LASF12
 2083 0096 02       		.uleb128 0x2
 2084 0097 08       		.byte	0x8
 2085 0098 04       		.byte	0x4
 2086 0099 6D010000 		.4byte	.LASF13
 2087 009d 04       		.uleb128 0x4
 2088 009e 62050000 		.4byte	.LASF14
 2089 00a2 02       		.byte	0x2
 2090 00a3 F901     		.2byte	0x1f9
 2091 00a5 A9000000 		.4byte	0xa9
 2092 00a9 02       		.uleb128 0x2
 2093 00aa 01       		.byte	0x1
 2094 00ab 08       		.byte	0x8
 2095 00ac 42050000 		.4byte	.LASF15
 2096 00b0 04       		.uleb128 0x4
 2097 00b1 2B040000 		.4byte	.LASF16
 2098 00b5 02       		.byte	0x2
 2099 00b6 9202     		.2byte	0x292
 2100 00b8 BC000000 		.4byte	0xbc
 2101 00bc 05       		.uleb128 0x5
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 66


 2102 00bd 6B000000 		.4byte	0x6b
 2103 00c1 05       		.uleb128 0x5
 2104 00c2 77000000 		.4byte	0x77
 2105 00c6 04       		.uleb128 0x4
 2106 00c7 41030000 		.4byte	.LASF17
 2107 00cb 02       		.byte	0x2
 2108 00cc 9402     		.2byte	0x294
 2109 00ce D2000000 		.4byte	0xd2
 2110 00d2 05       		.uleb128 0x5
 2111 00d3 83000000 		.4byte	0x83
 2112 00d7 02       		.uleb128 0x2
 2113 00d8 08       		.byte	0x8
 2114 00d9 04       		.byte	0x4
 2115 00da 8E030000 		.4byte	.LASF18
 2116 00de 02       		.uleb128 0x2
 2117 00df 04       		.byte	0x4
 2118 00e0 07       		.byte	0x7
 2119 00e1 85030000 		.4byte	.LASF19
 2120 00e5 06       		.uleb128 0x6
 2121 00e6 F0000000 		.4byte	.LASF20
 2122 00ea 01       		.byte	0x1
 2123 00eb 4C       		.byte	0x4c
 2124 00ec 00000000 		.4byte	.LFB0
 2125 00f0 24000000 		.4byte	.LFE0-.LFB0
 2126 00f4 01       		.uleb128 0x1
 2127 00f5 9C       		.byte	0x9c
 2128 00f6 06       		.uleb128 0x6
 2129 00f7 06020000 		.4byte	.LASF21
 2130 00fb 01       		.byte	0x1
 2131 00fc 6A       		.byte	0x6a
 2132 00fd 00000000 		.4byte	.LFB1
 2133 0101 6C000000 		.4byte	.LFE1-.LFB1
 2134 0105 01       		.uleb128 0x1
 2135 0106 9C       		.byte	0x9c
 2136 0107 07       		.uleb128 0x7
 2137 0108 01010000 		.4byte	.LASF22
 2138 010c 01       		.byte	0x1
 2139 010d B7       		.byte	0xb7
 2140 010e 00000000 		.4byte	.LFB2
 2141 0112 78000000 		.4byte	.LFE2-.LFB2
 2142 0116 01       		.uleb128 0x1
 2143 0117 9C       		.byte	0x9c
 2144 0118 2B010000 		.4byte	0x12b
 2145 011c 08       		.uleb128 0x8
 2146 011d A1050000 		.4byte	.LASF24
 2147 0121 01       		.byte	0x1
 2148 0122 B9       		.byte	0xb9
 2149 0123 6B000000 		.4byte	0x6b
 2150 0127 02       		.uleb128 0x2
 2151 0128 91       		.byte	0x91
 2152 0129 77       		.sleb128 -9
 2153 012a 00       		.byte	0
 2154 012b 07       		.uleb128 0x7
 2155 012c 44020000 		.4byte	.LASF23
 2156 0130 01       		.byte	0x1
 2157 0131 F0       		.byte	0xf0
 2158 0132 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 67


 2159 0136 70000000 		.4byte	.LFE3-.LFB3
 2160 013a 01       		.uleb128 0x1
 2161 013b 9C       		.byte	0x9c
 2162 013c 4F010000 		.4byte	0x14f
 2163 0140 08       		.uleb128 0x8
 2164 0141 A1050000 		.4byte	.LASF24
 2165 0145 01       		.byte	0x1
 2166 0146 F2       		.byte	0xf2
 2167 0147 6B000000 		.4byte	0x6b
 2168 014b 02       		.uleb128 0x2
 2169 014c 91       		.byte	0x91
 2170 014d 77       		.sleb128 -9
 2171 014e 00       		.byte	0
 2172 014f 09       		.uleb128 0x9
 2173 0150 66030000 		.4byte	.LASF50
 2174 0154 01       		.byte	0x1
 2175 0155 2701     		.2byte	0x127
 2176 0157 6B000000 		.4byte	0x6b
 2177 015b 00000000 		.4byte	.LFB4
 2178 015f 0E000000 		.4byte	.LFE4-.LFB4
 2179 0163 01       		.uleb128 0x1
 2180 0164 9C       		.byte	0x9c
 2181 0165 0A       		.uleb128 0xa
 2182 0166 CE010000 		.4byte	.LASF25
 2183 016a 01       		.byte	0x1
 2184 016b 3F01     		.2byte	0x13f
 2185 016d 00000000 		.4byte	.LFB5
 2186 0171 14000000 		.4byte	.LFE5-.LFB5
 2187 0175 01       		.uleb128 0x1
 2188 0176 9C       		.byte	0x9c
 2189 0177 8B010000 		.4byte	0x18b
 2190 017b 0B       		.uleb128 0xb
 2191 017c 85040000 		.4byte	.LASF27
 2192 0180 01       		.byte	0x1
 2193 0181 3F01     		.2byte	0x13f
 2194 0183 6B000000 		.4byte	0x6b
 2195 0187 02       		.uleb128 0x2
 2196 0188 91       		.byte	0x91
 2197 0189 77       		.sleb128 -9
 2198 018a 00       		.byte	0
 2199 018b 0A       		.uleb128 0xa
 2200 018c 0D040000 		.4byte	.LASF26
 2201 0190 01       		.byte	0x1
 2202 0191 6701     		.2byte	0x167
 2203 0193 00000000 		.4byte	.LFB6
 2204 0197 20000000 		.4byte	.LFE6-.LFB6
 2205 019b 01       		.uleb128 0x1
 2206 019c 9C       		.byte	0x9c
 2207 019d B1010000 		.4byte	0x1b1
 2208 01a1 0B       		.uleb128 0xb
 2209 01a2 ED020000 		.4byte	.LASF28
 2210 01a6 01       		.byte	0x1
 2211 01a7 6701     		.2byte	0x167
 2212 01a9 6B000000 		.4byte	0x6b
 2213 01ad 02       		.uleb128 0x2
 2214 01ae 91       		.byte	0x91
 2215 01af 77       		.sleb128 -9
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 68


 2216 01b0 00       		.byte	0
 2217 01b1 0C       		.uleb128 0xc
 2218 01b2 7B050000 		.4byte	.LASF32
 2219 01b6 01       		.byte	0x1
 2220 01b7 8801     		.2byte	0x188
 2221 01b9 6B000000 		.4byte	0x6b
 2222 01bd 00000000 		.4byte	.LFB7
 2223 01c1 90000000 		.4byte	.LFE7-.LFB7
 2224 01c5 01       		.uleb128 0x1
 2225 01c6 9C       		.byte	0x9c
 2226 01c7 F9010000 		.4byte	0x1f9
 2227 01cb 0D       		.uleb128 0xd
 2228 01cc 7E040000 		.4byte	.LASF29
 2229 01d0 01       		.byte	0x1
 2230 01d1 8A01     		.2byte	0x18a
 2231 01d3 6B000000 		.4byte	0x6b
 2232 01d7 02       		.uleb128 0x2
 2233 01d8 91       		.byte	0x91
 2234 01d9 77       		.sleb128 -9
 2235 01da 0D       		.uleb128 0xd
 2236 01db 91050000 		.4byte	.LASF30
 2237 01df 01       		.byte	0x1
 2238 01e0 8E01     		.2byte	0x18e
 2239 01e2 77000000 		.4byte	0x77
 2240 01e6 02       		.uleb128 0x2
 2241 01e7 91       		.byte	0x91
 2242 01e8 74       		.sleb128 -12
 2243 01e9 0D       		.uleb128 0xd
 2244 01ea ED030000 		.4byte	.LASF31
 2245 01ee 01       		.byte	0x1
 2246 01ef 8F01     		.2byte	0x18f
 2247 01f1 77000000 		.4byte	0x77
 2248 01f5 02       		.uleb128 0x2
 2249 01f6 91       		.byte	0x91
 2250 01f7 72       		.sleb128 -14
 2251 01f8 00       		.byte	0
 2252 01f9 0C       		.uleb128 0xc
 2253 01fa EE010000 		.4byte	.LASF33
 2254 01fe 01       		.byte	0x1
 2255 01ff E501     		.2byte	0x1e5
 2256 0201 6B000000 		.4byte	0x6b
 2257 0205 00000000 		.4byte	.LFB8
 2258 0209 40000000 		.4byte	.LFE8-.LFB8
 2259 020d 01       		.uleb128 0x1
 2260 020e 9C       		.byte	0x9c
 2261 020f 23020000 		.4byte	0x223
 2262 0213 0D       		.uleb128 0xd
 2263 0214 B2050000 		.4byte	.LASF34
 2264 0218 01       		.byte	0x1
 2265 0219 E701     		.2byte	0x1e7
 2266 021b 6B000000 		.4byte	0x6b
 2267 021f 02       		.uleb128 0x2
 2268 0220 91       		.byte	0x91
 2269 0221 77       		.sleb128 -9
 2270 0222 00       		.byte	0
 2271 0223 0C       		.uleb128 0xc
 2272 0224 2F050000 		.4byte	.LASF35
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 69


 2273 0228 01       		.byte	0x1
 2274 0229 1402     		.2byte	0x214
 2275 022b 6B000000 		.4byte	0x6b
 2276 022f 00000000 		.4byte	.LFB9
 2277 0233 B8000000 		.4byte	.LFE9-.LFB9
 2278 0237 01       		.uleb128 0x1
 2279 0238 9C       		.byte	0x9c
 2280 0239 7A020000 		.4byte	0x27a
 2281 023d 0D       		.uleb128 0xd
 2282 023e 7E040000 		.4byte	.LASF29
 2283 0242 01       		.byte	0x1
 2284 0243 1602     		.2byte	0x216
 2285 0245 6B000000 		.4byte	0x6b
 2286 0249 02       		.uleb128 0x2
 2287 024a 91       		.byte	0x91
 2288 024b 77       		.sleb128 -9
 2289 024c 0D       		.uleb128 0xd
 2290 024d FE030000 		.4byte	.LASF36
 2291 0251 01       		.byte	0x1
 2292 0252 1702     		.2byte	0x217
 2293 0254 6B000000 		.4byte	0x6b
 2294 0258 02       		.uleb128 0x2
 2295 0259 91       		.byte	0x91
 2296 025a 71       		.sleb128 -15
 2297 025b 0D       		.uleb128 0xd
 2298 025c 91050000 		.4byte	.LASF30
 2299 0260 01       		.byte	0x1
 2300 0261 1A02     		.2byte	0x21a
 2301 0263 77000000 		.4byte	0x77
 2302 0267 02       		.uleb128 0x2
 2303 0268 91       		.byte	0x91
 2304 0269 74       		.sleb128 -12
 2305 026a 0D       		.uleb128 0xd
 2306 026b ED030000 		.4byte	.LASF31
 2307 026f 01       		.byte	0x1
 2308 0270 1B02     		.2byte	0x21b
 2309 0272 77000000 		.4byte	0x77
 2310 0276 02       		.uleb128 0x2
 2311 0277 91       		.byte	0x91
 2312 0278 72       		.sleb128 -14
 2313 0279 00       		.byte	0
 2314 027a 0E       		.uleb128 0xe
 2315 027b 3D060000 		.4byte	.LASF37
 2316 027f 01       		.byte	0x1
 2317 0280 7A02     		.2byte	0x27a
 2318 0282 77000000 		.4byte	0x77
 2319 0286 00000000 		.4byte	.LFB10
 2320 028a 44000000 		.4byte	.LFE10-.LFB10
 2321 028e 01       		.uleb128 0x1
 2322 028f 9C       		.byte	0x9c
 2323 0290 A4020000 		.4byte	0x2a4
 2324 0294 0D       		.uleb128 0xd
 2325 0295 68020000 		.4byte	.LASF38
 2326 0299 01       		.byte	0x1
 2327 029a 7E02     		.2byte	0x27e
 2328 029c 77000000 		.4byte	0x77
 2329 02a0 02       		.uleb128 0x2
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 70


 2330 02a1 91       		.byte	0x91
 2331 02a2 6E       		.sleb128 -18
 2332 02a3 00       		.byte	0
 2333 02a4 0C       		.uleb128 0xc
 2334 02a5 47050000 		.4byte	.LASF39
 2335 02a9 01       		.byte	0x1
 2336 02aa AB02     		.2byte	0x2ab
 2337 02ac 77000000 		.4byte	0x77
 2338 02b0 00000000 		.4byte	.LFB11
 2339 02b4 94000000 		.4byte	.LFE11-.LFB11
 2340 02b8 01       		.uleb128 0x1
 2341 02b9 9C       		.byte	0x9c
 2342 02ba CE020000 		.4byte	0x2ce
 2343 02be 0D       		.uleb128 0xd
 2344 02bf 9A020000 		.4byte	.LASF40
 2345 02c3 01       		.byte	0x1
 2346 02c4 AE02     		.2byte	0x2ae
 2347 02c6 77000000 		.4byte	0x77
 2348 02ca 02       		.uleb128 0x2
 2349 02cb 91       		.byte	0x91
 2350 02cc 76       		.sleb128 -10
 2351 02cd 00       		.byte	0
 2352 02ce 0F       		.uleb128 0xf
 2353 02cf D7050000 		.4byte	.LASF41
 2354 02d3 01       		.byte	0x1
 2355 02d4 F502     		.2byte	0x2f5
 2356 02d6 00000000 		.4byte	.LFB12
 2357 02da 80000000 		.4byte	.LFE12-.LFB12
 2358 02de 01       		.uleb128 0x1
 2359 02df 9C       		.byte	0x9c
 2360 02e0 F4020000 		.4byte	0x2f4
 2361 02e4 0D       		.uleb128 0xd
 2362 02e5 A1050000 		.4byte	.LASF24
 2363 02e9 01       		.byte	0x1
 2364 02ea F702     		.2byte	0x2f7
 2365 02ec 6B000000 		.4byte	0x6b
 2366 02f0 02       		.uleb128 0x2
 2367 02f1 91       		.byte	0x91
 2368 02f2 77       		.sleb128 -9
 2369 02f3 00       		.byte	0
 2370 02f4 0A       		.uleb128 0xa
 2371 02f5 F0050000 		.4byte	.LASF42
 2372 02f9 01       		.byte	0x1
 2373 02fa 2D03     		.2byte	0x32d
 2374 02fc 00000000 		.4byte	.LFB13
 2375 0300 14000000 		.4byte	.LFE13-.LFB13
 2376 0304 01       		.uleb128 0x1
 2377 0305 9C       		.byte	0x9c
 2378 0306 1A030000 		.4byte	0x31a
 2379 030a 0B       		.uleb128 0xb
 2380 030b 74010000 		.4byte	.LASF43
 2381 030f 01       		.byte	0x1
 2382 0310 2D03     		.2byte	0x32d
 2383 0312 6B000000 		.4byte	0x6b
 2384 0316 02       		.uleb128 0x2
 2385 0317 91       		.byte	0x91
 2386 0318 77       		.sleb128 -9
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 71


 2387 0319 00       		.byte	0
 2388 031a 0A       		.uleb128 0xa
 2389 031b 12000000 		.4byte	.LASF44
 2390 031f 01       		.byte	0x1
 2391 0320 5903     		.2byte	0x359
 2392 0322 00000000 		.4byte	.LFB14
 2393 0326 20000000 		.4byte	.LFE14-.LFB14
 2394 032a 01       		.uleb128 0x1
 2395 032b 9C       		.byte	0x9c
 2396 032c 40030000 		.4byte	0x340
 2397 0330 0B       		.uleb128 0xb
 2398 0331 B3030000 		.4byte	.LASF45
 2399 0335 01       		.byte	0x1
 2400 0336 5903     		.2byte	0x359
 2401 0338 6B000000 		.4byte	0x6b
 2402 033c 02       		.uleb128 0x2
 2403 033d 91       		.byte	0x91
 2404 033e 77       		.sleb128 -9
 2405 033f 00       		.byte	0
 2406 0340 0A       		.uleb128 0xa
 2407 0341 9A030000 		.4byte	.LASF46
 2408 0345 01       		.byte	0x1
 2409 0346 6D03     		.2byte	0x36d
 2410 0348 00000000 		.4byte	.LFB15
 2411 034c 20000000 		.4byte	.LFE15-.LFB15
 2412 0350 01       		.uleb128 0x1
 2413 0351 9C       		.byte	0x9c
 2414 0352 66030000 		.4byte	0x366
 2415 0356 0B       		.uleb128 0xb
 2416 0357 B3030000 		.4byte	.LASF45
 2417 035b 01       		.byte	0x1
 2418 035c 6D03     		.2byte	0x36d
 2419 035e 6B000000 		.4byte	0x6b
 2420 0362 02       		.uleb128 0x2
 2421 0363 91       		.byte	0x91
 2422 0364 77       		.sleb128 -9
 2423 0365 00       		.byte	0
 2424 0366 0A       		.uleb128 0xa
 2425 0367 B9050000 		.4byte	.LASF47
 2426 036b 01       		.byte	0x1
 2427 036c 8C03     		.2byte	0x38c
 2428 036e 00000000 		.4byte	.LFB16
 2429 0372 20000000 		.4byte	.LFE16-.LFB16
 2430 0376 01       		.uleb128 0x1
 2431 0377 9C       		.byte	0x9c
 2432 0378 8C030000 		.4byte	0x38c
 2433 037c 0B       		.uleb128 0xb
 2434 037d ED020000 		.4byte	.LASF28
 2435 0381 01       		.byte	0x1
 2436 0382 8C03     		.2byte	0x38c
 2437 0384 6B000000 		.4byte	0x6b
 2438 0388 02       		.uleb128 0x2
 2439 0389 91       		.byte	0x91
 2440 038a 77       		.sleb128 -9
 2441 038b 00       		.byte	0
 2442 038c 0A       		.uleb128 0xa
 2443 038d D6030000 		.4byte	.LASF48
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 72


 2444 0391 01       		.byte	0x1
 2445 0392 AE03     		.2byte	0x3ae
 2446 0394 00000000 		.4byte	.LFB17
 2447 0398 94000000 		.4byte	.LFE17-.LFB17
 2448 039c 01       		.uleb128 0x1
 2449 039d 9C       		.byte	0x9c
 2450 039e B2030000 		.4byte	0x3b2
 2451 03a2 0B       		.uleb128 0xb
 2452 03a3 07000000 		.4byte	.LASF49
 2453 03a7 01       		.byte	0x1
 2454 03a8 AE03     		.2byte	0x3ae
 2455 03aa 6B000000 		.4byte	0x6b
 2456 03ae 02       		.uleb128 0x2
 2457 03af 91       		.byte	0x91
 2458 03b0 77       		.sleb128 -9
 2459 03b1 00       		.byte	0
 2460 03b2 09       		.uleb128 0x9
 2461 03b3 50060000 		.4byte	.LASF51
 2462 03b7 01       		.byte	0x1
 2463 03b8 EB03     		.2byte	0x3eb
 2464 03ba 6B000000 		.4byte	0x6b
 2465 03be 00000000 		.4byte	.LFB18
 2466 03c2 18000000 		.4byte	.LFE18-.LFB18
 2467 03c6 01       		.uleb128 0x1
 2468 03c7 9C       		.byte	0x9c
 2469 03c8 0A       		.uleb128 0xa
 2470 03c9 2D010000 		.4byte	.LASF52
 2471 03cd 01       		.byte	0x1
 2472 03ce 1104     		.2byte	0x411
 2473 03d0 00000000 		.4byte	.LFB19
 2474 03d4 BC000000 		.4byte	.LFE19-.LFB19
 2475 03d8 01       		.uleb128 0x1
 2476 03d9 9C       		.byte	0x9c
 2477 03da 0C040000 		.4byte	0x40c
 2478 03de 0B       		.uleb128 0xb
 2479 03df 07000000 		.4byte	.LASF49
 2480 03e3 01       		.byte	0x1
 2481 03e4 1104     		.2byte	0x411
 2482 03e6 6B000000 		.4byte	0x6b
 2483 03ea 02       		.uleb128 0x2
 2484 03eb 91       		.byte	0x91
 2485 03ec 6F       		.sleb128 -17
 2486 03ed 0D       		.uleb128 0xd
 2487 03ee 89020000 		.4byte	.LASF53
 2488 03f2 01       		.byte	0x1
 2489 03f3 1804     		.2byte	0x418
 2490 03f5 77000000 		.4byte	0x77
 2491 03f9 02       		.uleb128 0x2
 2492 03fa 91       		.byte	0x91
 2493 03fb 76       		.sleb128 -10
 2494 03fc 0D       		.uleb128 0xd
 2495 03fd BE010000 		.4byte	.LASF54
 2496 0401 01       		.byte	0x1
 2497 0402 1904     		.2byte	0x419
 2498 0404 77000000 		.4byte	0x77
 2499 0408 02       		.uleb128 0x2
 2500 0409 91       		.byte	0x91
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 73


 2501 040a 74       		.sleb128 -12
 2502 040b 00       		.byte	0
 2503 040c 0F       		.uleb128 0xf
 2504 040d 2C030000 		.4byte	.LASF55
 2505 0411 01       		.byte	0x1
 2506 0412 7904     		.2byte	0x479
 2507 0414 00000000 		.4byte	.LFB20
 2508 0418 44000000 		.4byte	.LFE20-.LFB20
 2509 041c 01       		.uleb128 0x1
 2510 041d 9C       		.byte	0x9c
 2511 041e 41040000 		.4byte	0x441
 2512 0422 0B       		.uleb128 0xb
 2513 0423 44000000 		.4byte	.LASF56
 2514 0427 01       		.byte	0x1
 2515 0428 7904     		.2byte	0x479
 2516 042a 41040000 		.4byte	0x441
 2517 042e 02       		.uleb128 0x2
 2518 042f 91       		.byte	0x91
 2519 0430 6C       		.sleb128 -20
 2520 0431 0D       		.uleb128 0xd
 2521 0432 D0020000 		.4byte	.LASF57
 2522 0436 01       		.byte	0x1
 2523 0437 7B04     		.2byte	0x47b
 2524 0439 77000000 		.4byte	0x77
 2525 043d 02       		.uleb128 0x2
 2526 043e 91       		.byte	0x91
 2527 043f 76       		.sleb128 -10
 2528 0440 00       		.byte	0
 2529 0441 10       		.uleb128 0x10
 2530 0442 04       		.byte	0x4
 2531 0443 47040000 		.4byte	0x447
 2532 0447 11       		.uleb128 0x11
 2533 0448 9D000000 		.4byte	0x9d
 2534 044c 0F       		.uleb128 0xf
 2535 044d D9020000 		.4byte	.LASF58
 2536 0451 01       		.byte	0x1
 2537 0452 A704     		.2byte	0x4a7
 2538 0454 00000000 		.4byte	.LFB21
 2539 0458 44000000 		.4byte	.LFE21-.LFB21
 2540 045c 01       		.uleb128 0x1
 2541 045d 9C       		.byte	0x9c
 2542 045e 90040000 		.4byte	0x490
 2543 0462 0B       		.uleb128 0xb
 2544 0463 44000000 		.4byte	.LASF56
 2545 0467 01       		.byte	0x1
 2546 0468 A704     		.2byte	0x4a7
 2547 046a 90040000 		.4byte	0x490
 2548 046e 02       		.uleb128 0x2
 2549 046f 91       		.byte	0x91
 2550 0470 6C       		.sleb128 -20
 2551 0471 0B       		.uleb128 0xb
 2552 0472 60040000 		.4byte	.LASF59
 2553 0476 01       		.byte	0x1
 2554 0477 A704     		.2byte	0x4a7
 2555 0479 77000000 		.4byte	0x77
 2556 047d 02       		.uleb128 0x2
 2557 047e 91       		.byte	0x91
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 74


 2558 047f 6A       		.sleb128 -22
 2559 0480 0D       		.uleb128 0xd
 2560 0481 D0020000 		.4byte	.LASF57
 2561 0485 01       		.byte	0x1
 2562 0486 AA04     		.2byte	0x4aa
 2563 0488 77000000 		.4byte	0x77
 2564 048c 02       		.uleb128 0x2
 2565 048d 91       		.byte	0x91
 2566 048e 76       		.sleb128 -10
 2567 048f 00       		.byte	0
 2568 0490 10       		.uleb128 0x10
 2569 0491 04       		.byte	0x4
 2570 0492 96040000 		.4byte	0x496
 2571 0496 11       		.uleb128 0x11
 2572 0497 6B000000 		.4byte	0x6b
 2573 049b 0F       		.uleb128 0xf
 2574 049c 87010000 		.4byte	.LASF60
 2575 04a0 01       		.byte	0x1
 2576 04a1 CE04     		.2byte	0x4ce
 2577 04a3 00000000 		.4byte	.LFB22
 2578 04a7 34000000 		.4byte	.LFE22-.LFB22
 2579 04ab 01       		.uleb128 0x1
 2580 04ac 9C       		.byte	0x9c
 2581 04ad C1040000 		.4byte	0x4c1
 2582 04b1 0B       		.uleb128 0xb
 2583 04b2 07000000 		.4byte	.LASF49
 2584 04b6 01       		.byte	0x1
 2585 04b7 CE04     		.2byte	0x4ce
 2586 04b9 6B000000 		.4byte	0x6b
 2587 04bd 02       		.uleb128 0x2
 2588 04be 91       		.byte	0x91
 2589 04bf 77       		.sleb128 -9
 2590 04c0 00       		.byte	0
 2591 04c1 0C       		.uleb128 0xc
 2592 04c2 BB030000 		.4byte	.LASF61
 2593 04c6 01       		.byte	0x1
 2594 04c7 F904     		.2byte	0x4f9
 2595 04c9 77000000 		.4byte	0x77
 2596 04cd 00000000 		.4byte	.LFB23
 2597 04d1 74000000 		.4byte	.LFE23-.LFB23
 2598 04d5 01       		.uleb128 0x1
 2599 04d6 9C       		.byte	0x9c
 2600 04d7 EB040000 		.4byte	0x4eb
 2601 04db 0D       		.uleb128 0xd
 2602 04dc 9A020000 		.4byte	.LASF40
 2603 04e0 01       		.byte	0x1
 2604 04e1 FC04     		.2byte	0x4fc
 2605 04e3 77000000 		.4byte	0x77
 2606 04e7 02       		.uleb128 0x2
 2607 04e8 91       		.byte	0x91
 2608 04e9 76       		.sleb128 -10
 2609 04ea 00       		.byte	0
 2610 04eb 0F       		.uleb128 0xf
 2611 04ec 1E020000 		.4byte	.LASF62
 2612 04f0 01       		.byte	0x1
 2613 04f1 4A05     		.2byte	0x54a
 2614 04f3 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 75


 2615 04f7 6C000000 		.4byte	.LFE24-.LFB24
 2616 04fb 01       		.uleb128 0x1
 2617 04fc 9C       		.byte	0x9c
 2618 04fd 11050000 		.4byte	0x511
 2619 0501 0D       		.uleb128 0xd
 2620 0502 A1050000 		.4byte	.LASF24
 2621 0506 01       		.byte	0x1
 2622 0507 4C05     		.2byte	0x54c
 2623 0509 6B000000 		.4byte	0x6b
 2624 050d 02       		.uleb128 0x2
 2625 050e 91       		.byte	0x91
 2626 050f 77       		.sleb128 -9
 2627 0510 00       		.byte	0
 2628 0511 0A       		.uleb128 0xa
 2629 0512 52010000 		.4byte	.LASF63
 2630 0516 01       		.byte	0x1
 2631 0517 A005     		.2byte	0x5a0
 2632 0519 00000000 		.4byte	.LFB25
 2633 051d 9C000000 		.4byte	.LFE25-.LFB25
 2634 0521 01       		.uleb128 0x1
 2635 0522 9C       		.byte	0x9c
 2636 0523 62050000 		.4byte	0x562
 2637 0527 0B       		.uleb128 0xb
 2638 0528 16020000 		.4byte	.LASF64
 2639 052c 01       		.byte	0x1
 2640 052d A005     		.2byte	0x5a0
 2641 052f 6B000000 		.4byte	0x6b
 2642 0533 02       		.uleb128 0x2
 2643 0534 91       		.byte	0x91
 2644 0535 6F       		.sleb128 -17
 2645 0536 12       		.uleb128 0x12
 2646 0537 12000000 		.4byte	.LBB2
 2647 053b 6C000000 		.4byte	.LBE2-.LBB2
 2648 053f 0D       		.uleb128 0xd
 2649 0540 5E030000 		.4byte	.LASF65
 2650 0544 01       		.byte	0x1
 2651 0545 A805     		.2byte	0x5a8
 2652 0547 6B000000 		.4byte	0x6b
 2653 054b 02       		.uleb128 0x2
 2654 054c 91       		.byte	0x91
 2655 054d 77       		.sleb128 -9
 2656 054e 0D       		.uleb128 0xd
 2657 054f 40010000 		.4byte	.LASF66
 2658 0553 01       		.byte	0x1
 2659 0554 D005     		.2byte	0x5d0
 2660 0556 6B000000 		.4byte	0x6b
 2661 055a 05       		.uleb128 0x5
 2662 055b 03       		.byte	0x3
 2663 055c 0E000000 		.4byte	txPeriod.5150
 2664 0560 00       		.byte	0
 2665 0561 00       		.byte	0
 2666 0562 0A       		.uleb128 0xa
 2667 0563 10030000 		.4byte	.LASF67
 2668 0567 01       		.byte	0x1
 2669 0568 2406     		.2byte	0x624
 2670 056a 00000000 		.4byte	.LFB26
 2671 056e 14000000 		.4byte	.LFE26-.LFB26
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 76


 2672 0572 01       		.uleb128 0x1
 2673 0573 9C       		.byte	0x9c
 2674 0574 88050000 		.4byte	0x588
 2675 0578 0B       		.uleb128 0xb
 2676 0579 74010000 		.4byte	.LASF43
 2677 057d 01       		.byte	0x1
 2678 057e 2406     		.2byte	0x624
 2679 0580 6B000000 		.4byte	0x6b
 2680 0584 02       		.uleb128 0x2
 2681 0585 91       		.byte	0x91
 2682 0586 77       		.sleb128 -9
 2683 0587 00       		.byte	0
 2684 0588 13       		.uleb128 0x13
 2685 0589 68050000 		.4byte	.LASF68
 2686 058d 01       		.byte	0x1
 2687 058e 1B       		.byte	0x1b
 2688 058f 6B000000 		.4byte	0x6b
 2689 0593 05       		.uleb128 0x5
 2690 0594 03       		.byte	0x3
 2691 0595 00000000 		.4byte	UART_Linux_initVar
 2692 0599 14       		.uleb128 0x14
 2693 059a BC000000 		.4byte	0xbc
 2694 059e AA050000 		.4byte	0x5aa
 2695 05a2 15       		.uleb128 0x15
 2696 05a3 DE000000 		.4byte	0xde
 2697 05a7 FF03     		.2byte	0x3ff
 2698 05a9 00       		.byte	0
 2699 05aa 13       		.uleb128 0x13
 2700 05ab 54020000 		.4byte	.LASF69
 2701 05af 01       		.byte	0x1
 2702 05b0 1E       		.byte	0x1e
 2703 05b1 BB050000 		.4byte	0x5bb
 2704 05b5 05       		.uleb128 0x5
 2705 05b6 03       		.byte	0x3
 2706 05b7 00000000 		.4byte	UART_Linux_txBuffer
 2707 05bb 05       		.uleb128 0x5
 2708 05bc 99050000 		.4byte	0x599
 2709 05c0 13       		.uleb128 0x13
 2710 05c1 48040000 		.4byte	.LASF70
 2711 05c5 01       		.byte	0x1
 2712 05c6 1F       		.byte	0x1f
 2713 05c7 C1000000 		.4byte	0xc1
 2714 05cb 05       		.uleb128 0x5
 2715 05cc 03       		.byte	0x3
 2716 05cd 00000000 		.4byte	UART_Linux_txBufferRead
 2717 05d1 13       		.uleb128 0x13
 2718 05d2 2B000000 		.4byte	.LASF71
 2719 05d6 01       		.byte	0x1
 2720 05d7 20       		.byte	0x20
 2721 05d8 77000000 		.4byte	0x77
 2722 05dc 05       		.uleb128 0x5
 2723 05dd 03       		.byte	0x3
 2724 05de 00000000 		.4byte	UART_Linux_txBufferWrite
 2725 05e2 13       		.uleb128 0x13
 2726 05e3 47030000 		.4byte	.LASF72
 2727 05e7 01       		.byte	0x1
 2728 05e8 24       		.byte	0x24
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 77


 2729 05e9 6B000000 		.4byte	0x6b
 2730 05ed 05       		.uleb128 0x5
 2731 05ee 03       		.byte	0x3
 2732 05ef 00000000 		.4byte	UART_Linux_errorStatus
 2733 05f3 13       		.uleb128 0x13
 2734 05f4 6A040000 		.4byte	.LASF73
 2735 05f8 01       		.byte	0x1
 2736 05f9 25       		.byte	0x25
 2737 05fa 04060000 		.4byte	0x604
 2738 05fe 05       		.uleb128 0x5
 2739 05ff 03       		.byte	0x3
 2740 0600 00000000 		.4byte	UART_Linux_rxBuffer
 2741 0604 05       		.uleb128 0x5
 2742 0605 99050000 		.4byte	0x599
 2743 0609 13       		.uleb128 0x13
 2744 060a 0C060000 		.4byte	.LASF74
 2745 060e 01       		.byte	0x1
 2746 060f 26       		.byte	0x26
 2747 0610 C1000000 		.4byte	0xc1
 2748 0614 05       		.uleb128 0x5
 2749 0615 03       		.byte	0x3
 2750 0616 00000000 		.4byte	UART_Linux_rxBufferRead
 2751 061a 13       		.uleb128 0x13
 2752 061b 24060000 		.4byte	.LASF75
 2753 061f 01       		.byte	0x1
 2754 0620 27       		.byte	0x27
 2755 0621 C1000000 		.4byte	0xc1
 2756 0625 05       		.uleb128 0x5
 2757 0626 03       		.byte	0x3
 2758 0627 00000000 		.4byte	UART_Linux_rxBufferWrite
 2759 062b 13       		.uleb128 0x13
 2760 062c B2020000 		.4byte	.LASF76
 2761 0630 01       		.byte	0x1
 2762 0631 28       		.byte	0x28
 2763 0632 BC000000 		.4byte	0xbc
 2764 0636 05       		.uleb128 0x5
 2765 0637 03       		.byte	0x3
 2766 0638 00000000 		.4byte	UART_Linux_rxBufferLoopDetect
 2767 063c 13       		.uleb128 0x13
 2768 063d F4020000 		.4byte	.LASF77
 2769 0641 01       		.byte	0x1
 2770 0642 29       		.byte	0x29
 2771 0643 BC000000 		.4byte	0xbc
 2772 0647 05       		.uleb128 0x5
 2773 0648 03       		.byte	0x3
 2774 0649 00000000 		.4byte	UART_Linux_rxBufferOverflow
 2775 064d 00       		.byte	0
 2776              		.section	.debug_abbrev,"",%progbits
 2777              	.Ldebug_abbrev0:
 2778 0000 01       		.uleb128 0x1
 2779 0001 11       		.uleb128 0x11
 2780 0002 01       		.byte	0x1
 2781 0003 25       		.uleb128 0x25
 2782 0004 0E       		.uleb128 0xe
 2783 0005 13       		.uleb128 0x13
 2784 0006 0B       		.uleb128 0xb
 2785 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 78


 2786 0008 0E       		.uleb128 0xe
 2787 0009 1B       		.uleb128 0x1b
 2788 000a 0E       		.uleb128 0xe
 2789 000b 55       		.uleb128 0x55
 2790 000c 17       		.uleb128 0x17
 2791 000d 11       		.uleb128 0x11
 2792 000e 01       		.uleb128 0x1
 2793 000f 10       		.uleb128 0x10
 2794 0010 17       		.uleb128 0x17
 2795 0011 00       		.byte	0
 2796 0012 00       		.byte	0
 2797 0013 02       		.uleb128 0x2
 2798 0014 24       		.uleb128 0x24
 2799 0015 00       		.byte	0
 2800 0016 0B       		.uleb128 0xb
 2801 0017 0B       		.uleb128 0xb
 2802 0018 3E       		.uleb128 0x3e
 2803 0019 0B       		.uleb128 0xb
 2804 001a 03       		.uleb128 0x3
 2805 001b 0E       		.uleb128 0xe
 2806 001c 00       		.byte	0
 2807 001d 00       		.byte	0
 2808 001e 03       		.uleb128 0x3
 2809 001f 24       		.uleb128 0x24
 2810 0020 00       		.byte	0
 2811 0021 0B       		.uleb128 0xb
 2812 0022 0B       		.uleb128 0xb
 2813 0023 3E       		.uleb128 0x3e
 2814 0024 0B       		.uleb128 0xb
 2815 0025 03       		.uleb128 0x3
 2816 0026 08       		.uleb128 0x8
 2817 0027 00       		.byte	0
 2818 0028 00       		.byte	0
 2819 0029 04       		.uleb128 0x4
 2820 002a 16       		.uleb128 0x16
 2821 002b 00       		.byte	0
 2822 002c 03       		.uleb128 0x3
 2823 002d 0E       		.uleb128 0xe
 2824 002e 3A       		.uleb128 0x3a
 2825 002f 0B       		.uleb128 0xb
 2826 0030 3B       		.uleb128 0x3b
 2827 0031 05       		.uleb128 0x5
 2828 0032 49       		.uleb128 0x49
 2829 0033 13       		.uleb128 0x13
 2830 0034 00       		.byte	0
 2831 0035 00       		.byte	0
 2832 0036 05       		.uleb128 0x5
 2833 0037 35       		.uleb128 0x35
 2834 0038 00       		.byte	0
 2835 0039 49       		.uleb128 0x49
 2836 003a 13       		.uleb128 0x13
 2837 003b 00       		.byte	0
 2838 003c 00       		.byte	0
 2839 003d 06       		.uleb128 0x6
 2840 003e 2E       		.uleb128 0x2e
 2841 003f 00       		.byte	0
 2842 0040 3F       		.uleb128 0x3f
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 79


 2843 0041 19       		.uleb128 0x19
 2844 0042 03       		.uleb128 0x3
 2845 0043 0E       		.uleb128 0xe
 2846 0044 3A       		.uleb128 0x3a
 2847 0045 0B       		.uleb128 0xb
 2848 0046 3B       		.uleb128 0x3b
 2849 0047 0B       		.uleb128 0xb
 2850 0048 27       		.uleb128 0x27
 2851 0049 19       		.uleb128 0x19
 2852 004a 11       		.uleb128 0x11
 2853 004b 01       		.uleb128 0x1
 2854 004c 12       		.uleb128 0x12
 2855 004d 06       		.uleb128 0x6
 2856 004e 40       		.uleb128 0x40
 2857 004f 18       		.uleb128 0x18
 2858 0050 9642     		.uleb128 0x2116
 2859 0052 19       		.uleb128 0x19
 2860 0053 00       		.byte	0
 2861 0054 00       		.byte	0
 2862 0055 07       		.uleb128 0x7
 2863 0056 2E       		.uleb128 0x2e
 2864 0057 01       		.byte	0x1
 2865 0058 3F       		.uleb128 0x3f
 2866 0059 19       		.uleb128 0x19
 2867 005a 03       		.uleb128 0x3
 2868 005b 0E       		.uleb128 0xe
 2869 005c 3A       		.uleb128 0x3a
 2870 005d 0B       		.uleb128 0xb
 2871 005e 3B       		.uleb128 0x3b
 2872 005f 0B       		.uleb128 0xb
 2873 0060 27       		.uleb128 0x27
 2874 0061 19       		.uleb128 0x19
 2875 0062 11       		.uleb128 0x11
 2876 0063 01       		.uleb128 0x1
 2877 0064 12       		.uleb128 0x12
 2878 0065 06       		.uleb128 0x6
 2879 0066 40       		.uleb128 0x40
 2880 0067 18       		.uleb128 0x18
 2881 0068 9642     		.uleb128 0x2116
 2882 006a 19       		.uleb128 0x19
 2883 006b 01       		.uleb128 0x1
 2884 006c 13       		.uleb128 0x13
 2885 006d 00       		.byte	0
 2886 006e 00       		.byte	0
 2887 006f 08       		.uleb128 0x8
 2888 0070 34       		.uleb128 0x34
 2889 0071 00       		.byte	0
 2890 0072 03       		.uleb128 0x3
 2891 0073 0E       		.uleb128 0xe
 2892 0074 3A       		.uleb128 0x3a
 2893 0075 0B       		.uleb128 0xb
 2894 0076 3B       		.uleb128 0x3b
 2895 0077 0B       		.uleb128 0xb
 2896 0078 49       		.uleb128 0x49
 2897 0079 13       		.uleb128 0x13
 2898 007a 02       		.uleb128 0x2
 2899 007b 18       		.uleb128 0x18
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 80


 2900 007c 00       		.byte	0
 2901 007d 00       		.byte	0
 2902 007e 09       		.uleb128 0x9
 2903 007f 2E       		.uleb128 0x2e
 2904 0080 00       		.byte	0
 2905 0081 3F       		.uleb128 0x3f
 2906 0082 19       		.uleb128 0x19
 2907 0083 03       		.uleb128 0x3
 2908 0084 0E       		.uleb128 0xe
 2909 0085 3A       		.uleb128 0x3a
 2910 0086 0B       		.uleb128 0xb
 2911 0087 3B       		.uleb128 0x3b
 2912 0088 05       		.uleb128 0x5
 2913 0089 27       		.uleb128 0x27
 2914 008a 19       		.uleb128 0x19
 2915 008b 49       		.uleb128 0x49
 2916 008c 13       		.uleb128 0x13
 2917 008d 11       		.uleb128 0x11
 2918 008e 01       		.uleb128 0x1
 2919 008f 12       		.uleb128 0x12
 2920 0090 06       		.uleb128 0x6
 2921 0091 40       		.uleb128 0x40
 2922 0092 18       		.uleb128 0x18
 2923 0093 9742     		.uleb128 0x2117
 2924 0095 19       		.uleb128 0x19
 2925 0096 00       		.byte	0
 2926 0097 00       		.byte	0
 2927 0098 0A       		.uleb128 0xa
 2928 0099 2E       		.uleb128 0x2e
 2929 009a 01       		.byte	0x1
 2930 009b 3F       		.uleb128 0x3f
 2931 009c 19       		.uleb128 0x19
 2932 009d 03       		.uleb128 0x3
 2933 009e 0E       		.uleb128 0xe
 2934 009f 3A       		.uleb128 0x3a
 2935 00a0 0B       		.uleb128 0xb
 2936 00a1 3B       		.uleb128 0x3b
 2937 00a2 05       		.uleb128 0x5
 2938 00a3 27       		.uleb128 0x27
 2939 00a4 19       		.uleb128 0x19
 2940 00a5 11       		.uleb128 0x11
 2941 00a6 01       		.uleb128 0x1
 2942 00a7 12       		.uleb128 0x12
 2943 00a8 06       		.uleb128 0x6
 2944 00a9 40       		.uleb128 0x40
 2945 00aa 18       		.uleb128 0x18
 2946 00ab 9742     		.uleb128 0x2117
 2947 00ad 19       		.uleb128 0x19
 2948 00ae 01       		.uleb128 0x1
 2949 00af 13       		.uleb128 0x13
 2950 00b0 00       		.byte	0
 2951 00b1 00       		.byte	0
 2952 00b2 0B       		.uleb128 0xb
 2953 00b3 05       		.uleb128 0x5
 2954 00b4 00       		.byte	0
 2955 00b5 03       		.uleb128 0x3
 2956 00b6 0E       		.uleb128 0xe
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 81


 2957 00b7 3A       		.uleb128 0x3a
 2958 00b8 0B       		.uleb128 0xb
 2959 00b9 3B       		.uleb128 0x3b
 2960 00ba 05       		.uleb128 0x5
 2961 00bb 49       		.uleb128 0x49
 2962 00bc 13       		.uleb128 0x13
 2963 00bd 02       		.uleb128 0x2
 2964 00be 18       		.uleb128 0x18
 2965 00bf 00       		.byte	0
 2966 00c0 00       		.byte	0
 2967 00c1 0C       		.uleb128 0xc
 2968 00c2 2E       		.uleb128 0x2e
 2969 00c3 01       		.byte	0x1
 2970 00c4 3F       		.uleb128 0x3f
 2971 00c5 19       		.uleb128 0x19
 2972 00c6 03       		.uleb128 0x3
 2973 00c7 0E       		.uleb128 0xe
 2974 00c8 3A       		.uleb128 0x3a
 2975 00c9 0B       		.uleb128 0xb
 2976 00ca 3B       		.uleb128 0x3b
 2977 00cb 05       		.uleb128 0x5
 2978 00cc 27       		.uleb128 0x27
 2979 00cd 19       		.uleb128 0x19
 2980 00ce 49       		.uleb128 0x49
 2981 00cf 13       		.uleb128 0x13
 2982 00d0 11       		.uleb128 0x11
 2983 00d1 01       		.uleb128 0x1
 2984 00d2 12       		.uleb128 0x12
 2985 00d3 06       		.uleb128 0x6
 2986 00d4 40       		.uleb128 0x40
 2987 00d5 18       		.uleb128 0x18
 2988 00d6 9742     		.uleb128 0x2117
 2989 00d8 19       		.uleb128 0x19
 2990 00d9 01       		.uleb128 0x1
 2991 00da 13       		.uleb128 0x13
 2992 00db 00       		.byte	0
 2993 00dc 00       		.byte	0
 2994 00dd 0D       		.uleb128 0xd
 2995 00de 34       		.uleb128 0x34
 2996 00df 00       		.byte	0
 2997 00e0 03       		.uleb128 0x3
 2998 00e1 0E       		.uleb128 0xe
 2999 00e2 3A       		.uleb128 0x3a
 3000 00e3 0B       		.uleb128 0xb
 3001 00e4 3B       		.uleb128 0x3b
 3002 00e5 05       		.uleb128 0x5
 3003 00e6 49       		.uleb128 0x49
 3004 00e7 13       		.uleb128 0x13
 3005 00e8 02       		.uleb128 0x2
 3006 00e9 18       		.uleb128 0x18
 3007 00ea 00       		.byte	0
 3008 00eb 00       		.byte	0
 3009 00ec 0E       		.uleb128 0xe
 3010 00ed 2E       		.uleb128 0x2e
 3011 00ee 01       		.byte	0x1
 3012 00ef 3F       		.uleb128 0x3f
 3013 00f0 19       		.uleb128 0x19
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 82


 3014 00f1 03       		.uleb128 0x3
 3015 00f2 0E       		.uleb128 0xe
 3016 00f3 3A       		.uleb128 0x3a
 3017 00f4 0B       		.uleb128 0xb
 3018 00f5 3B       		.uleb128 0x3b
 3019 00f6 05       		.uleb128 0x5
 3020 00f7 27       		.uleb128 0x27
 3021 00f8 19       		.uleb128 0x19
 3022 00f9 49       		.uleb128 0x49
 3023 00fa 13       		.uleb128 0x13
 3024 00fb 11       		.uleb128 0x11
 3025 00fc 01       		.uleb128 0x1
 3026 00fd 12       		.uleb128 0x12
 3027 00fe 06       		.uleb128 0x6
 3028 00ff 40       		.uleb128 0x40
 3029 0100 18       		.uleb128 0x18
 3030 0101 9642     		.uleb128 0x2116
 3031 0103 19       		.uleb128 0x19
 3032 0104 01       		.uleb128 0x1
 3033 0105 13       		.uleb128 0x13
 3034 0106 00       		.byte	0
 3035 0107 00       		.byte	0
 3036 0108 0F       		.uleb128 0xf
 3037 0109 2E       		.uleb128 0x2e
 3038 010a 01       		.byte	0x1
 3039 010b 3F       		.uleb128 0x3f
 3040 010c 19       		.uleb128 0x19
 3041 010d 03       		.uleb128 0x3
 3042 010e 0E       		.uleb128 0xe
 3043 010f 3A       		.uleb128 0x3a
 3044 0110 0B       		.uleb128 0xb
 3045 0111 3B       		.uleb128 0x3b
 3046 0112 05       		.uleb128 0x5
 3047 0113 27       		.uleb128 0x27
 3048 0114 19       		.uleb128 0x19
 3049 0115 11       		.uleb128 0x11
 3050 0116 01       		.uleb128 0x1
 3051 0117 12       		.uleb128 0x12
 3052 0118 06       		.uleb128 0x6
 3053 0119 40       		.uleb128 0x40
 3054 011a 18       		.uleb128 0x18
 3055 011b 9642     		.uleb128 0x2116
 3056 011d 19       		.uleb128 0x19
 3057 011e 01       		.uleb128 0x1
 3058 011f 13       		.uleb128 0x13
 3059 0120 00       		.byte	0
 3060 0121 00       		.byte	0
 3061 0122 10       		.uleb128 0x10
 3062 0123 0F       		.uleb128 0xf
 3063 0124 00       		.byte	0
 3064 0125 0B       		.uleb128 0xb
 3065 0126 0B       		.uleb128 0xb
 3066 0127 49       		.uleb128 0x49
 3067 0128 13       		.uleb128 0x13
 3068 0129 00       		.byte	0
 3069 012a 00       		.byte	0
 3070 012b 11       		.uleb128 0x11
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 83


 3071 012c 26       		.uleb128 0x26
 3072 012d 00       		.byte	0
 3073 012e 49       		.uleb128 0x49
 3074 012f 13       		.uleb128 0x13
 3075 0130 00       		.byte	0
 3076 0131 00       		.byte	0
 3077 0132 12       		.uleb128 0x12
 3078 0133 0B       		.uleb128 0xb
 3079 0134 01       		.byte	0x1
 3080 0135 11       		.uleb128 0x11
 3081 0136 01       		.uleb128 0x1
 3082 0137 12       		.uleb128 0x12
 3083 0138 06       		.uleb128 0x6
 3084 0139 00       		.byte	0
 3085 013a 00       		.byte	0
 3086 013b 13       		.uleb128 0x13
 3087 013c 34       		.uleb128 0x34
 3088 013d 00       		.byte	0
 3089 013e 03       		.uleb128 0x3
 3090 013f 0E       		.uleb128 0xe
 3091 0140 3A       		.uleb128 0x3a
 3092 0141 0B       		.uleb128 0xb
 3093 0142 3B       		.uleb128 0x3b
 3094 0143 0B       		.uleb128 0xb
 3095 0144 49       		.uleb128 0x49
 3096 0145 13       		.uleb128 0x13
 3097 0146 3F       		.uleb128 0x3f
 3098 0147 19       		.uleb128 0x19
 3099 0148 02       		.uleb128 0x2
 3100 0149 18       		.uleb128 0x18
 3101 014a 00       		.byte	0
 3102 014b 00       		.byte	0
 3103 014c 14       		.uleb128 0x14
 3104 014d 01       		.uleb128 0x1
 3105 014e 01       		.byte	0x1
 3106 014f 49       		.uleb128 0x49
 3107 0150 13       		.uleb128 0x13
 3108 0151 01       		.uleb128 0x1
 3109 0152 13       		.uleb128 0x13
 3110 0153 00       		.byte	0
 3111 0154 00       		.byte	0
 3112 0155 15       		.uleb128 0x15
 3113 0156 21       		.uleb128 0x21
 3114 0157 00       		.byte	0
 3115 0158 49       		.uleb128 0x49
 3116 0159 13       		.uleb128 0x13
 3117 015a 2F       		.uleb128 0x2f
 3118 015b 05       		.uleb128 0x5
 3119 015c 00       		.byte	0
 3120 015d 00       		.byte	0
 3121 015e 00       		.byte	0
 3122              		.section	.debug_aranges,"",%progbits
 3123 0000 EC000000 		.4byte	0xec
 3124 0004 0200     		.2byte	0x2
 3125 0006 00000000 		.4byte	.Ldebug_info0
 3126 000a 04       		.byte	0x4
 3127 000b 00       		.byte	0
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 84


 3128 000c 0000     		.2byte	0
 3129 000e 0000     		.2byte	0
 3130 0010 00000000 		.4byte	.LFB0
 3131 0014 24000000 		.4byte	.LFE0-.LFB0
 3132 0018 00000000 		.4byte	.LFB1
 3133 001c 6C000000 		.4byte	.LFE1-.LFB1
 3134 0020 00000000 		.4byte	.LFB2
 3135 0024 78000000 		.4byte	.LFE2-.LFB2
 3136 0028 00000000 		.4byte	.LFB3
 3137 002c 70000000 		.4byte	.LFE3-.LFB3
 3138 0030 00000000 		.4byte	.LFB4
 3139 0034 0E000000 		.4byte	.LFE4-.LFB4
 3140 0038 00000000 		.4byte	.LFB5
 3141 003c 14000000 		.4byte	.LFE5-.LFB5
 3142 0040 00000000 		.4byte	.LFB6
 3143 0044 20000000 		.4byte	.LFE6-.LFB6
 3144 0048 00000000 		.4byte	.LFB7
 3145 004c 90000000 		.4byte	.LFE7-.LFB7
 3146 0050 00000000 		.4byte	.LFB8
 3147 0054 40000000 		.4byte	.LFE8-.LFB8
 3148 0058 00000000 		.4byte	.LFB9
 3149 005c B8000000 		.4byte	.LFE9-.LFB9
 3150 0060 00000000 		.4byte	.LFB10
 3151 0064 44000000 		.4byte	.LFE10-.LFB10
 3152 0068 00000000 		.4byte	.LFB11
 3153 006c 94000000 		.4byte	.LFE11-.LFB11
 3154 0070 00000000 		.4byte	.LFB12
 3155 0074 80000000 		.4byte	.LFE12-.LFB12
 3156 0078 00000000 		.4byte	.LFB13
 3157 007c 14000000 		.4byte	.LFE13-.LFB13
 3158 0080 00000000 		.4byte	.LFB14
 3159 0084 20000000 		.4byte	.LFE14-.LFB14
 3160 0088 00000000 		.4byte	.LFB15
 3161 008c 20000000 		.4byte	.LFE15-.LFB15
 3162 0090 00000000 		.4byte	.LFB16
 3163 0094 20000000 		.4byte	.LFE16-.LFB16
 3164 0098 00000000 		.4byte	.LFB17
 3165 009c 94000000 		.4byte	.LFE17-.LFB17
 3166 00a0 00000000 		.4byte	.LFB18
 3167 00a4 18000000 		.4byte	.LFE18-.LFB18
 3168 00a8 00000000 		.4byte	.LFB19
 3169 00ac BC000000 		.4byte	.LFE19-.LFB19
 3170 00b0 00000000 		.4byte	.LFB20
 3171 00b4 44000000 		.4byte	.LFE20-.LFB20
 3172 00b8 00000000 		.4byte	.LFB21
 3173 00bc 44000000 		.4byte	.LFE21-.LFB21
 3174 00c0 00000000 		.4byte	.LFB22
 3175 00c4 34000000 		.4byte	.LFE22-.LFB22
 3176 00c8 00000000 		.4byte	.LFB23
 3177 00cc 74000000 		.4byte	.LFE23-.LFB23
 3178 00d0 00000000 		.4byte	.LFB24
 3179 00d4 6C000000 		.4byte	.LFE24-.LFB24
 3180 00d8 00000000 		.4byte	.LFB25
 3181 00dc 9C000000 		.4byte	.LFE25-.LFB25
 3182 00e0 00000000 		.4byte	.LFB26
 3183 00e4 14000000 		.4byte	.LFE26-.LFB26
 3184 00e8 00000000 		.4byte	0
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 85


 3185 00ec 00000000 		.4byte	0
 3186              		.section	.debug_ranges,"",%progbits
 3187              	.Ldebug_ranges0:
 3188 0000 00000000 		.4byte	.LFB0
 3189 0004 24000000 		.4byte	.LFE0
 3190 0008 00000000 		.4byte	.LFB1
 3191 000c 6C000000 		.4byte	.LFE1
 3192 0010 00000000 		.4byte	.LFB2
 3193 0014 78000000 		.4byte	.LFE2
 3194 0018 00000000 		.4byte	.LFB3
 3195 001c 70000000 		.4byte	.LFE3
 3196 0020 00000000 		.4byte	.LFB4
 3197 0024 0E000000 		.4byte	.LFE4
 3198 0028 00000000 		.4byte	.LFB5
 3199 002c 14000000 		.4byte	.LFE5
 3200 0030 00000000 		.4byte	.LFB6
 3201 0034 20000000 		.4byte	.LFE6
 3202 0038 00000000 		.4byte	.LFB7
 3203 003c 90000000 		.4byte	.LFE7
 3204 0040 00000000 		.4byte	.LFB8
 3205 0044 40000000 		.4byte	.LFE8
 3206 0048 00000000 		.4byte	.LFB9
 3207 004c B8000000 		.4byte	.LFE9
 3208 0050 00000000 		.4byte	.LFB10
 3209 0054 44000000 		.4byte	.LFE10
 3210 0058 00000000 		.4byte	.LFB11
 3211 005c 94000000 		.4byte	.LFE11
 3212 0060 00000000 		.4byte	.LFB12
 3213 0064 80000000 		.4byte	.LFE12
 3214 0068 00000000 		.4byte	.LFB13
 3215 006c 14000000 		.4byte	.LFE13
 3216 0070 00000000 		.4byte	.LFB14
 3217 0074 20000000 		.4byte	.LFE14
 3218 0078 00000000 		.4byte	.LFB15
 3219 007c 20000000 		.4byte	.LFE15
 3220 0080 00000000 		.4byte	.LFB16
 3221 0084 20000000 		.4byte	.LFE16
 3222 0088 00000000 		.4byte	.LFB17
 3223 008c 94000000 		.4byte	.LFE17
 3224 0090 00000000 		.4byte	.LFB18
 3225 0094 18000000 		.4byte	.LFE18
 3226 0098 00000000 		.4byte	.LFB19
 3227 009c BC000000 		.4byte	.LFE19
 3228 00a0 00000000 		.4byte	.LFB20
 3229 00a4 44000000 		.4byte	.LFE20
 3230 00a8 00000000 		.4byte	.LFB21
 3231 00ac 44000000 		.4byte	.LFE21
 3232 00b0 00000000 		.4byte	.LFB22
 3233 00b4 34000000 		.4byte	.LFE22
 3234 00b8 00000000 		.4byte	.LFB23
 3235 00bc 74000000 		.4byte	.LFE23
 3236 00c0 00000000 		.4byte	.LFB24
 3237 00c4 6C000000 		.4byte	.LFE24
 3238 00c8 00000000 		.4byte	.LFB25
 3239 00cc 9C000000 		.4byte	.LFE25
 3240 00d0 00000000 		.4byte	.LFB26
 3241 00d4 14000000 		.4byte	.LFE26
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 86


 3242 00d8 00000000 		.4byte	0
 3243 00dc 00000000 		.4byte	0
 3244              		.section	.debug_line,"",%progbits
 3245              	.Ldebug_line0:
 3246 0000 48030000 		.section	.debug_str,"MS",%progbits,1
 3246      02004700 
 3246      00000201 
 3246      FB0E0D00 
 3246      01010101 
 3247              	.LASF10:
 3248 0000 75696E74 		.ascii	"uint16\000"
 3248      313600
 3249              	.LASF49:
 3250 0007 74784461 		.ascii	"txDataByte\000"
 3250      74614279 
 3250      746500
 3251              	.LASF44:
 3252 0012 55415254 		.ascii	"UART_Linux_SetRxAddress1\000"
 3252      5F4C696E 
 3252      75785F53 
 3252      65745278 
 3252      41646472 
 3253              	.LASF71:
 3254 002b 55415254 		.ascii	"UART_Linux_txBufferWrite\000"
 3254      5F4C696E 
 3254      75785F74 
 3254      78427566 
 3254      66657257 
 3255              	.LASF56:
 3256 0044 73747269 		.ascii	"string\000"
 3256      6E6700
 3257              	.LASF78:
 3258 004b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3258      43313120 
 3258      352E342E 
 3258      31203230 
 3258      31363036 
 3259 007e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3259      20726576 
 3259      6973696F 
 3259      6E203233 
 3259      37373135 
 3260 00b1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3260      66756E63 
 3260      74696F6E 
 3260      2D736563 
 3260      74696F6E 
 3261              	.LASF7:
 3262 00d9 6C6F6E67 		.ascii	"long long unsigned int\000"
 3262      206C6F6E 
 3262      6720756E 
 3262      7369676E 
 3262      65642069 
 3263              	.LASF20:
 3264 00f0 55415254 		.ascii	"UART_Linux_Start\000"
 3264      5F4C696E 
 3264      75785F53 
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 87


 3264      74617274 
 3264      00
 3265              	.LASF22:
 3266 0101 55415254 		.ascii	"UART_Linux_Enable\000"
 3266      5F4C696E 
 3266      75785F45 
 3266      6E61626C 
 3266      6500
 3267              	.LASF6:
 3268 0113 6C6F6E67 		.ascii	"long long int\000"
 3268      206C6F6E 
 3268      6720696E 
 3268      7400
 3269              	.LASF0:
 3270 0121 7369676E 		.ascii	"signed char\000"
 3270      65642063 
 3270      68617200 
 3271              	.LASF52:
 3272 012d 55415254 		.ascii	"UART_Linux_PutChar\000"
 3272      5F4C696E 
 3272      75785F50 
 3272      75744368 
 3272      617200
 3273              	.LASF66:
 3274 0140 74785065 		.ascii	"txPeriod\000"
 3274      72696F64 
 3274      00
 3275              	.LASF4:
 3276 0149 6C6F6E67 		.ascii	"long int\000"
 3276      20696E74 
 3276      00
 3277              	.LASF63:
 3278 0152 55415254 		.ascii	"UART_Linux_SendBreak\000"
 3278      5F4C696E 
 3278      75785F53 
 3278      656E6442 
 3278      7265616B 
 3279              	.LASF9:
 3280 0167 75696E74 		.ascii	"uint8\000"
 3280      3800
 3281              	.LASF13:
 3282 016d 646F7562 		.ascii	"double\000"
 3282      6C6500
 3283              	.LASF43:
 3284 0174 61646472 		.ascii	"addressMode\000"
 3284      6573734D 
 3284      6F646500 
 3285              	.LASF11:
 3286 0180 75696E74 		.ascii	"uint32\000"
 3286      333200
 3287              	.LASF60:
 3288 0187 55415254 		.ascii	"UART_Linux_PutCRLF\000"
 3288      5F4C696E 
 3288      75785F50 
 3288      75744352 
 3288      4C4600
 3289              	.LASF79:
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 88


 3290 019a 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_Linux.c\000"
 3290      72617465 
 3290      645F536F 
 3290      75726365 
 3290      5C50536F 
 3291              	.LASF54:
 3292 01be 6C6F6354 		.ascii	"locTxBufferRead\000"
 3292      78427566 
 3292      66657252 
 3292      65616400 
 3293              	.LASF25:
 3294 01ce 55415254 		.ascii	"UART_Linux_WriteControlRegister\000"
 3294      5F4C696E 
 3294      75785F57 
 3294      72697465 
 3294      436F6E74 
 3295              	.LASF33:
 3296 01ee 55415254 		.ascii	"UART_Linux_ReadRxStatus\000"
 3296      5F4C696E 
 3296      75785F52 
 3296      65616452 
 3296      78537461 
 3297              	.LASF21:
 3298 0206 55415254 		.ascii	"UART_Linux_Init\000"
 3298      5F4C696E 
 3298      75785F49 
 3298      6E697400 
 3299              	.LASF64:
 3300 0216 7265744D 		.ascii	"retMode\000"
 3300      6F646500 
 3301              	.LASF62:
 3302 021e 55415254 		.ascii	"UART_Linux_ClearTxBuffer\000"
 3302      5F4C696E 
 3302      75785F43 
 3302      6C656172 
 3302      54784275 
 3303              	.LASF8:
 3304 0237 756E7369 		.ascii	"unsigned int\000"
 3304      676E6564 
 3304      20696E74 
 3304      00
 3305              	.LASF23:
 3306 0244 55415254 		.ascii	"UART_Linux_Stop\000"
 3306      5F4C696E 
 3306      75785F53 
 3306      746F7000 
 3307              	.LASF69:
 3308 0254 55415254 		.ascii	"UART_Linux_txBuffer\000"
 3308      5F4C696E 
 3308      75785F74 
 3308      78427566 
 3308      66657200 
 3309              	.LASF38:
 3310 0268 6C6F6345 		.ascii	"locErrorStatus\000"
 3310      72726F72 
 3310      53746174 
 3310      757300
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 89


 3311              	.LASF5:
 3312 0277 6C6F6E67 		.ascii	"long unsigned int\000"
 3312      20756E73 
 3312      69676E65 
 3312      6420696E 
 3312      7400
 3313              	.LASF53:
 3314 0289 6C6F6354 		.ascii	"locTxBufferWrite\000"
 3314      78427566 
 3314      66657257 
 3314      72697465 
 3314      00
 3315              	.LASF40:
 3316 029a 73697A65 		.ascii	"size\000"
 3316      00
 3317              	.LASF3:
 3318 029f 73686F72 		.ascii	"short unsigned int\000"
 3318      7420756E 
 3318      7369676E 
 3318      65642069 
 3318      6E7400
 3319              	.LASF76:
 3320 02b2 55415254 		.ascii	"UART_Linux_rxBufferLoopDetect\000"
 3320      5F4C696E 
 3320      75785F72 
 3320      78427566 
 3320      6665724C 
 3321              	.LASF57:
 3322 02d0 62756649 		.ascii	"bufIndex\000"
 3322      6E646578 
 3322      00
 3323              	.LASF58:
 3324 02d9 55415254 		.ascii	"UART_Linux_PutArray\000"
 3324      5F4C696E 
 3324      75785F50 
 3324      75744172 
 3324      72617900 
 3325              	.LASF28:
 3326 02ed 696E7453 		.ascii	"intSrc\000"
 3326      726300
 3327              	.LASF77:
 3328 02f4 55415254 		.ascii	"UART_Linux_rxBufferOverflow\000"
 3328      5F4C696E 
 3328      75785F72 
 3328      78427566 
 3328      6665724F 
 3329              	.LASF67:
 3330 0310 55415254 		.ascii	"UART_Linux_SetTxAddressMode\000"
 3330      5F4C696E 
 3330      75785F53 
 3330      65745478 
 3330      41646472 
 3331              	.LASF55:
 3332 032c 55415254 		.ascii	"UART_Linux_PutString\000"
 3332      5F4C696E 
 3332      75785F50 
 3332      75745374 
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 90


 3332      72696E67 
 3333              	.LASF17:
 3334 0341 72656733 		.ascii	"reg32\000"
 3334      3200
 3335              	.LASF72:
 3336 0347 55415254 		.ascii	"UART_Linux_errorStatus\000"
 3336      5F4C696E 
 3336      75785F65 
 3336      72726F72 
 3336      53746174 
 3337              	.LASF65:
 3338 035e 746D7053 		.ascii	"tmpStat\000"
 3338      74617400 
 3339              	.LASF50:
 3340 0366 55415254 		.ascii	"UART_Linux_ReadControlRegister\000"
 3340      5F4C696E 
 3340      75785F52 
 3340      65616443 
 3340      6F6E7472 
 3341              	.LASF19:
 3342 0385 73697A65 		.ascii	"sizetype\000"
 3342      74797065 
 3342      00
 3343              	.LASF18:
 3344 038e 6C6F6E67 		.ascii	"long double\000"
 3344      20646F75 
 3344      626C6500 
 3345              	.LASF46:
 3346 039a 55415254 		.ascii	"UART_Linux_SetRxAddress2\000"
 3346      5F4C696E 
 3346      75785F53 
 3346      65745278 
 3346      41646472 
 3347              	.LASF45:
 3348 03b3 61646472 		.ascii	"address\000"
 3348      65737300 
 3349              	.LASF61:
 3350 03bb 55415254 		.ascii	"UART_Linux_GetTxBufferSize\000"
 3350      5F4C696E 
 3350      75785F47 
 3350      65745478 
 3350      42756666 
 3351              	.LASF48:
 3352 03d6 55415254 		.ascii	"UART_Linux_WriteTxData\000"
 3352      5F4C696E 
 3352      75785F57 
 3352      72697465 
 3352      54784461 
 3353              	.LASF31:
 3354 03ed 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3354      78427566 
 3354      66657257 
 3354      72697465 
 3354      00
 3355              	.LASF36:
 3356 03fe 72785374 		.ascii	"rxStatus\000"
 3356      61747573 
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 91


 3356      00
 3357              	.LASF12:
 3358 0407 666C6F61 		.ascii	"float\000"
 3358      7400
 3359              	.LASF26:
 3360 040d 55415254 		.ascii	"UART_Linux_SetRxInterruptMode\000"
 3360      5F4C696E 
 3360      75785F53 
 3360      65745278 
 3360      496E7465 
 3361              	.LASF16:
 3362 042b 72656738 		.ascii	"reg8\000"
 3362      00
 3363              	.LASF1:
 3364 0430 756E7369 		.ascii	"unsigned char\000"
 3364      676E6564 
 3364      20636861 
 3364      7200
 3365              	.LASF2:
 3366 043e 73686F72 		.ascii	"short int\000"
 3366      7420696E 
 3366      7400
 3367              	.LASF70:
 3368 0448 55415254 		.ascii	"UART_Linux_txBufferRead\000"
 3368      5F4C696E 
 3368      75785F74 
 3368      78427566 
 3368      66657252 
 3369              	.LASF59:
 3370 0460 62797465 		.ascii	"byteCount\000"
 3370      436F756E 
 3370      7400
 3371              	.LASF73:
 3372 046a 55415254 		.ascii	"UART_Linux_rxBuffer\000"
 3372      5F4C696E 
 3372      75785F72 
 3372      78427566 
 3372      66657200 
 3373              	.LASF29:
 3374 047e 72784461 		.ascii	"rxData\000"
 3374      746100
 3375              	.LASF27:
 3376 0485 636F6E74 		.ascii	"control\000"
 3376      726F6C00 
 3377              	.LASF80:
 3378 048d 453A5C49 		.ascii	"E:\\IroTeam\\Developing Projects\\Cypress\\100 PIN\\"
 3378      726F5465 
 3378      616D5C44 
 3378      6576656C 
 3378      6F70696E 
 3379 04bc 63792D6D 		.ascii	"cy-micro\\cy-notask\\Start\\BoardSupport\\Cypress\\"
 3379      6963726F 
 3379      5C63792D 
 3379      6E6F7461 
 3379      736B5C53 
 3380 04ea 43593843 		.ascii	"CY8C5868_CY8CKIT_050_PSoC5_DK\\Start_CY8C5868_Acces"
 3380      35383638 
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 92


 3380      5F435938 
 3380      434B4954 
 3380      5F303530 
 3381 051c 7356322E 		.ascii	"sV2.0_OldBrd.cydsn\000"
 3381      305F4F6C 
 3381      64427264 
 3381      2E637964 
 3381      736E00
 3382              	.LASF35:
 3383 052f 55415254 		.ascii	"UART_Linux_GetChar\000"
 3383      5F4C696E 
 3383      75785F47 
 3383      65744368 
 3383      617200
 3384              	.LASF15:
 3385 0542 63686172 		.ascii	"char\000"
 3385      00
 3386              	.LASF39:
 3387 0547 55415254 		.ascii	"UART_Linux_GetRxBufferSize\000"
 3387      5F4C696E 
 3387      75785F47 
 3387      65745278 
 3387      42756666 
 3388              	.LASF14:
 3389 0562 63686172 		.ascii	"char8\000"
 3389      3800
 3390              	.LASF68:
 3391 0568 55415254 		.ascii	"UART_Linux_initVar\000"
 3391      5F4C696E 
 3391      75785F69 
 3391      6E697456 
 3391      617200
 3392              	.LASF32:
 3393 057b 55415254 		.ascii	"UART_Linux_ReadRxData\000"
 3393      5F4C696E 
 3393      75785F52 
 3393      65616452 
 3393      78446174 
 3394              	.LASF30:
 3395 0591 6C6F6352 		.ascii	"locRxBufferRead\000"
 3395      78427566 
 3395      66657252 
 3395      65616400 
 3396              	.LASF24:
 3397 05a1 656E6162 		.ascii	"enableInterrupts\000"
 3397      6C65496E 
 3397      74657272 
 3397      75707473 
 3397      00
 3398              	.LASF34:
 3399 05b2 73746174 		.ascii	"status\000"
 3399      757300
 3400              	.LASF47:
 3401 05b9 55415254 		.ascii	"UART_Linux_SetTxInterruptMode\000"
 3401      5F4C696E 
 3401      75785F53 
 3401      65745478 
ARM GAS  C:\Users\IroTeam\AppData\Local\Temp\ccDwQaYN.s 			page 93


 3401      496E7465 
 3402              	.LASF41:
 3403 05d7 55415254 		.ascii	"UART_Linux_ClearRxBuffer\000"
 3403      5F4C696E 
 3403      75785F43 
 3403      6C656172 
 3403      52784275 
 3404              	.LASF42:
 3405 05f0 55415254 		.ascii	"UART_Linux_SetRxAddressMode\000"
 3405      5F4C696E 
 3405      75785F53 
 3405      65745278 
 3405      41646472 
 3406              	.LASF74:
 3407 060c 55415254 		.ascii	"UART_Linux_rxBufferRead\000"
 3407      5F4C696E 
 3407      75785F72 
 3407      78427566 
 3407      66657252 
 3408              	.LASF75:
 3409 0624 55415254 		.ascii	"UART_Linux_rxBufferWrite\000"
 3409      5F4C696E 
 3409      75785F72 
 3409      78427566 
 3409      66657257 
 3410              	.LASF37:
 3411 063d 55415254 		.ascii	"UART_Linux_GetByte\000"
 3411      5F4C696E 
 3411      75785F47 
 3411      65744279 
 3411      746500
 3412              	.LASF51:
 3413 0650 55415254 		.ascii	"UART_Linux_ReadTxStatus\000"
 3413      5F4C696E 
 3413      75785F52 
 3413      65616454 
 3413      78537461 
 3414              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
