ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SEGGER_RTT_printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._StoreChar,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	_StoreChar, %function
  24              	_StoreChar:
  25              	.LFB0:
  26              		.file 1 "..\\SEGGER\\SEGGER_RTT_printf.c"
   1:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
   2:..\SEGGER/SEGGER_RTT_printf.c **** *                     SEGGER Microcontroller GmbH                    *
   3:..\SEGGER/SEGGER_RTT_printf.c **** *                        The Embedded Experts                        *
   4:..\SEGGER/SEGGER_RTT_printf.c **** **********************************************************************
   5:..\SEGGER/SEGGER_RTT_printf.c **** *                                                                    *
   6:..\SEGGER/SEGGER_RTT_printf.c **** *       (c) 1995 - 2022 SEGGER Microcontroller GmbH                  *
   7:..\SEGGER/SEGGER_RTT_printf.c **** *                                                                    *
   8:..\SEGGER/SEGGER_RTT_printf.c **** *       Internet: segger.com  Support: support_embos@segger.com      *
   9:..\SEGGER/SEGGER_RTT_printf.c **** *                                                                    *
  10:..\SEGGER/SEGGER_RTT_printf.c **** **********************************************************************
  11:..\SEGGER/SEGGER_RTT_printf.c **** *                                                                    *
  12:..\SEGGER/SEGGER_RTT_printf.c **** *       embOS * Real time operating system                           *
  13:..\SEGGER/SEGGER_RTT_printf.c **** *                                                                    *
  14:..\SEGGER/SEGGER_RTT_printf.c **** *       Please note:                                                 *
  15:..\SEGGER/SEGGER_RTT_printf.c **** *                                                                    *
  16:..\SEGGER/SEGGER_RTT_printf.c **** *       Knowledge of this file may under no circumstances            *
  17:..\SEGGER/SEGGER_RTT_printf.c **** *       be used to write a similar product or a real-time            *
  18:..\SEGGER/SEGGER_RTT_printf.c **** *       operating system for in-house use.                           *
  19:..\SEGGER/SEGGER_RTT_printf.c **** *                                                                    *
  20:..\SEGGER/SEGGER_RTT_printf.c **** *       Thank you for your fairness !                                *
  21:..\SEGGER/SEGGER_RTT_printf.c **** *                                                                    *
  22:..\SEGGER/SEGGER_RTT_printf.c **** **********************************************************************
  23:..\SEGGER/SEGGER_RTT_printf.c **** *                                                                    *
  24:..\SEGGER/SEGGER_RTT_printf.c **** *       OS version: V5.16.1.0                                        *
  25:..\SEGGER/SEGGER_RTT_printf.c **** *                                                                    *
  26:..\SEGGER/SEGGER_RTT_printf.c **** **********************************************************************
  27:..\SEGGER/SEGGER_RTT_printf.c **** 
  28:..\SEGGER/SEGGER_RTT_printf.c **** ---------------------------END-OF-HEADER------------------------------
  29:..\SEGGER/SEGGER_RTT_printf.c **** File    : SEGGER_RTT_printf.c
  30:..\SEGGER/SEGGER_RTT_printf.c **** Purpose : Replacement for printf to write formatted data via RTT
  31:..\SEGGER/SEGGER_RTT_printf.c **** Revision: $Rev: 17697 $
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 2


  32:..\SEGGER/SEGGER_RTT_printf.c **** ----------------------------------------------------------------------
  33:..\SEGGER/SEGGER_RTT_printf.c **** */
  34:..\SEGGER/SEGGER_RTT_printf.c **** #include "SEGGER_RTT.h"
  35:..\SEGGER/SEGGER_RTT_printf.c **** #include "SEGGER_RTT_Conf.h"
  36:..\SEGGER/SEGGER_RTT_printf.c **** 
  37:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
  38:..\SEGGER/SEGGER_RTT_printf.c **** *
  39:..\SEGGER/SEGGER_RTT_printf.c **** *       Defines, configurable
  40:..\SEGGER/SEGGER_RTT_printf.c **** *
  41:..\SEGGER/SEGGER_RTT_printf.c **** **********************************************************************
  42:..\SEGGER/SEGGER_RTT_printf.c **** */
  43:..\SEGGER/SEGGER_RTT_printf.c **** 
  44:..\SEGGER/SEGGER_RTT_printf.c **** #ifndef SEGGER_RTT_PRINTF_BUFFER_SIZE
  45:..\SEGGER/SEGGER_RTT_printf.c ****   #define SEGGER_RTT_PRINTF_BUFFER_SIZE (64)
  46:..\SEGGER/SEGGER_RTT_printf.c **** #endif
  47:..\SEGGER/SEGGER_RTT_printf.c **** 
  48:..\SEGGER/SEGGER_RTT_printf.c **** #include <stdlib.h>
  49:..\SEGGER/SEGGER_RTT_printf.c **** #include <stdarg.h>
  50:..\SEGGER/SEGGER_RTT_printf.c **** 
  51:..\SEGGER/SEGGER_RTT_printf.c **** 
  52:..\SEGGER/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_LEFT_JUSTIFY   (1u << 0)
  53:..\SEGGER/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PAD_ZERO       (1u << 1)
  54:..\SEGGER/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PRINT_SIGN     (1u << 2)
  55:..\SEGGER/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_ALTERNATE      (1u << 3)
  56:..\SEGGER/SEGGER_RTT_printf.c **** 
  57:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
  58:..\SEGGER/SEGGER_RTT_printf.c **** *
  59:..\SEGGER/SEGGER_RTT_printf.c **** *       Types
  60:..\SEGGER/SEGGER_RTT_printf.c **** *
  61:..\SEGGER/SEGGER_RTT_printf.c **** **********************************************************************
  62:..\SEGGER/SEGGER_RTT_printf.c **** */
  63:..\SEGGER/SEGGER_RTT_printf.c **** 
  64:..\SEGGER/SEGGER_RTT_printf.c **** typedef struct {
  65:..\SEGGER/SEGGER_RTT_printf.c ****   char*     pBuffer;
  66:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned  BufferSize;
  67:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned  Cnt;
  68:..\SEGGER/SEGGER_RTT_printf.c **** 
  69:..\SEGGER/SEGGER_RTT_printf.c ****   int   ReturnValue;
  70:..\SEGGER/SEGGER_RTT_printf.c **** 
  71:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned RTTBufferIndex;
  72:..\SEGGER/SEGGER_RTT_printf.c **** } SEGGER_RTT_PRINTF_DESC;
  73:..\SEGGER/SEGGER_RTT_printf.c **** 
  74:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
  75:..\SEGGER/SEGGER_RTT_printf.c **** *
  76:..\SEGGER/SEGGER_RTT_printf.c **** *       Function prototypes
  77:..\SEGGER/SEGGER_RTT_printf.c **** *
  78:..\SEGGER/SEGGER_RTT_printf.c **** **********************************************************************
  79:..\SEGGER/SEGGER_RTT_printf.c **** */
  80:..\SEGGER/SEGGER_RTT_printf.c **** 
  81:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
  82:..\SEGGER/SEGGER_RTT_printf.c **** *
  83:..\SEGGER/SEGGER_RTT_printf.c **** *       Static code
  84:..\SEGGER/SEGGER_RTT_printf.c **** *
  85:..\SEGGER/SEGGER_RTT_printf.c **** **********************************************************************
  86:..\SEGGER/SEGGER_RTT_printf.c **** */
  87:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
  88:..\SEGGER/SEGGER_RTT_printf.c **** *
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 3


  89:..\SEGGER/SEGGER_RTT_printf.c **** *       _StoreChar
  90:..\SEGGER/SEGGER_RTT_printf.c **** */
  91:..\SEGGER/SEGGER_RTT_printf.c **** static void _StoreChar(SEGGER_RTT_PRINTF_DESC * p, char c) {
  27              		.loc 1 91 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 84B0     		sub	sp, sp, #16
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  40 0008 0B46     		mov	r3, r1
  41 000a FB70     		strb	r3, [r7, #3]
  92:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned Cnt;
  93:..\SEGGER/SEGGER_RTT_printf.c **** 
  94:..\SEGGER/SEGGER_RTT_printf.c ****   Cnt = p->Cnt;
  42              		.loc 1 94 0
  43 000c 7B68     		ldr	r3, [r7, #4]
  44 000e 9B68     		ldr	r3, [r3, #8]
  45 0010 FB60     		str	r3, [r7, #12]
  95:..\SEGGER/SEGGER_RTT_printf.c ****   if ((Cnt + 1u) <= p->BufferSize) {
  46              		.loc 1 95 0
  47 0012 FB68     		ldr	r3, [r7, #12]
  48 0014 5A1C     		adds	r2, r3, #1
  49 0016 7B68     		ldr	r3, [r7, #4]
  50 0018 5B68     		ldr	r3, [r3, #4]
  51 001a 9A42     		cmp	r2, r3
  52 001c 0ED8     		bhi	.L2
  96:..\SEGGER/SEGGER_RTT_printf.c ****     *(p->pBuffer + Cnt) = c;
  53              		.loc 1 96 0
  54 001e 7B68     		ldr	r3, [r7, #4]
  55 0020 1A68     		ldr	r2, [r3]
  56 0022 FB68     		ldr	r3, [r7, #12]
  57 0024 1344     		add	r3, r3, r2
  58 0026 FA78     		ldrb	r2, [r7, #3]
  59 0028 1A70     		strb	r2, [r3]
  97:..\SEGGER/SEGGER_RTT_printf.c ****     p->Cnt = Cnt + 1u;
  60              		.loc 1 97 0
  61 002a FB68     		ldr	r3, [r7, #12]
  62 002c 5A1C     		adds	r2, r3, #1
  63 002e 7B68     		ldr	r3, [r7, #4]
  64 0030 9A60     		str	r2, [r3, #8]
  98:..\SEGGER/SEGGER_RTT_printf.c ****     p->ReturnValue++;
  65              		.loc 1 98 0
  66 0032 7B68     		ldr	r3, [r7, #4]
  67 0034 DB68     		ldr	r3, [r3, #12]
  68 0036 5A1C     		adds	r2, r3, #1
  69 0038 7B68     		ldr	r3, [r7, #4]
  70 003a DA60     		str	r2, [r3, #12]
  71              	.L2:
  99:..\SEGGER/SEGGER_RTT_printf.c ****   }
 100:..\SEGGER/SEGGER_RTT_printf.c ****   //
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 4


 101:..\SEGGER/SEGGER_RTT_printf.c ****   // Write part of string, when the buffer is full
 102:..\SEGGER/SEGGER_RTT_printf.c ****   //
 103:..\SEGGER/SEGGER_RTT_printf.c ****   if (p->Cnt == p->BufferSize) {
  72              		.loc 1 103 0
  73 003c 7B68     		ldr	r3, [r7, #4]
  74 003e 9A68     		ldr	r2, [r3, #8]
  75 0040 7B68     		ldr	r3, [r7, #4]
  76 0042 5B68     		ldr	r3, [r3, #4]
  77 0044 9A42     		cmp	r2, r3
  78 0046 15D1     		bne	.L5
 104:..\SEGGER/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  79              		.loc 1 104 0
  80 0048 7B68     		ldr	r3, [r7, #4]
  81 004a 1869     		ldr	r0, [r3, #16]
  82 004c 7B68     		ldr	r3, [r7, #4]
  83 004e 1968     		ldr	r1, [r3]
  84 0050 7B68     		ldr	r3, [r7, #4]
  85 0052 9B68     		ldr	r3, [r3, #8]
  86 0054 1A46     		mov	r2, r3
  87 0056 FFF7FEFF 		bl	SEGGER_RTT_Write
  88 005a 0246     		mov	r2, r0
  89 005c 7B68     		ldr	r3, [r7, #4]
  90 005e 9B68     		ldr	r3, [r3, #8]
  91 0060 9A42     		cmp	r2, r3
  92 0062 04D0     		beq	.L4
 105:..\SEGGER/SEGGER_RTT_printf.c ****       p->ReturnValue = -1;
  93              		.loc 1 105 0
  94 0064 7B68     		ldr	r3, [r7, #4]
  95 0066 4FF0FF32 		mov	r2, #-1
  96 006a DA60     		str	r2, [r3, #12]
 106:..\SEGGER/SEGGER_RTT_printf.c ****     } else {
 107:..\SEGGER/SEGGER_RTT_printf.c ****       p->Cnt = 0u;
 108:..\SEGGER/SEGGER_RTT_printf.c ****     }
 109:..\SEGGER/SEGGER_RTT_printf.c ****   }
 110:..\SEGGER/SEGGER_RTT_printf.c **** }
  97              		.loc 1 110 0
  98 006c 02E0     		b	.L5
  99              	.L4:
 107:..\SEGGER/SEGGER_RTT_printf.c ****     }
 100              		.loc 1 107 0
 101 006e 7B68     		ldr	r3, [r7, #4]
 102 0070 0022     		movs	r2, #0
 103 0072 9A60     		str	r2, [r3, #8]
 104              	.L5:
 105              		.loc 1 110 0
 106 0074 00BF     		nop
 107 0076 1037     		adds	r7, r7, #16
 108              		.cfi_def_cfa_offset 8
 109 0078 BD46     		mov	sp, r7
 110              		.cfi_def_cfa_register 13
 111              		@ sp needed
 112 007a 80BD     		pop	{r7, pc}
 113              		.cfi_endproc
 114              	.LFE0:
 115              		.size	_StoreChar, .-_StoreChar
 116              		.section	.text._PrintUnsigned,"ax",%progbits
 117              		.align	2
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 5


 118              		.thumb
 119              		.thumb_func
 120              		.type	_PrintUnsigned, %function
 121              	_PrintUnsigned:
 122              	.LFB1:
 111:..\SEGGER/SEGGER_RTT_printf.c **** 
 112:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
 113:..\SEGGER/SEGGER_RTT_printf.c **** *
 114:..\SEGGER/SEGGER_RTT_printf.c **** *       _PrintUnsigned
 115:..\SEGGER/SEGGER_RTT_printf.c **** */
 116:..\SEGGER/SEGGER_RTT_printf.c **** static void _PrintUnsigned(SEGGER_RTT_PRINTF_DESC * pBufferDesc, unsigned v, unsigned Base, unsigne
 123              		.loc 1 116 0
 124              		.cfi_startproc
 125              		@ args = 8, pretend = 0, frame = 40
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127 0000 80B5     		push	{r7, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 8AB0     		sub	sp, sp, #40
 132              		.cfi_def_cfa_offset 48
 133 0004 00AF     		add	r7, sp, #0
 134              		.cfi_def_cfa_register 7
 135 0006 F860     		str	r0, [r7, #12]
 136 0008 B960     		str	r1, [r7, #8]
 137 000a 7A60     		str	r2, [r7, #4]
 138 000c 3B60     		str	r3, [r7]
 117:..\SEGGER/SEGGER_RTT_printf.c ****   static const char _aV2C[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', '
 118:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned Div;
 119:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned Digit;
 120:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned Number;
 121:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned Width;
 122:..\SEGGER/SEGGER_RTT_printf.c ****   char c;
 123:..\SEGGER/SEGGER_RTT_printf.c **** 
 124:..\SEGGER/SEGGER_RTT_printf.c ****   Number = v;
 139              		.loc 1 124 0
 140 000e BB68     		ldr	r3, [r7, #8]
 141 0010 3B62     		str	r3, [r7, #32]
 125:..\SEGGER/SEGGER_RTT_printf.c ****   Digit = 1u;
 142              		.loc 1 125 0
 143 0012 0123     		movs	r3, #1
 144 0014 7B62     		str	r3, [r7, #36]
 126:..\SEGGER/SEGGER_RTT_printf.c ****   //
 127:..\SEGGER/SEGGER_RTT_printf.c ****   // Get actual field width
 128:..\SEGGER/SEGGER_RTT_printf.c ****   //
 129:..\SEGGER/SEGGER_RTT_printf.c ****   Width = 1u;
 145              		.loc 1 129 0
 146 0016 0123     		movs	r3, #1
 147 0018 FB61     		str	r3, [r7, #28]
 130:..\SEGGER/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 148              		.loc 1 130 0
 149 001a 07E0     		b	.L7
 150              	.L8:
 131:..\SEGGER/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 151              		.loc 1 131 0
 152 001c 3A6A     		ldr	r2, [r7, #32]
 153 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 6


 154 0020 B2FBF3F3 		udiv	r3, r2, r3
 155 0024 3B62     		str	r3, [r7, #32]
 132:..\SEGGER/SEGGER_RTT_printf.c ****     Width++;
 156              		.loc 1 132 0
 157 0026 FB69     		ldr	r3, [r7, #28]
 158 0028 0133     		adds	r3, r3, #1
 159 002a FB61     		str	r3, [r7, #28]
 160              	.L7:
 130:..\SEGGER/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 161              		.loc 1 130 0
 162 002c 3A6A     		ldr	r2, [r7, #32]
 163 002e 7B68     		ldr	r3, [r7, #4]
 164 0030 9A42     		cmp	r2, r3
 165 0032 F3D2     		bcs	.L8
 133:..\SEGGER/SEGGER_RTT_printf.c ****   }
 134:..\SEGGER/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 166              		.loc 1 134 0
 167 0034 3A68     		ldr	r2, [r7]
 168 0036 FB69     		ldr	r3, [r7, #28]
 169 0038 9A42     		cmp	r2, r3
 170 003a 01D9     		bls	.L9
 135:..\SEGGER/SEGGER_RTT_printf.c ****     Width = NumDigits;
 171              		.loc 1 135 0
 172 003c 3B68     		ldr	r3, [r7]
 173 003e FB61     		str	r3, [r7, #28]
 174              	.L9:
 136:..\SEGGER/SEGGER_RTT_printf.c ****   }
 137:..\SEGGER/SEGGER_RTT_printf.c ****   //
 138:..\SEGGER/SEGGER_RTT_printf.c ****   // Print leading chars if necessary
 139:..\SEGGER/SEGGER_RTT_printf.c ****   //
 140:..\SEGGER/SEGGER_RTT_printf.c ****   if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u) {
 175              		.loc 1 140 0
 176 0040 7B6B     		ldr	r3, [r7, #52]
 177 0042 03F00103 		and	r3, r3, #1
 178 0046 002B     		cmp	r3, #0
 179 0048 25D1     		bne	.L10
 141:..\SEGGER/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 180              		.loc 1 141 0
 181 004a 3B6B     		ldr	r3, [r7, #48]
 182 004c 002B     		cmp	r3, #0
 183 004e 22D0     		beq	.L10
 142:..\SEGGER/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
 184              		.loc 1 142 0
 185 0050 7B6B     		ldr	r3, [r7, #52]
 186 0052 03F00203 		and	r3, r3, #2
 187 0056 002B     		cmp	r3, #0
 188 0058 05D0     		beq	.L11
 189              		.loc 1 142 0 is_stmt 0 discriminator 1
 190 005a 3B68     		ldr	r3, [r7]
 191 005c 002B     		cmp	r3, #0
 192 005e 02D1     		bne	.L11
 143:..\SEGGER/SEGGER_RTT_printf.c ****         c = '0';
 193              		.loc 1 143 0 is_stmt 1
 194 0060 3023     		movs	r3, #48
 195 0062 FB76     		strb	r3, [r7, #27]
 196 0064 01E0     		b	.L12
 197              	.L11:
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 7


 144:..\SEGGER/SEGGER_RTT_printf.c ****       } else {
 145:..\SEGGER/SEGGER_RTT_printf.c ****         c = ' ';
 198              		.loc 1 145 0
 199 0066 2023     		movs	r3, #32
 200 0068 FB76     		strb	r3, [r7, #27]
 201              	.L12:
 146:..\SEGGER/SEGGER_RTT_printf.c ****       }
 147:..\SEGGER/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 202              		.loc 1 147 0
 203 006a 0BE0     		b	.L13
 204              	.L14:
 148:..\SEGGER/SEGGER_RTT_printf.c ****         FieldWidth--;
 205              		.loc 1 148 0
 206 006c 3B6B     		ldr	r3, [r7, #48]
 207 006e 013B     		subs	r3, r3, #1
 208 0070 3B63     		str	r3, [r7, #48]
 149:..\SEGGER/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, c);
 209              		.loc 1 149 0
 210 0072 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 211 0074 1946     		mov	r1, r3
 212 0076 F868     		ldr	r0, [r7, #12]
 213 0078 FFF7FEFF 		bl	_StoreChar
 150:..\SEGGER/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 214              		.loc 1 150 0
 215 007c FB68     		ldr	r3, [r7, #12]
 216 007e DB68     		ldr	r3, [r3, #12]
 217 0080 002B     		cmp	r3, #0
 218 0082 07DB     		blt	.L25
 219              	.L13:
 147:..\SEGGER/SEGGER_RTT_printf.c ****         FieldWidth--;
 220              		.loc 1 147 0
 221 0084 3B6B     		ldr	r3, [r7, #48]
 222 0086 002B     		cmp	r3, #0
 223 0088 05D0     		beq	.L10
 147:..\SEGGER/SEGGER_RTT_printf.c ****         FieldWidth--;
 224              		.loc 1 147 0 is_stmt 0 discriminator 1
 225 008a FA69     		ldr	r2, [r7, #28]
 226 008c 3B6B     		ldr	r3, [r7, #48]
 227 008e 9A42     		cmp	r2, r3
 228 0090 ECD3     		bcc	.L14
 229 0092 00E0     		b	.L10
 230              	.L25:
 151:..\SEGGER/SEGGER_RTT_printf.c ****           break;
 231              		.loc 1 151 0 is_stmt 1
 232 0094 00BF     		nop
 233              	.L10:
 152:..\SEGGER/SEGGER_RTT_printf.c ****         }
 153:..\SEGGER/SEGGER_RTT_printf.c ****       }
 154:..\SEGGER/SEGGER_RTT_printf.c ****     }
 155:..\SEGGER/SEGGER_RTT_printf.c ****   }
 156:..\SEGGER/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 234              		.loc 1 156 0
 235 0096 FB68     		ldr	r3, [r7, #12]
 236 0098 DB68     		ldr	r3, [r3, #12]
 237 009a 002B     		cmp	r3, #0
 238 009c 55DB     		blt	.L26
 239              	.L19:
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 8


 157:..\SEGGER/SEGGER_RTT_printf.c ****     //
 158:..\SEGGER/SEGGER_RTT_printf.c ****     // Compute Digit.
 159:..\SEGGER/SEGGER_RTT_printf.c ****     // Loop until Digit has the value of the highest digit required.
 160:..\SEGGER/SEGGER_RTT_printf.c ****     // Example: If the output is 345 (Base 10), loop 2 times until Digit is 100.
 161:..\SEGGER/SEGGER_RTT_printf.c ****     //
 162:..\SEGGER/SEGGER_RTT_printf.c ****     while (1) {
 163:..\SEGGER/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 240              		.loc 1 163 0
 241 009e 3B68     		ldr	r3, [r7]
 242 00a0 012B     		cmp	r3, #1
 243 00a2 03D9     		bls	.L16
 164:..\SEGGER/SEGGER_RTT_printf.c ****         NumDigits--;
 244              		.loc 1 164 0
 245 00a4 3B68     		ldr	r3, [r7]
 246 00a6 013B     		subs	r3, r3, #1
 247 00a8 3B60     		str	r3, [r7]
 248 00aa 09E0     		b	.L17
 249              	.L16:
 165:..\SEGGER/SEGGER_RTT_printf.c ****       } else {
 166:..\SEGGER/SEGGER_RTT_printf.c ****         Div = v / Digit;
 250              		.loc 1 166 0
 251 00ac BA68     		ldr	r2, [r7, #8]
 252 00ae 7B6A     		ldr	r3, [r7, #36]
 253 00b0 B2FBF3F3 		udiv	r3, r2, r3
 254 00b4 7B61     		str	r3, [r7, #20]
 167:..\SEGGER/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 255              		.loc 1 167 0
 256 00b6 7A69     		ldr	r2, [r7, #20]
 257 00b8 7B68     		ldr	r3, [r7, #4]
 258 00ba 9A42     		cmp	r2, r3
 259 00bc 00D2     		bcs	.L17
 168:..\SEGGER/SEGGER_RTT_printf.c ****           break;
 260              		.loc 1 168 0
 261 00be 05E0     		b	.L18
 262              	.L17:
 169:..\SEGGER/SEGGER_RTT_printf.c ****         }
 170:..\SEGGER/SEGGER_RTT_printf.c ****       }
 171:..\SEGGER/SEGGER_RTT_printf.c ****       Digit *= Base;
 263              		.loc 1 171 0
 264 00c0 7B6A     		ldr	r3, [r7, #36]
 265 00c2 7A68     		ldr	r2, [r7, #4]
 266 00c4 02FB03F3 		mul	r3, r2, r3
 267 00c8 7B62     		str	r3, [r7, #36]
 172:..\SEGGER/SEGGER_RTT_printf.c ****     }
 268              		.loc 1 172 0
 269 00ca E8E7     		b	.L19
 270              	.L18:
 173:..\SEGGER/SEGGER_RTT_printf.c ****     //
 174:..\SEGGER/SEGGER_RTT_printf.c ****     // Output digits
 175:..\SEGGER/SEGGER_RTT_printf.c ****     //
 176:..\SEGGER/SEGGER_RTT_printf.c ****     do {
 177:..\SEGGER/SEGGER_RTT_printf.c ****       Div = v / Digit;
 271              		.loc 1 177 0
 272 00cc BA68     		ldr	r2, [r7, #8]
 273 00ce 7B6A     		ldr	r3, [r7, #36]
 274 00d0 B2FBF3F3 		udiv	r3, r2, r3
 275 00d4 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 9


 178:..\SEGGER/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 276              		.loc 1 178 0
 277 00d6 7B69     		ldr	r3, [r7, #20]
 278 00d8 7A6A     		ldr	r2, [r7, #36]
 279 00da 02FB03F3 		mul	r3, r2, r3
 280 00de BA68     		ldr	r2, [r7, #8]
 281 00e0 D31A     		subs	r3, r2, r3
 282 00e2 BB60     		str	r3, [r7, #8]
 179:..\SEGGER/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 283              		.loc 1 179 0
 284 00e4 1B4A     		ldr	r2, .L29
 285 00e6 7B69     		ldr	r3, [r7, #20]
 286 00e8 1344     		add	r3, r3, r2
 287 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 288 00ec 1946     		mov	r1, r3
 289 00ee F868     		ldr	r0, [r7, #12]
 290 00f0 FFF7FEFF 		bl	_StoreChar
 180:..\SEGGER/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 291              		.loc 1 180 0
 292 00f4 FB68     		ldr	r3, [r7, #12]
 293 00f6 DB68     		ldr	r3, [r3, #12]
 294 00f8 002B     		cmp	r3, #0
 295 00fa 08DB     		blt	.L27
 181:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 182:..\SEGGER/SEGGER_RTT_printf.c ****       }
 183:..\SEGGER/SEGGER_RTT_printf.c ****       Digit /= Base;
 296              		.loc 1 183 0
 297 00fc 7A6A     		ldr	r2, [r7, #36]
 298 00fe 7B68     		ldr	r3, [r7, #4]
 299 0100 B2FBF3F3 		udiv	r3, r2, r3
 300 0104 7B62     		str	r3, [r7, #36]
 184:..\SEGGER/SEGGER_RTT_printf.c ****     } while (Digit);
 301              		.loc 1 184 0
 302 0106 7B6A     		ldr	r3, [r7, #36]
 303 0108 002B     		cmp	r3, #0
 304 010a DFD1     		bne	.L18
 305 010c 00E0     		b	.L21
 306              	.L27:
 181:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 307              		.loc 1 181 0
 308 010e 00BF     		nop
 309              	.L21:
 185:..\SEGGER/SEGGER_RTT_printf.c ****     //
 186:..\SEGGER/SEGGER_RTT_printf.c ****     // Print trailing spaces if necessary
 187:..\SEGGER/SEGGER_RTT_printf.c ****     //
 188:..\SEGGER/SEGGER_RTT_printf.c ****     if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == FORMAT_FLAG_LEFT_JUSTIFY) {
 310              		.loc 1 188 0
 311 0110 7B6B     		ldr	r3, [r7, #52]
 312 0112 03F00103 		and	r3, r3, #1
 313 0116 002B     		cmp	r3, #0
 314 0118 17D0     		beq	.L26
 189:..\SEGGER/SEGGER_RTT_printf.c ****       if (FieldWidth != 0u) {
 315              		.loc 1 189 0
 316 011a 3B6B     		ldr	r3, [r7, #48]
 317 011c 002B     		cmp	r3, #0
 318 011e 14D0     		beq	.L26
 190:..\SEGGER/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 10


 319              		.loc 1 190 0
 320 0120 0AE0     		b	.L22
 321              	.L23:
 191:..\SEGGER/SEGGER_RTT_printf.c ****           FieldWidth--;
 322              		.loc 1 191 0
 323 0122 3B6B     		ldr	r3, [r7, #48]
 324 0124 013B     		subs	r3, r3, #1
 325 0126 3B63     		str	r3, [r7, #48]
 192:..\SEGGER/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 326              		.loc 1 192 0
 327 0128 2021     		movs	r1, #32
 328 012a F868     		ldr	r0, [r7, #12]
 329 012c FFF7FEFF 		bl	_StoreChar
 193:..\SEGGER/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 330              		.loc 1 193 0
 331 0130 FB68     		ldr	r3, [r7, #12]
 332 0132 DB68     		ldr	r3, [r3, #12]
 333 0134 002B     		cmp	r3, #0
 334 0136 07DB     		blt	.L28
 335              	.L22:
 190:..\SEGGER/SEGGER_RTT_printf.c ****           FieldWidth--;
 336              		.loc 1 190 0
 337 0138 3B6B     		ldr	r3, [r7, #48]
 338 013a 002B     		cmp	r3, #0
 339 013c 05D0     		beq	.L26
 190:..\SEGGER/SEGGER_RTT_printf.c ****           FieldWidth--;
 340              		.loc 1 190 0 is_stmt 0 discriminator 1
 341 013e FA69     		ldr	r2, [r7, #28]
 342 0140 3B6B     		ldr	r3, [r7, #48]
 343 0142 9A42     		cmp	r2, r3
 344 0144 EDD3     		bcc	.L23
 194:..\SEGGER/SEGGER_RTT_printf.c ****             break;
 195:..\SEGGER/SEGGER_RTT_printf.c ****           }
 196:..\SEGGER/SEGGER_RTT_printf.c ****         }
 197:..\SEGGER/SEGGER_RTT_printf.c ****       }
 198:..\SEGGER/SEGGER_RTT_printf.c ****     }
 199:..\SEGGER/SEGGER_RTT_printf.c ****   }
 200:..\SEGGER/SEGGER_RTT_printf.c **** }
 345              		.loc 1 200 0 is_stmt 1
 346 0146 00E0     		b	.L26
 347              	.L28:
 194:..\SEGGER/SEGGER_RTT_printf.c ****             break;
 348              		.loc 1 194 0
 349 0148 00BF     		nop
 350              	.L26:
 351              		.loc 1 200 0
 352 014a 00BF     		nop
 353 014c 2837     		adds	r7, r7, #40
 354              		.cfi_def_cfa_offset 8
 355 014e BD46     		mov	sp, r7
 356              		.cfi_def_cfa_register 13
 357              		@ sp needed
 358 0150 80BD     		pop	{r7, pc}
 359              	.L30:
 360 0152 00BF     		.align	2
 361              	.L29:
 362 0154 00000000 		.word	_aV2C.4939
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 11


 363              		.cfi_endproc
 364              	.LFE1:
 365              		.size	_PrintUnsigned, .-_PrintUnsigned
 366              		.section	.text._PrintInt,"ax",%progbits
 367              		.align	2
 368              		.thumb
 369              		.thumb_func
 370              		.type	_PrintInt, %function
 371              	_PrintInt:
 372              	.LFB2:
 201:..\SEGGER/SEGGER_RTT_printf.c **** 
 202:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
 203:..\SEGGER/SEGGER_RTT_printf.c **** *
 204:..\SEGGER/SEGGER_RTT_printf.c **** *       _PrintInt
 205:..\SEGGER/SEGGER_RTT_printf.c **** */
 206:..\SEGGER/SEGGER_RTT_printf.c **** static void _PrintInt(SEGGER_RTT_PRINTF_DESC * pBufferDesc, int v, unsigned Base, unsigned NumDigit
 373              		.loc 1 206 0
 374              		.cfi_startproc
 375              		@ args = 8, pretend = 0, frame = 24
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377 0000 80B5     		push	{r7, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 88B0     		sub	sp, sp, #32
 382              		.cfi_def_cfa_offset 40
 383 0004 02AF     		add	r7, sp, #8
 384              		.cfi_def_cfa 7, 32
 385 0006 F860     		str	r0, [r7, #12]
 386 0008 B960     		str	r1, [r7, #8]
 387 000a 7A60     		str	r2, [r7, #4]
 388 000c 3B60     		str	r3, [r7]
 207:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned Width;
 208:..\SEGGER/SEGGER_RTT_printf.c ****   int Number;
 209:..\SEGGER/SEGGER_RTT_printf.c **** 
 210:..\SEGGER/SEGGER_RTT_printf.c ****   Number = (v < 0) ? -v : v;
 389              		.loc 1 210 0
 390 000e BB68     		ldr	r3, [r7, #8]
 391 0010 002B     		cmp	r3, #0
 392 0012 B8BF     		it	lt
 393 0014 5B42     		rsblt	r3, r3, #0
 394 0016 3B61     		str	r3, [r7, #16]
 211:..\SEGGER/SEGGER_RTT_printf.c **** 
 212:..\SEGGER/SEGGER_RTT_printf.c ****   //
 213:..\SEGGER/SEGGER_RTT_printf.c ****   // Get actual field width
 214:..\SEGGER/SEGGER_RTT_printf.c ****   //
 215:..\SEGGER/SEGGER_RTT_printf.c ****   Width = 1u;
 395              		.loc 1 215 0
 396 0018 0123     		movs	r3, #1
 397 001a 7B61     		str	r3, [r7, #20]
 216:..\SEGGER/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 398              		.loc 1 216 0
 399 001c 07E0     		b	.L32
 400              	.L33:
 217:..\SEGGER/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 401              		.loc 1 217 0
 402 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 12


 403 0020 3A69     		ldr	r2, [r7, #16]
 404 0022 92FBF3F3 		sdiv	r3, r2, r3
 405 0026 3B61     		str	r3, [r7, #16]
 218:..\SEGGER/SEGGER_RTT_printf.c ****     Width++;
 406              		.loc 1 218 0
 407 0028 7B69     		ldr	r3, [r7, #20]
 408 002a 0133     		adds	r3, r3, #1
 409 002c 7B61     		str	r3, [r7, #20]
 410              	.L32:
 216:..\SEGGER/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 411              		.loc 1 216 0
 412 002e 7B68     		ldr	r3, [r7, #4]
 413 0030 3A69     		ldr	r2, [r7, #16]
 414 0032 9A42     		cmp	r2, r3
 415 0034 F3DA     		bge	.L33
 219:..\SEGGER/SEGGER_RTT_printf.c ****   }
 220:..\SEGGER/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 416              		.loc 1 220 0
 417 0036 3A68     		ldr	r2, [r7]
 418 0038 7B69     		ldr	r3, [r7, #20]
 419 003a 9A42     		cmp	r2, r3
 420 003c 01D9     		bls	.L34
 221:..\SEGGER/SEGGER_RTT_printf.c ****     Width = NumDigits;
 421              		.loc 1 221 0
 422 003e 3B68     		ldr	r3, [r7]
 423 0040 7B61     		str	r3, [r7, #20]
 424              	.L34:
 222:..\SEGGER/SEGGER_RTT_printf.c ****   }
 223:..\SEGGER/SEGGER_RTT_printf.c ****   if ((FieldWidth > 0u) && ((v < 0) || ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT
 425              		.loc 1 223 0
 426 0042 3B6A     		ldr	r3, [r7, #32]
 427 0044 002B     		cmp	r3, #0
 428 0046 0AD0     		beq	.L35
 429              		.loc 1 223 0 is_stmt 0 discriminator 1
 430 0048 BB68     		ldr	r3, [r7, #8]
 431 004a 002B     		cmp	r3, #0
 432 004c 04DB     		blt	.L36
 433              		.loc 1 223 0 discriminator 2
 434 004e 7B6A     		ldr	r3, [r7, #36]
 435 0050 03F00403 		and	r3, r3, #4
 436 0054 002B     		cmp	r3, #0
 437 0056 02D0     		beq	.L35
 438              	.L36:
 224:..\SEGGER/SEGGER_RTT_printf.c ****     FieldWidth--;
 439              		.loc 1 224 0 is_stmt 1
 440 0058 3B6A     		ldr	r3, [r7, #32]
 441 005a 013B     		subs	r3, r3, #1
 442 005c 3B62     		str	r3, [r7, #32]
 443              	.L35:
 225:..\SEGGER/SEGGER_RTT_printf.c ****   }
 226:..\SEGGER/SEGGER_RTT_printf.c **** 
 227:..\SEGGER/SEGGER_RTT_printf.c ****   //
 228:..\SEGGER/SEGGER_RTT_printf.c ****   // Print leading spaces if necessary
 229:..\SEGGER/SEGGER_RTT_printf.c ****   //
 230:..\SEGGER/SEGGER_RTT_printf.c ****   if ((((FormatFlags & FORMAT_FLAG_PAD_ZERO) == 0u) || (NumDigits != 0u)) && ((FormatFlags & FORMAT
 444              		.loc 1 230 0
 445 005e 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 13


 446 0060 03F00203 		and	r3, r3, #2
 447 0064 002B     		cmp	r3, #0
 448 0066 02D0     		beq	.L37
 449              		.loc 1 230 0 is_stmt 0 discriminator 2
 450 0068 3B68     		ldr	r3, [r7]
 451 006a 002B     		cmp	r3, #0
 452 006c 1CD0     		beq	.L38
 453              	.L37:
 454              		.loc 1 230 0 discriminator 3
 455 006e 7B6A     		ldr	r3, [r7, #36]
 456 0070 03F00103 		and	r3, r3, #1
 457 0074 002B     		cmp	r3, #0
 458 0076 17D1     		bne	.L38
 231:..\SEGGER/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 459              		.loc 1 231 0 is_stmt 1
 460 0078 3B6A     		ldr	r3, [r7, #32]
 461 007a 002B     		cmp	r3, #0
 462 007c 14D0     		beq	.L38
 232:..\SEGGER/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 463              		.loc 1 232 0
 464 007e 0AE0     		b	.L39
 465              	.L40:
 233:..\SEGGER/SEGGER_RTT_printf.c ****         FieldWidth--;
 466              		.loc 1 233 0
 467 0080 3B6A     		ldr	r3, [r7, #32]
 468 0082 013B     		subs	r3, r3, #1
 469 0084 3B62     		str	r3, [r7, #32]
 234:..\SEGGER/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 470              		.loc 1 234 0
 471 0086 2021     		movs	r1, #32
 472 0088 F868     		ldr	r0, [r7, #12]
 473 008a FFF7FEFF 		bl	_StoreChar
 235:..\SEGGER/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 474              		.loc 1 235 0
 475 008e FB68     		ldr	r3, [r7, #12]
 476 0090 DB68     		ldr	r3, [r3, #12]
 477 0092 002B     		cmp	r3, #0
 478 0094 07DB     		blt	.L47
 479              	.L39:
 232:..\SEGGER/SEGGER_RTT_printf.c ****         FieldWidth--;
 480              		.loc 1 232 0
 481 0096 3B6A     		ldr	r3, [r7, #32]
 482 0098 002B     		cmp	r3, #0
 483 009a 05D0     		beq	.L38
 232:..\SEGGER/SEGGER_RTT_printf.c ****         FieldWidth--;
 484              		.loc 1 232 0 is_stmt 0 discriminator 1
 485 009c 7A69     		ldr	r2, [r7, #20]
 486 009e 3B6A     		ldr	r3, [r7, #32]
 487 00a0 9A42     		cmp	r2, r3
 488 00a2 EDD3     		bcc	.L40
 489 00a4 00E0     		b	.L38
 490              	.L47:
 236:..\SEGGER/SEGGER_RTT_printf.c ****           break;
 491              		.loc 1 236 0 is_stmt 1
 492 00a6 00BF     		nop
 493              	.L38:
 237:..\SEGGER/SEGGER_RTT_printf.c ****         }
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 14


 238:..\SEGGER/SEGGER_RTT_printf.c ****       }
 239:..\SEGGER/SEGGER_RTT_printf.c ****     }
 240:..\SEGGER/SEGGER_RTT_printf.c ****   }
 241:..\SEGGER/SEGGER_RTT_printf.c ****   //
 242:..\SEGGER/SEGGER_RTT_printf.c ****   // Print sign if necessary
 243:..\SEGGER/SEGGER_RTT_printf.c ****   //
 244:..\SEGGER/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 494              		.loc 1 244 0
 495 00a8 FB68     		ldr	r3, [r7, #12]
 496 00aa DB68     		ldr	r3, [r3, #12]
 497 00ac 002B     		cmp	r3, #0
 498 00ae 4ADB     		blt	.L48
 245:..\SEGGER/SEGGER_RTT_printf.c ****     if (v < 0) {
 499              		.loc 1 245 0
 500 00b0 BB68     		ldr	r3, [r7, #8]
 501 00b2 002B     		cmp	r3, #0
 502 00b4 07DA     		bge	.L42
 246:..\SEGGER/SEGGER_RTT_printf.c ****       v = -v;
 503              		.loc 1 246 0
 504 00b6 BB68     		ldr	r3, [r7, #8]
 505 00b8 5B42     		negs	r3, r3
 506 00ba BB60     		str	r3, [r7, #8]
 247:..\SEGGER/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 507              		.loc 1 247 0
 508 00bc 2D21     		movs	r1, #45
 509 00be F868     		ldr	r0, [r7, #12]
 510 00c0 FFF7FEFF 		bl	_StoreChar
 511 00c4 08E0     		b	.L43
 512              	.L42:
 248:..\SEGGER/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 513              		.loc 1 248 0
 514 00c6 7B6A     		ldr	r3, [r7, #36]
 515 00c8 03F00403 		and	r3, r3, #4
 516 00cc 002B     		cmp	r3, #0
 517 00ce 03D0     		beq	.L43
 249:..\SEGGER/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '+');
 518              		.loc 1 249 0
 519 00d0 2B21     		movs	r1, #43
 520 00d2 F868     		ldr	r0, [r7, #12]
 521 00d4 FFF7FEFF 		bl	_StoreChar
 522              	.L43:
 250:..\SEGGER/SEGGER_RTT_printf.c ****     } else {
 251:..\SEGGER/SEGGER_RTT_printf.c **** 
 252:..\SEGGER/SEGGER_RTT_printf.c ****     }
 253:..\SEGGER/SEGGER_RTT_printf.c ****     if (pBufferDesc->ReturnValue >= 0) {
 523              		.loc 1 253 0
 524 00d8 FB68     		ldr	r3, [r7, #12]
 525 00da DB68     		ldr	r3, [r3, #12]
 526 00dc 002B     		cmp	r3, #0
 527 00de 32DB     		blt	.L48
 254:..\SEGGER/SEGGER_RTT_printf.c ****       //
 255:..\SEGGER/SEGGER_RTT_printf.c ****       // Print leading zeros if necessary
 256:..\SEGGER/SEGGER_RTT_printf.c ****       //
 257:..\SEGGER/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && ((FormatFlags & FORMAT_
 528              		.loc 1 257 0
 529 00e0 7B6A     		ldr	r3, [r7, #36]
 530 00e2 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 15


 531 00e6 002B     		cmp	r3, #0
 532 00e8 1FD0     		beq	.L44
 533              		.loc 1 257 0 is_stmt 0 discriminator 1
 534 00ea 7B6A     		ldr	r3, [r7, #36]
 535 00ec 03F00103 		and	r3, r3, #1
 536 00f0 002B     		cmp	r3, #0
 537 00f2 1AD1     		bne	.L44
 538              		.loc 1 257 0 discriminator 2
 539 00f4 3B68     		ldr	r3, [r7]
 540 00f6 002B     		cmp	r3, #0
 541 00f8 17D1     		bne	.L44
 258:..\SEGGER/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 542              		.loc 1 258 0 is_stmt 1
 543 00fa 3B6A     		ldr	r3, [r7, #32]
 544 00fc 002B     		cmp	r3, #0
 545 00fe 14D0     		beq	.L44
 259:..\SEGGER/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 546              		.loc 1 259 0
 547 0100 0AE0     		b	.L45
 548              	.L46:
 260:..\SEGGER/SEGGER_RTT_printf.c ****             FieldWidth--;
 549              		.loc 1 260 0
 550 0102 3B6A     		ldr	r3, [r7, #32]
 551 0104 013B     		subs	r3, r3, #1
 552 0106 3B62     		str	r3, [r7, #32]
 261:..\SEGGER/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 553              		.loc 1 261 0
 554 0108 3021     		movs	r1, #48
 555 010a F868     		ldr	r0, [r7, #12]
 556 010c FFF7FEFF 		bl	_StoreChar
 262:..\SEGGER/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 557              		.loc 1 262 0
 558 0110 FB68     		ldr	r3, [r7, #12]
 559 0112 DB68     		ldr	r3, [r3, #12]
 560 0114 002B     		cmp	r3, #0
 561 0116 07DB     		blt	.L49
 562              	.L45:
 259:..\SEGGER/SEGGER_RTT_printf.c ****             FieldWidth--;
 563              		.loc 1 259 0
 564 0118 3B6A     		ldr	r3, [r7, #32]
 565 011a 002B     		cmp	r3, #0
 566 011c 05D0     		beq	.L44
 259:..\SEGGER/SEGGER_RTT_printf.c ****             FieldWidth--;
 567              		.loc 1 259 0 is_stmt 0 discriminator 1
 568 011e 7A69     		ldr	r2, [r7, #20]
 569 0120 3B6A     		ldr	r3, [r7, #32]
 570 0122 9A42     		cmp	r2, r3
 571 0124 EDD3     		bcc	.L46
 572 0126 00E0     		b	.L44
 573              	.L49:
 263:..\SEGGER/SEGGER_RTT_printf.c ****               break;
 574              		.loc 1 263 0 is_stmt 1
 575 0128 00BF     		nop
 576              	.L44:
 264:..\SEGGER/SEGGER_RTT_printf.c ****             }
 265:..\SEGGER/SEGGER_RTT_printf.c ****           }
 266:..\SEGGER/SEGGER_RTT_printf.c ****         }
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 16


 267:..\SEGGER/SEGGER_RTT_printf.c ****       }
 268:..\SEGGER/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue >= 0) {
 577              		.loc 1 268 0
 578 012a FB68     		ldr	r3, [r7, #12]
 579 012c DB68     		ldr	r3, [r3, #12]
 580 012e 002B     		cmp	r3, #0
 581 0130 09DB     		blt	.L48
 269:..\SEGGER/SEGGER_RTT_printf.c ****         //
 270:..\SEGGER/SEGGER_RTT_printf.c ****         // Print number without sign
 271:..\SEGGER/SEGGER_RTT_printf.c ****         //
 272:..\SEGGER/SEGGER_RTT_printf.c ****         _PrintUnsigned(pBufferDesc, (unsigned)v, Base, NumDigits, FieldWidth, FormatFlags);
 582              		.loc 1 272 0
 583 0132 B968     		ldr	r1, [r7, #8]
 584 0134 7B6A     		ldr	r3, [r7, #36]
 585 0136 0193     		str	r3, [sp, #4]
 586 0138 3B6A     		ldr	r3, [r7, #32]
 587 013a 0093     		str	r3, [sp]
 588 013c 3B68     		ldr	r3, [r7]
 589 013e 7A68     		ldr	r2, [r7, #4]
 590 0140 F868     		ldr	r0, [r7, #12]
 591 0142 FFF7FEFF 		bl	_PrintUnsigned
 592              	.L48:
 273:..\SEGGER/SEGGER_RTT_printf.c ****       }
 274:..\SEGGER/SEGGER_RTT_printf.c ****     }
 275:..\SEGGER/SEGGER_RTT_printf.c ****   }
 276:..\SEGGER/SEGGER_RTT_printf.c **** }
 593              		.loc 1 276 0
 594 0146 00BF     		nop
 595 0148 1837     		adds	r7, r7, #24
 596              		.cfi_def_cfa_offset 8
 597 014a BD46     		mov	sp, r7
 598              		.cfi_def_cfa_register 13
 599              		@ sp needed
 600 014c 80BD     		pop	{r7, pc}
 601              		.cfi_endproc
 602              	.LFE2:
 603              		.size	_PrintInt, .-_PrintInt
 604 014e 00BF     		.section	.text.SEGGER_RTT_vprintf,"ax",%progbits
 605              		.align	2
 606              		.global	SEGGER_RTT_vprintf
 607              		.thumb
 608              		.thumb_func
 609              		.type	SEGGER_RTT_vprintf, %function
 610              	SEGGER_RTT_vprintf:
 611              	.LFB3:
 277:..\SEGGER/SEGGER_RTT_printf.c **** 
 278:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
 279:..\SEGGER/SEGGER_RTT_printf.c **** *
 280:..\SEGGER/SEGGER_RTT_printf.c **** *       Public code
 281:..\SEGGER/SEGGER_RTT_printf.c **** *
 282:..\SEGGER/SEGGER_RTT_printf.c **** **********************************************************************
 283:..\SEGGER/SEGGER_RTT_printf.c **** */
 284:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
 285:..\SEGGER/SEGGER_RTT_printf.c **** *
 286:..\SEGGER/SEGGER_RTT_printf.c **** *       SEGGER_RTT_vprintf
 287:..\SEGGER/SEGGER_RTT_printf.c **** *
 288:..\SEGGER/SEGGER_RTT_printf.c **** *  Function description
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 17


 289:..\SEGGER/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 290:..\SEGGER/SEGGER_RTT_printf.c **** *    This data is read by the host.
 291:..\SEGGER/SEGGER_RTT_printf.c **** *
 292:..\SEGGER/SEGGER_RTT_printf.c **** *  Parameters
 293:..\SEGGER/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 294:..\SEGGER/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string
 295:..\SEGGER/SEGGER_RTT_printf.c **** *    pParamList   Pointer to the list of arguments for the format string
 296:..\SEGGER/SEGGER_RTT_printf.c **** *
 297:..\SEGGER/SEGGER_RTT_printf.c **** *  Return values
 298:..\SEGGER/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 299:..\SEGGER/SEGGER_RTT_printf.c **** *     < 0:  Error
 300:..\SEGGER/SEGGER_RTT_printf.c **** */
 301:..\SEGGER/SEGGER_RTT_printf.c **** int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList) {
 612              		.loc 1 301 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 128
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 A2B0     		sub	sp, sp, #136
 621              		.cfi_def_cfa_offset 144
 622 0004 02AF     		add	r7, sp, #8
 623              		.cfi_def_cfa 7, 136
 624 0006 F860     		str	r0, [r7, #12]
 625 0008 B960     		str	r1, [r7, #8]
 626 000a 7A60     		str	r2, [r7, #4]
 302:..\SEGGER/SEGGER_RTT_printf.c ****   char c;
 303:..\SEGGER/SEGGER_RTT_printf.c ****   SEGGER_RTT_PRINTF_DESC BufferDesc;
 304:..\SEGGER/SEGGER_RTT_printf.c ****   int v;
 305:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned NumDigits;
 306:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned FormatFlags;
 307:..\SEGGER/SEGGER_RTT_printf.c ****   unsigned FieldWidth;
 308:..\SEGGER/SEGGER_RTT_printf.c ****   char acBuffer[SEGGER_RTT_PRINTF_BUFFER_SIZE];
 309:..\SEGGER/SEGGER_RTT_printf.c **** 
 310:..\SEGGER/SEGGER_RTT_printf.c ****   BufferDesc.pBuffer        = acBuffer;
 627              		.loc 1 310 0
 628 000c 07F11003 		add	r3, r7, #16
 629 0010 3B65     		str	r3, [r7, #80]
 311:..\SEGGER/SEGGER_RTT_printf.c ****   BufferDesc.BufferSize     = SEGGER_RTT_PRINTF_BUFFER_SIZE;
 630              		.loc 1 311 0
 631 0012 4023     		movs	r3, #64
 632 0014 7B65     		str	r3, [r7, #84]
 312:..\SEGGER/SEGGER_RTT_printf.c ****   BufferDesc.Cnt            = 0u;
 633              		.loc 1 312 0
 634 0016 0023     		movs	r3, #0
 635 0018 BB65     		str	r3, [r7, #88]
 313:..\SEGGER/SEGGER_RTT_printf.c ****   BufferDesc.RTTBufferIndex = BufferIndex;
 636              		.loc 1 313 0
 637 001a FB68     		ldr	r3, [r7, #12]
 638 001c 3B66     		str	r3, [r7, #96]
 314:..\SEGGER/SEGGER_RTT_printf.c ****   BufferDesc.ReturnValue    = 0;
 639              		.loc 1 314 0
 640 001e 0023     		movs	r3, #0
 641 0020 FB65     		str	r3, [r7, #92]
 642              	.L84:
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 18


 315:..\SEGGER/SEGGER_RTT_printf.c **** 
 316:..\SEGGER/SEGGER_RTT_printf.c ****   do {
 317:..\SEGGER/SEGGER_RTT_printf.c ****     c = *sFormat;
 643              		.loc 1 317 0
 644 0022 BB68     		ldr	r3, [r7, #8]
 645 0024 1B78     		ldrb	r3, [r3]
 646 0026 87F87F30 		strb	r3, [r7, #127]
 318:..\SEGGER/SEGGER_RTT_printf.c ****     sFormat++;
 647              		.loc 1 318 0
 648 002a BB68     		ldr	r3, [r7, #8]
 649 002c 0133     		adds	r3, r3, #1
 650 002e BB60     		str	r3, [r7, #8]
 319:..\SEGGER/SEGGER_RTT_printf.c ****     if (c == 0u) {
 651              		.loc 1 319 0
 652 0030 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 653 0034 002B     		cmp	r3, #0
 654 0036 00F06181 		beq	.L89
 320:..\SEGGER/SEGGER_RTT_printf.c ****       break;
 321:..\SEGGER/SEGGER_RTT_printf.c ****     }
 322:..\SEGGER/SEGGER_RTT_printf.c ****     if (c == '%') {
 655              		.loc 1 322 0
 656 003a 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 657 003e 252B     		cmp	r3, #37
 658 0040 40F04F81 		bne	.L53
 323:..\SEGGER/SEGGER_RTT_printf.c ****       //
 324:..\SEGGER/SEGGER_RTT_printf.c ****       // Filter out flags
 325:..\SEGGER/SEGGER_RTT_printf.c ****       //
 326:..\SEGGER/SEGGER_RTT_printf.c ****       FormatFlags = 0u;
 659              		.loc 1 326 0
 660 0044 0023     		movs	r3, #0
 661 0046 3B67     		str	r3, [r7, #112]
 327:..\SEGGER/SEGGER_RTT_printf.c ****       v = 1;
 662              		.loc 1 327 0
 663 0048 0123     		movs	r3, #1
 664 004a BB67     		str	r3, [r7, #120]
 665              	.L61:
 328:..\SEGGER/SEGGER_RTT_printf.c ****       do {
 329:..\SEGGER/SEGGER_RTT_printf.c ****         c = *sFormat;
 666              		.loc 1 329 0
 667 004c BB68     		ldr	r3, [r7, #8]
 668 004e 1B78     		ldrb	r3, [r3]
 669 0050 87F87F30 		strb	r3, [r7, #127]
 330:..\SEGGER/SEGGER_RTT_printf.c ****         switch (c) {
 670              		.loc 1 330 0
 671 0054 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 672 0058 233B     		subs	r3, r3, #35
 673 005a 0D2B     		cmp	r3, #13
 674 005c 3ED8     		bhi	.L54
 675 005e 01A2     		adr	r2, .L56
 676 0060 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 677              		.p2align 2
 678              	.L56:
 679 0064 CD000000 		.word	.L55+1
 680 0068 DD000000 		.word	.L54+1
 681 006c DD000000 		.word	.L54+1
 682 0070 DD000000 		.word	.L54+1
 683 0074 DD000000 		.word	.L54+1
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 19


 684 0078 DD000000 		.word	.L54+1
 685 007c DD000000 		.word	.L54+1
 686 0080 DD000000 		.word	.L54+1
 687 0084 BD000000 		.word	.L57+1
 688 0088 DD000000 		.word	.L54+1
 689 008c 9D000000 		.word	.L58+1
 690 0090 DD000000 		.word	.L54+1
 691 0094 DD000000 		.word	.L54+1
 692 0098 AD000000 		.word	.L59+1
 693              		.p2align 1
 694              	.L58:
 331:..\SEGGER/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 695              		.loc 1 331 0
 696 009c 3B6F     		ldr	r3, [r7, #112]
 697 009e 43F00103 		orr	r3, r3, #1
 698 00a2 3B67     		str	r3, [r7, #112]
 699 00a4 BB68     		ldr	r3, [r7, #8]
 700 00a6 0133     		adds	r3, r3, #1
 701 00a8 BB60     		str	r3, [r7, #8]
 702 00aa 1AE0     		b	.L60
 703              	.L59:
 332:..\SEGGER/SEGGER_RTT_printf.c ****         case '0': FormatFlags |= FORMAT_FLAG_PAD_ZERO;     sFormat++; break;
 704              		.loc 1 332 0
 705 00ac 3B6F     		ldr	r3, [r7, #112]
 706 00ae 43F00203 		orr	r3, r3, #2
 707 00b2 3B67     		str	r3, [r7, #112]
 708 00b4 BB68     		ldr	r3, [r7, #8]
 709 00b6 0133     		adds	r3, r3, #1
 710 00b8 BB60     		str	r3, [r7, #8]
 711 00ba 12E0     		b	.L60
 712              	.L57:
 333:..\SEGGER/SEGGER_RTT_printf.c ****         case '+': FormatFlags |= FORMAT_FLAG_PRINT_SIGN;   sFormat++; break;
 713              		.loc 1 333 0
 714 00bc 3B6F     		ldr	r3, [r7, #112]
 715 00be 43F00403 		orr	r3, r3, #4
 716 00c2 3B67     		str	r3, [r7, #112]
 717 00c4 BB68     		ldr	r3, [r7, #8]
 718 00c6 0133     		adds	r3, r3, #1
 719 00c8 BB60     		str	r3, [r7, #8]
 720 00ca 0AE0     		b	.L60
 721              	.L55:
 334:..\SEGGER/SEGGER_RTT_printf.c ****         case '#': FormatFlags |= FORMAT_FLAG_ALTERNATE;    sFormat++; break;
 722              		.loc 1 334 0
 723 00cc 3B6F     		ldr	r3, [r7, #112]
 724 00ce 43F00803 		orr	r3, r3, #8
 725 00d2 3B67     		str	r3, [r7, #112]
 726 00d4 BB68     		ldr	r3, [r7, #8]
 727 00d6 0133     		adds	r3, r3, #1
 728 00d8 BB60     		str	r3, [r7, #8]
 729 00da 02E0     		b	.L60
 730              	.L54:
 335:..\SEGGER/SEGGER_RTT_printf.c ****         default:  v = 0; break;
 731              		.loc 1 335 0
 732 00dc 0023     		movs	r3, #0
 733 00de BB67     		str	r3, [r7, #120]
 734 00e0 00BF     		nop
 735              	.L60:
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 20


 336:..\SEGGER/SEGGER_RTT_printf.c ****         }
 337:..\SEGGER/SEGGER_RTT_printf.c ****       } while (v);
 736              		.loc 1 337 0
 737 00e2 BB6F     		ldr	r3, [r7, #120]
 738 00e4 002B     		cmp	r3, #0
 739 00e6 B1D1     		bne	.L61
 338:..\SEGGER/SEGGER_RTT_printf.c ****       //
 339:..\SEGGER/SEGGER_RTT_printf.c ****       // filter out field with
 340:..\SEGGER/SEGGER_RTT_printf.c ****       //
 341:..\SEGGER/SEGGER_RTT_printf.c ****       FieldWidth = 0u;
 740              		.loc 1 341 0
 741 00e8 0023     		movs	r3, #0
 742 00ea FB66     		str	r3, [r7, #108]
 743              	.L63:
 342:..\SEGGER/SEGGER_RTT_printf.c ****       do {
 343:..\SEGGER/SEGGER_RTT_printf.c ****         c = *sFormat;
 744              		.loc 1 343 0
 745 00ec BB68     		ldr	r3, [r7, #8]
 746 00ee 1B78     		ldrb	r3, [r3]
 747 00f0 87F87F30 		strb	r3, [r7, #127]
 344:..\SEGGER/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 748              		.loc 1 344 0
 749 00f4 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 750 00f8 2F2B     		cmp	r3, #47
 751 00fa 12D9     		bls	.L62
 752              		.loc 1 344 0 is_stmt 0 discriminator 1
 753 00fc 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 754 0100 392B     		cmp	r3, #57
 755 0102 0ED8     		bhi	.L62
 345:..\SEGGER/SEGGER_RTT_printf.c ****           break;
 346:..\SEGGER/SEGGER_RTT_printf.c ****         }
 347:..\SEGGER/SEGGER_RTT_printf.c ****         sFormat++;
 756              		.loc 1 347 0 is_stmt 1
 757 0104 BB68     		ldr	r3, [r7, #8]
 758 0106 0133     		adds	r3, r3, #1
 759 0108 BB60     		str	r3, [r7, #8]
 348:..\SEGGER/SEGGER_RTT_printf.c ****         FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
 760              		.loc 1 348 0
 761 010a FA6E     		ldr	r2, [r7, #108]
 762 010c 1346     		mov	r3, r2
 763 010e 9B00     		lsls	r3, r3, #2
 764 0110 1344     		add	r3, r3, r2
 765 0112 5B00     		lsls	r3, r3, #1
 766 0114 1A46     		mov	r2, r3
 767 0116 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 768 011a 1344     		add	r3, r3, r2
 769 011c 303B     		subs	r3, r3, #48
 770 011e FB66     		str	r3, [r7, #108]
 349:..\SEGGER/SEGGER_RTT_printf.c ****       } while (1);
 771              		.loc 1 349 0
 772 0120 E4E7     		b	.L63
 773              	.L62:
 350:..\SEGGER/SEGGER_RTT_printf.c **** 
 351:..\SEGGER/SEGGER_RTT_printf.c ****       //
 352:..\SEGGER/SEGGER_RTT_printf.c ****       // Filter out precision (number of digits to display)
 353:..\SEGGER/SEGGER_RTT_printf.c ****       //
 354:..\SEGGER/SEGGER_RTT_printf.c ****       NumDigits = 0u;
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 21


 774              		.loc 1 354 0
 775 0122 0023     		movs	r3, #0
 776 0124 7B67     		str	r3, [r7, #116]
 355:..\SEGGER/SEGGER_RTT_printf.c ****       c = *sFormat;
 777              		.loc 1 355 0
 778 0126 BB68     		ldr	r3, [r7, #8]
 779 0128 1B78     		ldrb	r3, [r3]
 780 012a 87F87F30 		strb	r3, [r7, #127]
 356:..\SEGGER/SEGGER_RTT_printf.c ****       if (c == '.') {
 781              		.loc 1 356 0
 782 012e 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 783 0132 2E2B     		cmp	r3, #46
 784 0134 1DD1     		bne	.L64
 357:..\SEGGER/SEGGER_RTT_printf.c ****         sFormat++;
 785              		.loc 1 357 0
 786 0136 BB68     		ldr	r3, [r7, #8]
 787 0138 0133     		adds	r3, r3, #1
 788 013a BB60     		str	r3, [r7, #8]
 789              	.L65:
 358:..\SEGGER/SEGGER_RTT_printf.c ****         do {
 359:..\SEGGER/SEGGER_RTT_printf.c ****           c = *sFormat;
 790              		.loc 1 359 0
 791 013c BB68     		ldr	r3, [r7, #8]
 792 013e 1B78     		ldrb	r3, [r3]
 793 0140 87F87F30 		strb	r3, [r7, #127]
 360:..\SEGGER/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 794              		.loc 1 360 0
 795 0144 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 796 0148 2F2B     		cmp	r3, #47
 797 014a 12D9     		bls	.L64
 798              		.loc 1 360 0 is_stmt 0 discriminator 1
 799 014c 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 800 0150 392B     		cmp	r3, #57
 801 0152 0ED8     		bhi	.L64
 361:..\SEGGER/SEGGER_RTT_printf.c ****             break;
 362:..\SEGGER/SEGGER_RTT_printf.c ****           }
 363:..\SEGGER/SEGGER_RTT_printf.c ****           sFormat++;
 802              		.loc 1 363 0 is_stmt 1
 803 0154 BB68     		ldr	r3, [r7, #8]
 804 0156 0133     		adds	r3, r3, #1
 805 0158 BB60     		str	r3, [r7, #8]
 364:..\SEGGER/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 806              		.loc 1 364 0
 807 015a 7A6F     		ldr	r2, [r7, #116]
 808 015c 1346     		mov	r3, r2
 809 015e 9B00     		lsls	r3, r3, #2
 810 0160 1344     		add	r3, r3, r2
 811 0162 5B00     		lsls	r3, r3, #1
 812 0164 1A46     		mov	r2, r3
 813 0166 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 814 016a 1344     		add	r3, r3, r2
 815 016c 303B     		subs	r3, r3, #48
 816 016e 7B67     		str	r3, [r7, #116]
 365:..\SEGGER/SEGGER_RTT_printf.c ****         } while (1);
 817              		.loc 1 365 0
 818 0170 E4E7     		b	.L65
 819              	.L64:
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 22


 366:..\SEGGER/SEGGER_RTT_printf.c ****       }
 367:..\SEGGER/SEGGER_RTT_printf.c ****       //
 368:..\SEGGER/SEGGER_RTT_printf.c ****       // Filter out length modifier
 369:..\SEGGER/SEGGER_RTT_printf.c ****       //
 370:..\SEGGER/SEGGER_RTT_printf.c ****       c = *sFormat;
 820              		.loc 1 370 0
 821 0172 BB68     		ldr	r3, [r7, #8]
 822 0174 1B78     		ldrb	r3, [r3]
 823 0176 87F87F30 		strb	r3, [r7, #127]
 824              	.L68:
 371:..\SEGGER/SEGGER_RTT_printf.c ****       do {
 372:..\SEGGER/SEGGER_RTT_printf.c ****         if ((c == 'l') || (c == 'h')) {
 825              		.loc 1 372 0
 826 017a 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 827 017e 6C2B     		cmp	r3, #108
 828 0180 03D0     		beq	.L66
 829              		.loc 1 372 0 is_stmt 0 discriminator 1
 830 0182 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 831 0186 682B     		cmp	r3, #104
 832 0188 07D1     		bne	.L67
 833              	.L66:
 373:..\SEGGER/SEGGER_RTT_printf.c ****           sFormat++;
 834              		.loc 1 373 0 is_stmt 1
 835 018a BB68     		ldr	r3, [r7, #8]
 836 018c 0133     		adds	r3, r3, #1
 837 018e BB60     		str	r3, [r7, #8]
 374:..\SEGGER/SEGGER_RTT_printf.c ****           c = *sFormat;
 838              		.loc 1 374 0
 839 0190 BB68     		ldr	r3, [r7, #8]
 840 0192 1B78     		ldrb	r3, [r3]
 841 0194 87F87F30 		strb	r3, [r7, #127]
 375:..\SEGGER/SEGGER_RTT_printf.c ****         } else {
 376:..\SEGGER/SEGGER_RTT_printf.c ****           break;
 377:..\SEGGER/SEGGER_RTT_printf.c ****         }
 378:..\SEGGER/SEGGER_RTT_printf.c ****       } while (1);
 842              		.loc 1 378 0
 843 0198 EFE7     		b	.L68
 844              	.L67:
 379:..\SEGGER/SEGGER_RTT_printf.c ****       //
 380:..\SEGGER/SEGGER_RTT_printf.c ****       // Handle specifiers
 381:..\SEGGER/SEGGER_RTT_printf.c ****       //
 382:..\SEGGER/SEGGER_RTT_printf.c ****       switch (c) {
 845              		.loc 1 382 0
 846 019a 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 847 019e 642B     		cmp	r3, #100
 848 01a0 28D0     		beq	.L70
 849 01a2 642B     		cmp	r3, #100
 850 01a4 07DC     		bgt	.L71
 851 01a6 582B     		cmp	r3, #88
 852 01a8 4AD0     		beq	.L72
 853 01aa 632B     		cmp	r3, #99
 854 01ac 0FD0     		beq	.L73
 855 01ae 252B     		cmp	r3, #37
 856 01b0 00F08C80 		beq	.L74
 383:..\SEGGER/SEGGER_RTT_printf.c ****       case 'c': {
 384:..\SEGGER/SEGGER_RTT_printf.c ****         char c0;
 385:..\SEGGER/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 23


 386:..\SEGGER/SEGGER_RTT_printf.c ****         c0 = (char)v;
 387:..\SEGGER/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, c0);
 388:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 389:..\SEGGER/SEGGER_RTT_printf.c ****       }
 390:..\SEGGER/SEGGER_RTT_printf.c ****       case 'd':
 391:..\SEGGER/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 392:..\SEGGER/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 393:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 394:..\SEGGER/SEGGER_RTT_printf.c ****       case 'u':
 395:..\SEGGER/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 396:..\SEGGER/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 397:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 398:..\SEGGER/SEGGER_RTT_printf.c ****       case 'x':
 399:..\SEGGER/SEGGER_RTT_printf.c ****       case 'X':
 400:..\SEGGER/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 401:..\SEGGER/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 402:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 403:..\SEGGER/SEGGER_RTT_printf.c ****       case 's':
 404:..\SEGGER/SEGGER_RTT_printf.c ****         {
 405:..\SEGGER/SEGGER_RTT_printf.c ****           const char * s = va_arg(*pParamList, const char *);
 406:..\SEGGER/SEGGER_RTT_printf.c ****           do {
 407:..\SEGGER/SEGGER_RTT_printf.c ****             c = *s;
 408:..\SEGGER/SEGGER_RTT_printf.c ****             s++;
 409:..\SEGGER/SEGGER_RTT_printf.c ****             if (c == '\0') {
 410:..\SEGGER/SEGGER_RTT_printf.c ****               break;
 411:..\SEGGER/SEGGER_RTT_printf.c ****             }
 412:..\SEGGER/SEGGER_RTT_printf.c ****            _StoreChar(&BufferDesc, c);
 413:..\SEGGER/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 414:..\SEGGER/SEGGER_RTT_printf.c ****         }
 415:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 416:..\SEGGER/SEGGER_RTT_printf.c ****       case 'p':
 417:..\SEGGER/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 418:..\SEGGER/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 419:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 420:..\SEGGER/SEGGER_RTT_printf.c ****       case '%':
 421:..\SEGGER/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, '%');
 422:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 423:..\SEGGER/SEGGER_RTT_printf.c ****       default:
 424:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 857              		.loc 1 424 0
 858 01b4 91E0     		b	.L79
 859              	.L71:
 382:..\SEGGER/SEGGER_RTT_printf.c ****       case 'c': {
 860              		.loc 1 382 0
 861 01b6 732B     		cmp	r3, #115
 862 01b8 55D0     		beq	.L75
 863 01ba 732B     		cmp	r3, #115
 864 01bc 02DC     		bgt	.L76
 865 01be 702B     		cmp	r3, #112
 866 01c0 71D0     		beq	.L77
 867              		.loc 1 424 0
 868 01c2 8AE0     		b	.L79
 869              	.L76:
 382:..\SEGGER/SEGGER_RTT_printf.c ****       case 'c': {
 870              		.loc 1 382 0
 871 01c4 752B     		cmp	r3, #117
 872 01c6 28D0     		beq	.L78
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 24


 873 01c8 782B     		cmp	r3, #120
 874 01ca 39D0     		beq	.L72
 875              		.loc 1 424 0
 876 01cc 85E0     		b	.L79
 877              	.L73:
 878              	.LBB2:
 385:..\SEGGER/SEGGER_RTT_printf.c ****         c0 = (char)v;
 879              		.loc 1 385 0
 880 01ce 7B68     		ldr	r3, [r7, #4]
 881 01d0 1B68     		ldr	r3, [r3]
 882 01d2 191D     		adds	r1, r3, #4
 883 01d4 7A68     		ldr	r2, [r7, #4]
 884 01d6 1160     		str	r1, [r2]
 885 01d8 1B68     		ldr	r3, [r3]
 886 01da BB67     		str	r3, [r7, #120]
 386:..\SEGGER/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, c0);
 887              		.loc 1 386 0
 888 01dc BB6F     		ldr	r3, [r7, #120]
 889 01de 87F86730 		strb	r3, [r7, #103]
 387:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 890              		.loc 1 387 0
 891 01e2 97F86720 		ldrb	r2, [r7, #103]	@ zero_extendqisi2
 892 01e6 07F15003 		add	r3, r7, #80
 893 01ea 1146     		mov	r1, r2
 894 01ec 1846     		mov	r0, r3
 895 01ee FFF7FEFF 		bl	_StoreChar
 388:..\SEGGER/SEGGER_RTT_printf.c ****       }
 896              		.loc 1 388 0
 897 01f2 72E0     		b	.L79
 898              	.L70:
 899              	.LBE2:
 391:..\SEGGER/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 900              		.loc 1 391 0
 901 01f4 7B68     		ldr	r3, [r7, #4]
 902 01f6 1B68     		ldr	r3, [r3]
 903 01f8 191D     		adds	r1, r3, #4
 904 01fa 7A68     		ldr	r2, [r7, #4]
 905 01fc 1160     		str	r1, [r2]
 906 01fe 1B68     		ldr	r3, [r3]
 907 0200 BB67     		str	r3, [r7, #120]
 392:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 908              		.loc 1 392 0
 909 0202 07F15000 		add	r0, r7, #80
 910 0206 3B6F     		ldr	r3, [r7, #112]
 911 0208 0193     		str	r3, [sp, #4]
 912 020a FB6E     		ldr	r3, [r7, #108]
 913 020c 0093     		str	r3, [sp]
 914 020e 7B6F     		ldr	r3, [r7, #116]
 915 0210 0A22     		movs	r2, #10
 916 0212 B96F     		ldr	r1, [r7, #120]
 917 0214 FFF7FEFF 		bl	_PrintInt
 393:..\SEGGER/SEGGER_RTT_printf.c ****       case 'u':
 918              		.loc 1 393 0
 919 0218 5FE0     		b	.L79
 920              	.L78:
 395:..\SEGGER/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 921              		.loc 1 395 0
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 25


 922 021a 7B68     		ldr	r3, [r7, #4]
 923 021c 1B68     		ldr	r3, [r3]
 924 021e 191D     		adds	r1, r3, #4
 925 0220 7A68     		ldr	r2, [r7, #4]
 926 0222 1160     		str	r1, [r2]
 927 0224 1B68     		ldr	r3, [r3]
 928 0226 BB67     		str	r3, [r7, #120]
 396:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 929              		.loc 1 396 0
 930 0228 B96F     		ldr	r1, [r7, #120]
 931 022a 07F15000 		add	r0, r7, #80
 932 022e 3B6F     		ldr	r3, [r7, #112]
 933 0230 0193     		str	r3, [sp, #4]
 934 0232 FB6E     		ldr	r3, [r7, #108]
 935 0234 0093     		str	r3, [sp]
 936 0236 7B6F     		ldr	r3, [r7, #116]
 937 0238 0A22     		movs	r2, #10
 938 023a FFF7FEFF 		bl	_PrintUnsigned
 397:..\SEGGER/SEGGER_RTT_printf.c ****       case 'x':
 939              		.loc 1 397 0
 940 023e 4CE0     		b	.L79
 941              	.L72:
 400:..\SEGGER/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 942              		.loc 1 400 0
 943 0240 7B68     		ldr	r3, [r7, #4]
 944 0242 1B68     		ldr	r3, [r3]
 945 0244 191D     		adds	r1, r3, #4
 946 0246 7A68     		ldr	r2, [r7, #4]
 947 0248 1160     		str	r1, [r2]
 948 024a 1B68     		ldr	r3, [r3]
 949 024c BB67     		str	r3, [r7, #120]
 401:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 950              		.loc 1 401 0
 951 024e B96F     		ldr	r1, [r7, #120]
 952 0250 07F15000 		add	r0, r7, #80
 953 0254 3B6F     		ldr	r3, [r7, #112]
 954 0256 0193     		str	r3, [sp, #4]
 955 0258 FB6E     		ldr	r3, [r7, #108]
 956 025a 0093     		str	r3, [sp]
 957 025c 7B6F     		ldr	r3, [r7, #116]
 958 025e 1022     		movs	r2, #16
 959 0260 FFF7FEFF 		bl	_PrintUnsigned
 402:..\SEGGER/SEGGER_RTT_printf.c ****       case 's':
 960              		.loc 1 402 0
 961 0264 39E0     		b	.L79
 962              	.L75:
 963              	.LBB3:
 405:..\SEGGER/SEGGER_RTT_printf.c ****           do {
 964              		.loc 1 405 0
 965 0266 7B68     		ldr	r3, [r7, #4]
 966 0268 1B68     		ldr	r3, [r3]
 967 026a 191D     		adds	r1, r3, #4
 968 026c 7A68     		ldr	r2, [r7, #4]
 969 026e 1160     		str	r1, [r2]
 970 0270 1B68     		ldr	r3, [r3]
 971 0272 BB66     		str	r3, [r7, #104]
 972              	.L82:
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 26


 407:..\SEGGER/SEGGER_RTT_printf.c ****             s++;
 973              		.loc 1 407 0
 974 0274 BB6E     		ldr	r3, [r7, #104]
 975 0276 1B78     		ldrb	r3, [r3]
 976 0278 87F87F30 		strb	r3, [r7, #127]
 408:..\SEGGER/SEGGER_RTT_printf.c ****             if (c == '\0') {
 977              		.loc 1 408 0
 978 027c BB6E     		ldr	r3, [r7, #104]
 979 027e 0133     		adds	r3, r3, #1
 980 0280 BB66     		str	r3, [r7, #104]
 409:..\SEGGER/SEGGER_RTT_printf.c ****               break;
 981              		.loc 1 409 0
 982 0282 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 983 0286 002B     		cmp	r3, #0
 984 0288 0BD0     		beq	.L90
 412:..\SEGGER/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 985              		.loc 1 412 0
 986 028a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 987 028e 07F15003 		add	r3, r7, #80
 988 0292 1146     		mov	r1, r2
 989 0294 1846     		mov	r0, r3
 990 0296 FFF7FEFF 		bl	_StoreChar
 413:..\SEGGER/SEGGER_RTT_printf.c ****         }
 991              		.loc 1 413 0
 992 029a FB6D     		ldr	r3, [r7, #92]
 993 029c 002B     		cmp	r3, #0
 994 029e E9DA     		bge	.L82
 995              	.LBE3:
 415:..\SEGGER/SEGGER_RTT_printf.c ****       case 'p':
 996              		.loc 1 415 0
 997 02a0 1BE0     		b	.L79
 998              	.L90:
 999              	.LBB4:
 410:..\SEGGER/SEGGER_RTT_printf.c ****             }
 1000              		.loc 1 410 0
 1001 02a2 00BF     		nop
 1002              	.LBE4:
 415:..\SEGGER/SEGGER_RTT_printf.c ****       case 'p':
 1003              		.loc 1 415 0
 1004 02a4 19E0     		b	.L79
 1005              	.L77:
 417:..\SEGGER/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1006              		.loc 1 417 0
 1007 02a6 7B68     		ldr	r3, [r7, #4]
 1008 02a8 1B68     		ldr	r3, [r3]
 1009 02aa 191D     		adds	r1, r3, #4
 1010 02ac 7A68     		ldr	r2, [r7, #4]
 1011 02ae 1160     		str	r1, [r2]
 1012 02b0 1B68     		ldr	r3, [r3]
 1013 02b2 BB67     		str	r3, [r7, #120]
 418:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 1014              		.loc 1 418 0
 1015 02b4 B96F     		ldr	r1, [r7, #120]
 1016 02b6 07F15000 		add	r0, r7, #80
 1017 02ba 0023     		movs	r3, #0
 1018 02bc 0193     		str	r3, [sp, #4]
 1019 02be 0823     		movs	r3, #8
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 27


 1020 02c0 0093     		str	r3, [sp]
 1021 02c2 0823     		movs	r3, #8
 1022 02c4 1022     		movs	r2, #16
 1023 02c6 FFF7FEFF 		bl	_PrintUnsigned
 419:..\SEGGER/SEGGER_RTT_printf.c ****       case '%':
 1024              		.loc 1 419 0
 1025 02ca 06E0     		b	.L79
 1026              	.L74:
 421:..\SEGGER/SEGGER_RTT_printf.c ****         break;
 1027              		.loc 1 421 0
 1028 02cc 07F15003 		add	r3, r7, #80
 1029 02d0 2521     		movs	r1, #37
 1030 02d2 1846     		mov	r0, r3
 1031 02d4 FFF7FEFF 		bl	_StoreChar
 422:..\SEGGER/SEGGER_RTT_printf.c ****       default:
 1032              		.loc 1 422 0
 1033 02d8 00BF     		nop
 1034              	.L79:
 425:..\SEGGER/SEGGER_RTT_printf.c ****       }
 426:..\SEGGER/SEGGER_RTT_printf.c ****       sFormat++;
 1035              		.loc 1 426 0
 1036 02da BB68     		ldr	r3, [r7, #8]
 1037 02dc 0133     		adds	r3, r3, #1
 1038 02de BB60     		str	r3, [r7, #8]
 1039 02e0 07E0     		b	.L83
 1040              	.L53:
 427:..\SEGGER/SEGGER_RTT_printf.c ****     } else {
 428:..\SEGGER/SEGGER_RTT_printf.c ****       _StoreChar(&BufferDesc, c);
 1041              		.loc 1 428 0
 1042 02e2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 1043 02e6 07F15003 		add	r3, r7, #80
 1044 02ea 1146     		mov	r1, r2
 1045 02ec 1846     		mov	r0, r3
 1046 02ee FFF7FEFF 		bl	_StoreChar
 1047              	.L83:
 429:..\SEGGER/SEGGER_RTT_printf.c ****     }
 430:..\SEGGER/SEGGER_RTT_printf.c ****   } while (BufferDesc.ReturnValue >= 0);
 1048              		.loc 1 430 0
 1049 02f2 FB6D     		ldr	r3, [r7, #92]
 1050 02f4 002B     		cmp	r3, #0
 1051 02f6 BFF694AE 		bge	.L84
 1052 02fa 00E0     		b	.L52
 1053              	.L89:
 320:..\SEGGER/SEGGER_RTT_printf.c ****     }
 1054              		.loc 1 320 0
 1055 02fc 00BF     		nop
 1056              	.L52:
 431:..\SEGGER/SEGGER_RTT_printf.c **** 
 432:..\SEGGER/SEGGER_RTT_printf.c ****   if (BufferDesc.ReturnValue > 0) {
 1057              		.loc 1 432 0
 1058 02fe FB6D     		ldr	r3, [r7, #92]
 1059 0300 002B     		cmp	r3, #0
 1060 0302 0DDD     		ble	.L85
 433:..\SEGGER/SEGGER_RTT_printf.c ****     //
 434:..\SEGGER/SEGGER_RTT_printf.c ****     // Write remaining data, if any
 435:..\SEGGER/SEGGER_RTT_printf.c ****     //
 436:..\SEGGER/SEGGER_RTT_printf.c ****     if (BufferDesc.Cnt != 0u) {
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 28


 1061              		.loc 1 436 0
 1062 0304 BB6D     		ldr	r3, [r7, #88]
 1063 0306 002B     		cmp	r3, #0
 1064 0308 06D0     		beq	.L86
 437:..\SEGGER/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 1065              		.loc 1 437 0
 1066 030a BA6D     		ldr	r2, [r7, #88]
 1067 030c 07F11003 		add	r3, r7, #16
 1068 0310 1946     		mov	r1, r3
 1069 0312 F868     		ldr	r0, [r7, #12]
 1070 0314 FFF7FEFF 		bl	SEGGER_RTT_Write
 1071              	.L86:
 438:..\SEGGER/SEGGER_RTT_printf.c ****     }
 439:..\SEGGER/SEGGER_RTT_printf.c ****     BufferDesc.ReturnValue += (int)BufferDesc.Cnt;
 1072              		.loc 1 439 0
 1073 0318 FB6D     		ldr	r3, [r7, #92]
 1074 031a BA6D     		ldr	r2, [r7, #88]
 1075 031c 1344     		add	r3, r3, r2
 1076 031e FB65     		str	r3, [r7, #92]
 1077              	.L85:
 440:..\SEGGER/SEGGER_RTT_printf.c ****   }
 441:..\SEGGER/SEGGER_RTT_printf.c ****   return BufferDesc.ReturnValue;
 1078              		.loc 1 441 0
 1079 0320 FB6D     		ldr	r3, [r7, #92]
 442:..\SEGGER/SEGGER_RTT_printf.c **** }
 1080              		.loc 1 442 0
 1081 0322 1846     		mov	r0, r3
 1082 0324 8037     		adds	r7, r7, #128
 1083              		.cfi_def_cfa_offset 8
 1084 0326 BD46     		mov	sp, r7
 1085              		.cfi_def_cfa_register 13
 1086              		@ sp needed
 1087 0328 80BD     		pop	{r7, pc}
 1088              		.cfi_endproc
 1089              	.LFE3:
 1090              		.size	SEGGER_RTT_vprintf, .-SEGGER_RTT_vprintf
 1091 032a 00BF     		.section	.text.SEGGER_RTT_printf,"ax",%progbits
 1092              		.align	2
 1093              		.global	SEGGER_RTT_printf
 1094              		.thumb
 1095              		.thumb_func
 1096              		.type	SEGGER_RTT_printf, %function
 1097              	SEGGER_RTT_printf:
 1098              	.LFB4:
 443:..\SEGGER/SEGGER_RTT_printf.c **** 
 444:..\SEGGER/SEGGER_RTT_printf.c **** /*********************************************************************
 445:..\SEGGER/SEGGER_RTT_printf.c **** *
 446:..\SEGGER/SEGGER_RTT_printf.c **** *       SEGGER_RTT_printf
 447:..\SEGGER/SEGGER_RTT_printf.c **** *
 448:..\SEGGER/SEGGER_RTT_printf.c **** *  Function description
 449:..\SEGGER/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 450:..\SEGGER/SEGGER_RTT_printf.c **** *    This data is read by the host.
 451:..\SEGGER/SEGGER_RTT_printf.c **** *
 452:..\SEGGER/SEGGER_RTT_printf.c **** *  Parameters
 453:..\SEGGER/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 454:..\SEGGER/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string, followed by the arguments for conversion
 455:..\SEGGER/SEGGER_RTT_printf.c **** *
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 29


 456:..\SEGGER/SEGGER_RTT_printf.c **** *  Return values
 457:..\SEGGER/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 458:..\SEGGER/SEGGER_RTT_printf.c **** *     < 0:  Error
 459:..\SEGGER/SEGGER_RTT_printf.c **** *
 460:..\SEGGER/SEGGER_RTT_printf.c **** *  Notes
 461:..\SEGGER/SEGGER_RTT_printf.c **** *    (1) Conversion specifications have following syntax:
 462:..\SEGGER/SEGGER_RTT_printf.c **** *          %[flags][FieldWidth][.Precision]ConversionSpecifier
 463:..\SEGGER/SEGGER_RTT_printf.c **** *    (2) Supported flags:
 464:..\SEGGER/SEGGER_RTT_printf.c **** *          -: Left justify within the field width
 465:..\SEGGER/SEGGER_RTT_printf.c **** *          +: Always print sign extension for signed conversions
 466:..\SEGGER/SEGGER_RTT_printf.c **** *          0: Pad with 0 instead of spaces. Ignored when using '-'-flag or precision
 467:..\SEGGER/SEGGER_RTT_printf.c **** *        Supported conversion specifiers:
 468:..\SEGGER/SEGGER_RTT_printf.c **** *          c: Print the argument as one char
 469:..\SEGGER/SEGGER_RTT_printf.c **** *          d: Print the argument as a signed integer
 470:..\SEGGER/SEGGER_RTT_printf.c **** *          u: Print the argument as an unsigned integer
 471:..\SEGGER/SEGGER_RTT_printf.c **** *          x: Print the argument as an hexadecimal integer
 472:..\SEGGER/SEGGER_RTT_printf.c **** *          s: Print the string pointed to by the argument
 473:..\SEGGER/SEGGER_RTT_printf.c **** *          p: Print the argument as an 8-digit hexadecimal integer. (Argument shall be a pointer to
 474:..\SEGGER/SEGGER_RTT_printf.c **** */
 475:..\SEGGER/SEGGER_RTT_printf.c **** int SEGGER_RTT_printf(unsigned BufferIndex, const char * sFormat, ...) {
 1099              		.loc 1 475 0
 1100              		.cfi_startproc
 1101              		@ args = 4, pretend = 12, frame = 16
 1102              		@ frame_needed = 1, uses_anonymous_args = 1
 1103 0000 0EB4     		push	{r1, r2, r3}
 1104              		.cfi_def_cfa_offset 12
 1105              		.cfi_offset 1, -12
 1106              		.cfi_offset 2, -8
 1107              		.cfi_offset 3, -4
 1108 0002 80B5     		push	{r7, lr}
 1109              		.cfi_def_cfa_offset 20
 1110              		.cfi_offset 7, -20
 1111              		.cfi_offset 14, -16
 1112 0004 85B0     		sub	sp, sp, #20
 1113              		.cfi_def_cfa_offset 40
 1114 0006 00AF     		add	r7, sp, #0
 1115              		.cfi_def_cfa_register 7
 1116 0008 7860     		str	r0, [r7, #4]
 476:..\SEGGER/SEGGER_RTT_printf.c ****   int r;
 477:..\SEGGER/SEGGER_RTT_printf.c ****   va_list ParamList;
 478:..\SEGGER/SEGGER_RTT_printf.c **** 
 479:..\SEGGER/SEGGER_RTT_printf.c ****   va_start(ParamList, sFormat);
 1117              		.loc 1 479 0
 1118 000a 07F12003 		add	r3, r7, #32
 1119 000e BB60     		str	r3, [r7, #8]
 480:..\SEGGER/SEGGER_RTT_printf.c ****   r = SEGGER_RTT_vprintf(BufferIndex, sFormat, &ParamList);
 1120              		.loc 1 480 0
 1121 0010 07F10803 		add	r3, r7, #8
 1122 0014 1A46     		mov	r2, r3
 1123 0016 F969     		ldr	r1, [r7, #28]
 1124 0018 7868     		ldr	r0, [r7, #4]
 1125 001a FFF7FEFF 		bl	SEGGER_RTT_vprintf
 1126 001e F860     		str	r0, [r7, #12]
 481:..\SEGGER/SEGGER_RTT_printf.c ****   va_end(ParamList);
 482:..\SEGGER/SEGGER_RTT_printf.c ****   return r;
 1127              		.loc 1 482 0
 1128 0020 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 30


 483:..\SEGGER/SEGGER_RTT_printf.c **** }
 1129              		.loc 1 483 0
 1130 0022 1846     		mov	r0, r3
 1131 0024 1437     		adds	r7, r7, #20
 1132              		.cfi_def_cfa_offset 20
 1133 0026 BD46     		mov	sp, r7
 1134              		.cfi_def_cfa_register 13
 1135              		@ sp needed
 1136 0028 BDE88040 		pop	{r7, lr}
 1137              		.cfi_restore 14
 1138              		.cfi_restore 7
 1139              		.cfi_def_cfa_offset 12
 1140 002c 03B0     		add	sp, sp, #12
 1141              		.cfi_restore 3
 1142              		.cfi_restore 2
 1143              		.cfi_restore 1
 1144              		.cfi_def_cfa_offset 0
 1145 002e 7047     		bx	lr
 1146              		.cfi_endproc
 1147              	.LFE4:
 1148              		.size	SEGGER_RTT_printf, .-SEGGER_RTT_printf
 1149              		.section	.rodata
 1150              		.align	2
 1151              		.type	_aV2C.4939, %object
 1152              		.size	_aV2C.4939, 16
 1153              	_aV2C.4939:
 1154 0000 30       		.byte	48
 1155 0001 31       		.byte	49
 1156 0002 32       		.byte	50
 1157 0003 33       		.byte	51
 1158 0004 34       		.byte	52
 1159 0005 35       		.byte	53
 1160 0006 36       		.byte	54
 1161 0007 37       		.byte	55
 1162 0008 38       		.byte	56
 1163 0009 39       		.byte	57
 1164 000a 41       		.byte	65
 1165 000b 42       		.byte	66
 1166 000c 43       		.byte	67
 1167 000d 44       		.byte	68
 1168 000e 45       		.byte	69
 1169 000f 46       		.byte	70
 1170              		.text
 1171              	.Letext0:
 1172              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1173              		.file 3 "<built-in>"
 1174              		.section	.debug_info,"",%progbits
 1175              	.Ldebug_info0:
 1176 0000 ED030000 		.4byte	0x3ed
 1177 0004 0400     		.2byte	0x4
 1178 0006 00000000 		.4byte	.Ldebug_abbrev0
 1179 000a 04       		.byte	0x4
 1180 000b 01       		.uleb128 0x1
 1181 000c 00000000 		.4byte	.LASF37
 1182 0010 0C       		.byte	0xc
 1183 0011 9F020000 		.4byte	.LASF38
 1184 0015 1D010000 		.4byte	.LASF39
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 31


 1185 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1186 001d 00000000 		.4byte	0
 1187 0021 00000000 		.4byte	.Ldebug_line0
 1188 0025 02       		.uleb128 0x2
 1189 0026 04       		.byte	0x4
 1190 0027 07       		.byte	0x7
 1191 0028 33020000 		.4byte	.LASF0
 1192 002c 03       		.uleb128 0x3
 1193 002d 04       		.byte	0x4
 1194 002e 05       		.byte	0x5
 1195 002f 696E7400 		.ascii	"int\000"
 1196 0033 02       		.uleb128 0x2
 1197 0034 08       		.byte	0x8
 1198 0035 05       		.byte	0x5
 1199 0036 91020000 		.4byte	.LASF1
 1200 003a 02       		.uleb128 0x2
 1201 003b 08       		.byte	0x8
 1202 003c 04       		.byte	0x4
 1203 003d FD020000 		.4byte	.LASF2
 1204 0041 02       		.uleb128 0x2
 1205 0042 01       		.byte	0x1
 1206 0043 06       		.byte	0x6
 1207 0044 14030000 		.4byte	.LASF3
 1208 0048 02       		.uleb128 0x2
 1209 0049 01       		.byte	0x1
 1210 004a 08       		.byte	0x8
 1211 004b EA000000 		.4byte	.LASF4
 1212 004f 02       		.uleb128 0x2
 1213 0050 02       		.byte	0x2
 1214 0051 05       		.byte	0x5
 1215 0052 C8020000 		.4byte	.LASF5
 1216 0056 02       		.uleb128 0x2
 1217 0057 02       		.byte	0x2
 1218 0058 07       		.byte	0x7
 1219 0059 0A010000 		.4byte	.LASF6
 1220 005d 02       		.uleb128 0x2
 1221 005e 04       		.byte	0x4
 1222 005f 05       		.byte	0x5
 1223 0060 F4020000 		.4byte	.LASF7
 1224 0064 02       		.uleb128 0x2
 1225 0065 04       		.byte	0x4
 1226 0066 07       		.byte	0x7
 1227 0067 F8000000 		.4byte	.LASF8
 1228 006b 02       		.uleb128 0x2
 1229 006c 08       		.byte	0x8
 1230 006d 07       		.byte	0x7
 1231 006e 47020000 		.4byte	.LASF9
 1232 0072 02       		.uleb128 0x2
 1233 0073 04       		.byte	0x4
 1234 0074 07       		.byte	0x7
 1235 0075 7E020000 		.4byte	.LASF10
 1236 0079 04       		.uleb128 0x4
 1237 007a 04       		.byte	0x4
 1238 007b 05       		.uleb128 0x5
 1239 007c 04       		.byte	0x4
 1240 007d 81000000 		.4byte	0x81
 1241 0081 02       		.uleb128 0x2
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 32


 1242 0082 01       		.byte	0x1
 1243 0083 08       		.byte	0x8
 1244 0084 BD020000 		.4byte	.LASF11
 1245 0088 05       		.uleb128 0x5
 1246 0089 04       		.byte	0x4
 1247 008a 8E000000 		.4byte	0x8e
 1248 008e 06       		.uleb128 0x6
 1249 008f 81000000 		.4byte	0x81
 1250 0093 07       		.uleb128 0x7
 1251 0094 01020000 		.4byte	.LASF12
 1252 0098 02       		.byte	0x2
 1253 0099 28       		.byte	0x28
 1254 009a 9E000000 		.4byte	0x9e
 1255 009e 08       		.uleb128 0x8
 1256 009f 87020000 		.4byte	.LASF40
 1257 00a3 04       		.byte	0x4
 1258 00a4 03       		.byte	0x3
 1259 00a5 00       		.byte	0
 1260 00a6 B5000000 		.4byte	0xb5
 1261 00aa 09       		.uleb128 0x9
 1262 00ab 5E020000 		.4byte	.LASF41
 1263 00af 79000000 		.4byte	0x79
 1264 00b3 00       		.byte	0
 1265 00b4 00       		.byte	0
 1266 00b5 07       		.uleb128 0x7
 1267 00b6 D6000000 		.4byte	.LASF13
 1268 00ba 02       		.byte	0x2
 1269 00bb 62       		.byte	0x62
 1270 00bc 93000000 		.4byte	0x93
 1271 00c0 0A       		.uleb128 0xa
 1272 00c1 14       		.byte	0x14
 1273 00c2 01       		.byte	0x1
 1274 00c3 40       		.byte	0x40
 1275 00c4 05010000 		.4byte	0x105
 1276 00c8 0B       		.uleb128 0xb
 1277 00c9 6B020000 		.4byte	.LASF14
 1278 00cd 01       		.byte	0x1
 1279 00ce 41       		.byte	0x41
 1280 00cf 7B000000 		.4byte	0x7b
 1281 00d3 00       		.byte	0
 1282 00d4 0B       		.uleb128 0xb
 1283 00d5 C0000000 		.4byte	.LASF15
 1284 00d9 01       		.byte	0x1
 1285 00da 42       		.byte	0x42
 1286 00db 25000000 		.4byte	0x25
 1287 00df 04       		.byte	0x4
 1288 00e0 0C       		.uleb128 0xc
 1289 00e1 436E7400 		.ascii	"Cnt\000"
 1290 00e5 01       		.byte	0x1
 1291 00e6 43       		.byte	0x43
 1292 00e7 25000000 		.4byte	0x25
 1293 00eb 08       		.byte	0x8
 1294 00ec 0B       		.uleb128 0xb
 1295 00ed B4000000 		.4byte	.LASF16
 1296 00f1 01       		.byte	0x1
 1297 00f2 45       		.byte	0x45
 1298 00f3 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 33


 1299 00f7 0C       		.byte	0xc
 1300 00f8 0B       		.uleb128 0xb
 1301 00f9 10020000 		.4byte	.LASF17
 1302 00fd 01       		.byte	0x1
 1303 00fe 47       		.byte	0x47
 1304 00ff 25000000 		.4byte	0x25
 1305 0103 10       		.byte	0x10
 1306 0104 00       		.byte	0
 1307 0105 07       		.uleb128 0x7
 1308 0106 8E000000 		.4byte	.LASF18
 1309 010a 01       		.byte	0x1
 1310 010b 48       		.byte	0x48
 1311 010c C0000000 		.4byte	0xc0
 1312 0110 0D       		.uleb128 0xd
 1313 0111 CB000000 		.4byte	.LASF19
 1314 0115 01       		.byte	0x1
 1315 0116 5B       		.byte	0x5b
 1316 0117 00000000 		.4byte	.LFB0
 1317 011b 7C000000 		.4byte	.LFE0-.LFB0
 1318 011f 01       		.uleb128 0x1
 1319 0120 9C       		.byte	0x9c
 1320 0121 4C010000 		.4byte	0x14c
 1321 0125 0E       		.uleb128 0xe
 1322 0126 7000     		.ascii	"p\000"
 1323 0128 01       		.byte	0x1
 1324 0129 5B       		.byte	0x5b
 1325 012a 4C010000 		.4byte	0x14c
 1326 012e 02       		.uleb128 0x2
 1327 012f 91       		.byte	0x91
 1328 0130 6C       		.sleb128 -20
 1329 0131 0E       		.uleb128 0xe
 1330 0132 6300     		.ascii	"c\000"
 1331 0134 01       		.byte	0x1
 1332 0135 5B       		.byte	0x5b
 1333 0136 81000000 		.4byte	0x81
 1334 013a 02       		.uleb128 0x2
 1335 013b 91       		.byte	0x91
 1336 013c 6B       		.sleb128 -21
 1337 013d 0F       		.uleb128 0xf
 1338 013e 436E7400 		.ascii	"Cnt\000"
 1339 0142 01       		.byte	0x1
 1340 0143 5C       		.byte	0x5c
 1341 0144 25000000 		.4byte	0x25
 1342 0148 02       		.uleb128 0x2
 1343 0149 91       		.byte	0x91
 1344 014a 74       		.sleb128 -12
 1345 014b 00       		.byte	0
 1346 014c 05       		.uleb128 0x5
 1347 014d 04       		.byte	0x4
 1348 014e 05010000 		.4byte	0x105
 1349 0152 0D       		.uleb128 0xd
 1350 0153 1F020000 		.4byte	.LASF20
 1351 0157 01       		.byte	0x1
 1352 0158 74       		.byte	0x74
 1353 0159 00000000 		.4byte	.LFB1
 1354 015d 58010000 		.4byte	.LFE1-.LFB1
 1355 0161 01       		.uleb128 0x1
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 34


 1356 0162 9C       		.byte	0x9c
 1357 0163 0F020000 		.4byte	0x20f
 1358 0167 10       		.uleb128 0x10
 1359 0168 DE000000 		.4byte	.LASF21
 1360 016c 01       		.byte	0x1
 1361 016d 74       		.byte	0x74
 1362 016e 4C010000 		.4byte	0x14c
 1363 0172 02       		.uleb128 0x2
 1364 0173 91       		.byte	0x91
 1365 0174 5C       		.sleb128 -36
 1366 0175 0E       		.uleb128 0xe
 1367 0176 7600     		.ascii	"v\000"
 1368 0178 01       		.byte	0x1
 1369 0179 74       		.byte	0x74
 1370 017a 25000000 		.4byte	0x25
 1371 017e 02       		.uleb128 0x2
 1372 017f 91       		.byte	0x91
 1373 0180 58       		.sleb128 -40
 1374 0181 10       		.uleb128 0x10
 1375 0182 2E020000 		.4byte	.LASF22
 1376 0186 01       		.byte	0x1
 1377 0187 74       		.byte	0x74
 1378 0188 25000000 		.4byte	0x25
 1379 018c 02       		.uleb128 0x2
 1380 018d 91       		.byte	0x91
 1381 018e 54       		.sleb128 -44
 1382 018f 10       		.uleb128 0x10
 1383 0190 2B030000 		.4byte	.LASF23
 1384 0194 01       		.byte	0x1
 1385 0195 74       		.byte	0x74
 1386 0196 25000000 		.4byte	0x25
 1387 019a 02       		.uleb128 0x2
 1388 019b 91       		.byte	0x91
 1389 019c 50       		.sleb128 -48
 1390 019d 10       		.uleb128 0x10
 1391 019e 73020000 		.4byte	.LASF24
 1392 01a2 01       		.byte	0x1
 1393 01a3 74       		.byte	0x74
 1394 01a4 25000000 		.4byte	0x25
 1395 01a8 02       		.uleb128 0x2
 1396 01a9 91       		.byte	0x91
 1397 01aa 00       		.sleb128 0
 1398 01ab 10       		.uleb128 0x10
 1399 01ac E8020000 		.4byte	.LASF25
 1400 01b0 01       		.byte	0x1
 1401 01b1 74       		.byte	0x74
 1402 01b2 25000000 		.4byte	0x25
 1403 01b6 02       		.uleb128 0x2
 1404 01b7 91       		.byte	0x91
 1405 01b8 04       		.sleb128 4
 1406 01b9 11       		.uleb128 0x11
 1407 01ba FB010000 		.4byte	.LASF26
 1408 01be 01       		.byte	0x1
 1409 01bf 75       		.byte	0x75
 1410 01c0 1F020000 		.4byte	0x21f
 1411 01c4 05       		.uleb128 0x5
 1412 01c5 03       		.byte	0x3
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 35


 1413 01c6 00000000 		.4byte	_aV2C.4939
 1414 01ca 0F       		.uleb128 0xf
 1415 01cb 44697600 		.ascii	"Div\000"
 1416 01cf 01       		.byte	0x1
 1417 01d0 76       		.byte	0x76
 1418 01d1 25000000 		.4byte	0x25
 1419 01d5 02       		.uleb128 0x2
 1420 01d6 91       		.byte	0x91
 1421 01d7 64       		.sleb128 -28
 1422 01d8 11       		.uleb128 0x11
 1423 01d9 C2020000 		.4byte	.LASF27
 1424 01dd 01       		.byte	0x1
 1425 01de 77       		.byte	0x77
 1426 01df 25000000 		.4byte	0x25
 1427 01e3 02       		.uleb128 0x2
 1428 01e4 91       		.byte	0x91
 1429 01e5 74       		.sleb128 -12
 1430 01e6 11       		.uleb128 0x11
 1431 01e7 40020000 		.4byte	.LASF28
 1432 01eb 01       		.byte	0x1
 1433 01ec 78       		.byte	0x78
 1434 01ed 25000000 		.4byte	0x25
 1435 01f1 02       		.uleb128 0x2
 1436 01f2 91       		.byte	0x91
 1437 01f3 70       		.sleb128 -16
 1438 01f4 11       		.uleb128 0x11
 1439 01f5 A5000000 		.4byte	.LASF29
 1440 01f9 01       		.byte	0x1
 1441 01fa 79       		.byte	0x79
 1442 01fb 25000000 		.4byte	0x25
 1443 01ff 02       		.uleb128 0x2
 1444 0200 91       		.byte	0x91
 1445 0201 6C       		.sleb128 -20
 1446 0202 0F       		.uleb128 0xf
 1447 0203 6300     		.ascii	"c\000"
 1448 0205 01       		.byte	0x1
 1449 0206 7A       		.byte	0x7a
 1450 0207 81000000 		.4byte	0x81
 1451 020b 02       		.uleb128 0x2
 1452 020c 91       		.byte	0x91
 1453 020d 6B       		.sleb128 -21
 1454 020e 00       		.byte	0
 1455 020f 12       		.uleb128 0x12
 1456 0210 8E000000 		.4byte	0x8e
 1457 0214 1F020000 		.4byte	0x21f
 1458 0218 13       		.uleb128 0x13
 1459 0219 72000000 		.4byte	0x72
 1460 021d 0F       		.byte	0xf
 1461 021e 00       		.byte	0
 1462 021f 06       		.uleb128 0x6
 1463 0220 0F020000 		.4byte	0x20f
 1464 0224 0D       		.uleb128 0xd
 1465 0225 DE010000 		.4byte	.LASF30
 1466 0229 01       		.byte	0x1
 1467 022a CE       		.byte	0xce
 1468 022b 00000000 		.4byte	.LFB2
 1469 022f 4E010000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 36


 1470 0233 01       		.uleb128 0x1
 1471 0234 9C       		.byte	0x9c
 1472 0235 A8020000 		.4byte	0x2a8
 1473 0239 10       		.uleb128 0x10
 1474 023a DE000000 		.4byte	.LASF21
 1475 023e 01       		.byte	0x1
 1476 023f CE       		.byte	0xce
 1477 0240 4C010000 		.4byte	0x14c
 1478 0244 02       		.uleb128 0x2
 1479 0245 91       		.byte	0x91
 1480 0246 6C       		.sleb128 -20
 1481 0247 0E       		.uleb128 0xe
 1482 0248 7600     		.ascii	"v\000"
 1483 024a 01       		.byte	0x1
 1484 024b CE       		.byte	0xce
 1485 024c 2C000000 		.4byte	0x2c
 1486 0250 02       		.uleb128 0x2
 1487 0251 91       		.byte	0x91
 1488 0252 68       		.sleb128 -24
 1489 0253 10       		.uleb128 0x10
 1490 0254 2E020000 		.4byte	.LASF22
 1491 0258 01       		.byte	0x1
 1492 0259 CE       		.byte	0xce
 1493 025a 25000000 		.4byte	0x25
 1494 025e 02       		.uleb128 0x2
 1495 025f 91       		.byte	0x91
 1496 0260 64       		.sleb128 -28
 1497 0261 10       		.uleb128 0x10
 1498 0262 2B030000 		.4byte	.LASF23
 1499 0266 01       		.byte	0x1
 1500 0267 CE       		.byte	0xce
 1501 0268 25000000 		.4byte	0x25
 1502 026c 02       		.uleb128 0x2
 1503 026d 91       		.byte	0x91
 1504 026e 60       		.sleb128 -32
 1505 026f 10       		.uleb128 0x10
 1506 0270 73020000 		.4byte	.LASF24
 1507 0274 01       		.byte	0x1
 1508 0275 CE       		.byte	0xce
 1509 0276 25000000 		.4byte	0x25
 1510 027a 02       		.uleb128 0x2
 1511 027b 91       		.byte	0x91
 1512 027c 00       		.sleb128 0
 1513 027d 10       		.uleb128 0x10
 1514 027e E8020000 		.4byte	.LASF25
 1515 0282 01       		.byte	0x1
 1516 0283 CE       		.byte	0xce
 1517 0284 25000000 		.4byte	0x25
 1518 0288 02       		.uleb128 0x2
 1519 0289 91       		.byte	0x91
 1520 028a 04       		.sleb128 4
 1521 028b 11       		.uleb128 0x11
 1522 028c A5000000 		.4byte	.LASF29
 1523 0290 01       		.byte	0x1
 1524 0291 CF       		.byte	0xcf
 1525 0292 25000000 		.4byte	0x25
 1526 0296 02       		.uleb128 0x2
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 37


 1527 0297 91       		.byte	0x91
 1528 0298 74       		.sleb128 -12
 1529 0299 11       		.uleb128 0x11
 1530 029a 40020000 		.4byte	.LASF28
 1531 029e 01       		.byte	0x1
 1532 029f D0       		.byte	0xd0
 1533 02a0 2C000000 		.4byte	0x2c
 1534 02a4 02       		.uleb128 0x2
 1535 02a5 91       		.byte	0x91
 1536 02a6 70       		.sleb128 -16
 1537 02a7 00       		.byte	0
 1538 02a8 14       		.uleb128 0x14
 1539 02a9 E8010000 		.4byte	.LASF42
 1540 02ad 01       		.byte	0x1
 1541 02ae 2D01     		.2byte	0x12d
 1542 02b0 2C000000 		.4byte	0x2c
 1543 02b4 00000000 		.4byte	.LFB3
 1544 02b8 2A030000 		.4byte	.LFE3-.LFB3
 1545 02bc 01       		.uleb128 0x1
 1546 02bd 9C       		.byte	0x9c
 1547 02be 88030000 		.4byte	0x388
 1548 02c2 15       		.uleb128 0x15
 1549 02c3 DC020000 		.4byte	.LASF31
 1550 02c7 01       		.byte	0x1
 1551 02c8 2D01     		.2byte	0x12d
 1552 02ca 25000000 		.4byte	0x25
 1553 02ce 03       		.uleb128 0x3
 1554 02cf 91       		.byte	0x91
 1555 02d0 847F     		.sleb128 -124
 1556 02d2 15       		.uleb128 0x15
 1557 02d3 63020000 		.4byte	.LASF32
 1558 02d7 01       		.byte	0x1
 1559 02d8 2D01     		.2byte	0x12d
 1560 02da 88000000 		.4byte	0x88
 1561 02de 03       		.uleb128 0x3
 1562 02df 91       		.byte	0x91
 1563 02e0 807F     		.sleb128 -128
 1564 02e2 15       		.uleb128 0x15
 1565 02e3 20030000 		.4byte	.LASF33
 1566 02e7 01       		.byte	0x1
 1567 02e8 2D01     		.2byte	0x12d
 1568 02ea 88030000 		.4byte	0x388
 1569 02ee 03       		.uleb128 0x3
 1570 02ef 91       		.byte	0x91
 1571 02f0 FC7E     		.sleb128 -132
 1572 02f2 16       		.uleb128 0x16
 1573 02f3 6300     		.ascii	"c\000"
 1574 02f5 01       		.byte	0x1
 1575 02f6 2E01     		.2byte	0x12e
 1576 02f8 81000000 		.4byte	0x81
 1577 02fc 02       		.uleb128 0x2
 1578 02fd 91       		.byte	0x91
 1579 02fe 77       		.sleb128 -9
 1580 02ff 17       		.uleb128 0x17
 1581 0300 09030000 		.4byte	.LASF34
 1582 0304 01       		.byte	0x1
 1583 0305 2F01     		.2byte	0x12f
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 38


 1584 0307 05010000 		.4byte	0x105
 1585 030b 02       		.uleb128 0x2
 1586 030c 91       		.byte	0x91
 1587 030d 48       		.sleb128 -56
 1588 030e 16       		.uleb128 0x16
 1589 030f 7600     		.ascii	"v\000"
 1590 0311 01       		.byte	0x1
 1591 0312 3001     		.2byte	0x130
 1592 0314 2C000000 		.4byte	0x2c
 1593 0318 02       		.uleb128 0x2
 1594 0319 91       		.byte	0x91
 1595 031a 70       		.sleb128 -16
 1596 031b 17       		.uleb128 0x17
 1597 031c 2B030000 		.4byte	.LASF23
 1598 0320 01       		.byte	0x1
 1599 0321 3101     		.2byte	0x131
 1600 0323 25000000 		.4byte	0x25
 1601 0327 02       		.uleb128 0x2
 1602 0328 91       		.byte	0x91
 1603 0329 6C       		.sleb128 -20
 1604 032a 17       		.uleb128 0x17
 1605 032b E8020000 		.4byte	.LASF25
 1606 032f 01       		.byte	0x1
 1607 0330 3201     		.2byte	0x132
 1608 0332 25000000 		.4byte	0x25
 1609 0336 02       		.uleb128 0x2
 1610 0337 91       		.byte	0x91
 1611 0338 68       		.sleb128 -24
 1612 0339 17       		.uleb128 0x17
 1613 033a 73020000 		.4byte	.LASF24
 1614 033e 01       		.byte	0x1
 1615 033f 3301     		.2byte	0x133
 1616 0341 25000000 		.4byte	0x25
 1617 0345 02       		.uleb128 0x2
 1618 0346 91       		.byte	0x91
 1619 0347 64       		.sleb128 -28
 1620 0348 17       		.uleb128 0x17
 1621 0349 AB000000 		.4byte	.LASF35
 1622 034d 01       		.byte	0x1
 1623 034e 3401     		.2byte	0x134
 1624 0350 8E030000 		.4byte	0x38e
 1625 0354 03       		.uleb128 0x3
 1626 0355 91       		.byte	0x91
 1627 0356 887F     		.sleb128 -120
 1628 0358 18       		.uleb128 0x18
 1629 0359 CE010000 		.4byte	.LBB2
 1630 035d 26000000 		.4byte	.LBE2-.LBB2
 1631 0361 74030000 		.4byte	0x374
 1632 0365 16       		.uleb128 0x16
 1633 0366 633000   		.ascii	"c0\000"
 1634 0369 01       		.byte	0x1
 1635 036a 8001     		.2byte	0x180
 1636 036c 81000000 		.4byte	0x81
 1637 0370 02       		.uleb128 0x2
 1638 0371 91       		.byte	0x91
 1639 0372 5F       		.sleb128 -33
 1640 0373 00       		.byte	0
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 39


 1641 0374 19       		.uleb128 0x19
 1642 0375 00000000 		.4byte	.Ldebug_ranges0+0
 1643 0379 16       		.uleb128 0x16
 1644 037a 7300     		.ascii	"s\000"
 1645 037c 01       		.byte	0x1
 1646 037d 9501     		.2byte	0x195
 1647 037f 88000000 		.4byte	0x88
 1648 0383 02       		.uleb128 0x2
 1649 0384 91       		.byte	0x91
 1650 0385 60       		.sleb128 -32
 1651 0386 00       		.byte	0
 1652 0387 00       		.byte	0
 1653 0388 05       		.uleb128 0x5
 1654 0389 04       		.byte	0x4
 1655 038a B5000000 		.4byte	0xb5
 1656 038e 12       		.uleb128 0x12
 1657 038f 81000000 		.4byte	0x81
 1658 0393 9E030000 		.4byte	0x39e
 1659 0397 13       		.uleb128 0x13
 1660 0398 72000000 		.4byte	0x72
 1661 039c 3F       		.byte	0x3f
 1662 039d 00       		.byte	0
 1663 039e 1A       		.uleb128 0x1a
 1664 039f CC010000 		.4byte	.LASF43
 1665 03a3 01       		.byte	0x1
 1666 03a4 DB01     		.2byte	0x1db
 1667 03a6 2C000000 		.4byte	0x2c
 1668 03aa 00000000 		.4byte	.LFB4
 1669 03ae 30000000 		.4byte	.LFE4-.LFB4
 1670 03b2 01       		.uleb128 0x1
 1671 03b3 9C       		.byte	0x9c
 1672 03b4 15       		.uleb128 0x15
 1673 03b5 DC020000 		.4byte	.LASF31
 1674 03b9 01       		.byte	0x1
 1675 03ba DB01     		.2byte	0x1db
 1676 03bc 25000000 		.4byte	0x25
 1677 03c0 02       		.uleb128 0x2
 1678 03c1 91       		.byte	0x91
 1679 03c2 5C       		.sleb128 -36
 1680 03c3 15       		.uleb128 0x15
 1681 03c4 63020000 		.4byte	.LASF32
 1682 03c8 01       		.byte	0x1
 1683 03c9 DB01     		.2byte	0x1db
 1684 03cb 88000000 		.4byte	0x88
 1685 03cf 02       		.uleb128 0x2
 1686 03d0 91       		.byte	0x91
 1687 03d1 74       		.sleb128 -12
 1688 03d2 1B       		.uleb128 0x1b
 1689 03d3 16       		.uleb128 0x16
 1690 03d4 7200     		.ascii	"r\000"
 1691 03d6 01       		.byte	0x1
 1692 03d7 DC01     		.2byte	0x1dc
 1693 03d9 2C000000 		.4byte	0x2c
 1694 03dd 02       		.uleb128 0x2
 1695 03de 91       		.byte	0x91
 1696 03df 64       		.sleb128 -28
 1697 03e0 17       		.uleb128 0x17
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 40


 1698 03e1 D2020000 		.4byte	.LASF36
 1699 03e5 01       		.byte	0x1
 1700 03e6 DD01     		.2byte	0x1dd
 1701 03e8 B5000000 		.4byte	0xb5
 1702 03ec 02       		.uleb128 0x2
 1703 03ed 91       		.byte	0x91
 1704 03ee 60       		.sleb128 -32
 1705 03ef 00       		.byte	0
 1706 03f0 00       		.byte	0
 1707              		.section	.debug_abbrev,"",%progbits
 1708              	.Ldebug_abbrev0:
 1709 0000 01       		.uleb128 0x1
 1710 0001 11       		.uleb128 0x11
 1711 0002 01       		.byte	0x1
 1712 0003 25       		.uleb128 0x25
 1713 0004 0E       		.uleb128 0xe
 1714 0005 13       		.uleb128 0x13
 1715 0006 0B       		.uleb128 0xb
 1716 0007 03       		.uleb128 0x3
 1717 0008 0E       		.uleb128 0xe
 1718 0009 1B       		.uleb128 0x1b
 1719 000a 0E       		.uleb128 0xe
 1720 000b 55       		.uleb128 0x55
 1721 000c 17       		.uleb128 0x17
 1722 000d 11       		.uleb128 0x11
 1723 000e 01       		.uleb128 0x1
 1724 000f 10       		.uleb128 0x10
 1725 0010 17       		.uleb128 0x17
 1726 0011 00       		.byte	0
 1727 0012 00       		.byte	0
 1728 0013 02       		.uleb128 0x2
 1729 0014 24       		.uleb128 0x24
 1730 0015 00       		.byte	0
 1731 0016 0B       		.uleb128 0xb
 1732 0017 0B       		.uleb128 0xb
 1733 0018 3E       		.uleb128 0x3e
 1734 0019 0B       		.uleb128 0xb
 1735 001a 03       		.uleb128 0x3
 1736 001b 0E       		.uleb128 0xe
 1737 001c 00       		.byte	0
 1738 001d 00       		.byte	0
 1739 001e 03       		.uleb128 0x3
 1740 001f 24       		.uleb128 0x24
 1741 0020 00       		.byte	0
 1742 0021 0B       		.uleb128 0xb
 1743 0022 0B       		.uleb128 0xb
 1744 0023 3E       		.uleb128 0x3e
 1745 0024 0B       		.uleb128 0xb
 1746 0025 03       		.uleb128 0x3
 1747 0026 08       		.uleb128 0x8
 1748 0027 00       		.byte	0
 1749 0028 00       		.byte	0
 1750 0029 04       		.uleb128 0x4
 1751 002a 0F       		.uleb128 0xf
 1752 002b 00       		.byte	0
 1753 002c 0B       		.uleb128 0xb
 1754 002d 0B       		.uleb128 0xb
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 41


 1755 002e 00       		.byte	0
 1756 002f 00       		.byte	0
 1757 0030 05       		.uleb128 0x5
 1758 0031 0F       		.uleb128 0xf
 1759 0032 00       		.byte	0
 1760 0033 0B       		.uleb128 0xb
 1761 0034 0B       		.uleb128 0xb
 1762 0035 49       		.uleb128 0x49
 1763 0036 13       		.uleb128 0x13
 1764 0037 00       		.byte	0
 1765 0038 00       		.byte	0
 1766 0039 06       		.uleb128 0x6
 1767 003a 26       		.uleb128 0x26
 1768 003b 00       		.byte	0
 1769 003c 49       		.uleb128 0x49
 1770 003d 13       		.uleb128 0x13
 1771 003e 00       		.byte	0
 1772 003f 00       		.byte	0
 1773 0040 07       		.uleb128 0x7
 1774 0041 16       		.uleb128 0x16
 1775 0042 00       		.byte	0
 1776 0043 03       		.uleb128 0x3
 1777 0044 0E       		.uleb128 0xe
 1778 0045 3A       		.uleb128 0x3a
 1779 0046 0B       		.uleb128 0xb
 1780 0047 3B       		.uleb128 0x3b
 1781 0048 0B       		.uleb128 0xb
 1782 0049 49       		.uleb128 0x49
 1783 004a 13       		.uleb128 0x13
 1784 004b 00       		.byte	0
 1785 004c 00       		.byte	0
 1786 004d 08       		.uleb128 0x8
 1787 004e 13       		.uleb128 0x13
 1788 004f 01       		.byte	0x1
 1789 0050 03       		.uleb128 0x3
 1790 0051 0E       		.uleb128 0xe
 1791 0052 0B       		.uleb128 0xb
 1792 0053 0B       		.uleb128 0xb
 1793 0054 3A       		.uleb128 0x3a
 1794 0055 0B       		.uleb128 0xb
 1795 0056 3B       		.uleb128 0x3b
 1796 0057 0B       		.uleb128 0xb
 1797 0058 01       		.uleb128 0x1
 1798 0059 13       		.uleb128 0x13
 1799 005a 00       		.byte	0
 1800 005b 00       		.byte	0
 1801 005c 09       		.uleb128 0x9
 1802 005d 0D       		.uleb128 0xd
 1803 005e 00       		.byte	0
 1804 005f 03       		.uleb128 0x3
 1805 0060 0E       		.uleb128 0xe
 1806 0061 49       		.uleb128 0x49
 1807 0062 13       		.uleb128 0x13
 1808 0063 38       		.uleb128 0x38
 1809 0064 0B       		.uleb128 0xb
 1810 0065 34       		.uleb128 0x34
 1811 0066 19       		.uleb128 0x19
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 42


 1812 0067 00       		.byte	0
 1813 0068 00       		.byte	0
 1814 0069 0A       		.uleb128 0xa
 1815 006a 13       		.uleb128 0x13
 1816 006b 01       		.byte	0x1
 1817 006c 0B       		.uleb128 0xb
 1818 006d 0B       		.uleb128 0xb
 1819 006e 3A       		.uleb128 0x3a
 1820 006f 0B       		.uleb128 0xb
 1821 0070 3B       		.uleb128 0x3b
 1822 0071 0B       		.uleb128 0xb
 1823 0072 01       		.uleb128 0x1
 1824 0073 13       		.uleb128 0x13
 1825 0074 00       		.byte	0
 1826 0075 00       		.byte	0
 1827 0076 0B       		.uleb128 0xb
 1828 0077 0D       		.uleb128 0xd
 1829 0078 00       		.byte	0
 1830 0079 03       		.uleb128 0x3
 1831 007a 0E       		.uleb128 0xe
 1832 007b 3A       		.uleb128 0x3a
 1833 007c 0B       		.uleb128 0xb
 1834 007d 3B       		.uleb128 0x3b
 1835 007e 0B       		.uleb128 0xb
 1836 007f 49       		.uleb128 0x49
 1837 0080 13       		.uleb128 0x13
 1838 0081 38       		.uleb128 0x38
 1839 0082 0B       		.uleb128 0xb
 1840 0083 00       		.byte	0
 1841 0084 00       		.byte	0
 1842 0085 0C       		.uleb128 0xc
 1843 0086 0D       		.uleb128 0xd
 1844 0087 00       		.byte	0
 1845 0088 03       		.uleb128 0x3
 1846 0089 08       		.uleb128 0x8
 1847 008a 3A       		.uleb128 0x3a
 1848 008b 0B       		.uleb128 0xb
 1849 008c 3B       		.uleb128 0x3b
 1850 008d 0B       		.uleb128 0xb
 1851 008e 49       		.uleb128 0x49
 1852 008f 13       		.uleb128 0x13
 1853 0090 38       		.uleb128 0x38
 1854 0091 0B       		.uleb128 0xb
 1855 0092 00       		.byte	0
 1856 0093 00       		.byte	0
 1857 0094 0D       		.uleb128 0xd
 1858 0095 2E       		.uleb128 0x2e
 1859 0096 01       		.byte	0x1
 1860 0097 03       		.uleb128 0x3
 1861 0098 0E       		.uleb128 0xe
 1862 0099 3A       		.uleb128 0x3a
 1863 009a 0B       		.uleb128 0xb
 1864 009b 3B       		.uleb128 0x3b
 1865 009c 0B       		.uleb128 0xb
 1866 009d 27       		.uleb128 0x27
 1867 009e 19       		.uleb128 0x19
 1868 009f 11       		.uleb128 0x11
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 43


 1869 00a0 01       		.uleb128 0x1
 1870 00a1 12       		.uleb128 0x12
 1871 00a2 06       		.uleb128 0x6
 1872 00a3 40       		.uleb128 0x40
 1873 00a4 18       		.uleb128 0x18
 1874 00a5 9642     		.uleb128 0x2116
 1875 00a7 19       		.uleb128 0x19
 1876 00a8 01       		.uleb128 0x1
 1877 00a9 13       		.uleb128 0x13
 1878 00aa 00       		.byte	0
 1879 00ab 00       		.byte	0
 1880 00ac 0E       		.uleb128 0xe
 1881 00ad 05       		.uleb128 0x5
 1882 00ae 00       		.byte	0
 1883 00af 03       		.uleb128 0x3
 1884 00b0 08       		.uleb128 0x8
 1885 00b1 3A       		.uleb128 0x3a
 1886 00b2 0B       		.uleb128 0xb
 1887 00b3 3B       		.uleb128 0x3b
 1888 00b4 0B       		.uleb128 0xb
 1889 00b5 49       		.uleb128 0x49
 1890 00b6 13       		.uleb128 0x13
 1891 00b7 02       		.uleb128 0x2
 1892 00b8 18       		.uleb128 0x18
 1893 00b9 00       		.byte	0
 1894 00ba 00       		.byte	0
 1895 00bb 0F       		.uleb128 0xf
 1896 00bc 34       		.uleb128 0x34
 1897 00bd 00       		.byte	0
 1898 00be 03       		.uleb128 0x3
 1899 00bf 08       		.uleb128 0x8
 1900 00c0 3A       		.uleb128 0x3a
 1901 00c1 0B       		.uleb128 0xb
 1902 00c2 3B       		.uleb128 0x3b
 1903 00c3 0B       		.uleb128 0xb
 1904 00c4 49       		.uleb128 0x49
 1905 00c5 13       		.uleb128 0x13
 1906 00c6 02       		.uleb128 0x2
 1907 00c7 18       		.uleb128 0x18
 1908 00c8 00       		.byte	0
 1909 00c9 00       		.byte	0
 1910 00ca 10       		.uleb128 0x10
 1911 00cb 05       		.uleb128 0x5
 1912 00cc 00       		.byte	0
 1913 00cd 03       		.uleb128 0x3
 1914 00ce 0E       		.uleb128 0xe
 1915 00cf 3A       		.uleb128 0x3a
 1916 00d0 0B       		.uleb128 0xb
 1917 00d1 3B       		.uleb128 0x3b
 1918 00d2 0B       		.uleb128 0xb
 1919 00d3 49       		.uleb128 0x49
 1920 00d4 13       		.uleb128 0x13
 1921 00d5 02       		.uleb128 0x2
 1922 00d6 18       		.uleb128 0x18
 1923 00d7 00       		.byte	0
 1924 00d8 00       		.byte	0
 1925 00d9 11       		.uleb128 0x11
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 44


 1926 00da 34       		.uleb128 0x34
 1927 00db 00       		.byte	0
 1928 00dc 03       		.uleb128 0x3
 1929 00dd 0E       		.uleb128 0xe
 1930 00de 3A       		.uleb128 0x3a
 1931 00df 0B       		.uleb128 0xb
 1932 00e0 3B       		.uleb128 0x3b
 1933 00e1 0B       		.uleb128 0xb
 1934 00e2 49       		.uleb128 0x49
 1935 00e3 13       		.uleb128 0x13
 1936 00e4 02       		.uleb128 0x2
 1937 00e5 18       		.uleb128 0x18
 1938 00e6 00       		.byte	0
 1939 00e7 00       		.byte	0
 1940 00e8 12       		.uleb128 0x12
 1941 00e9 01       		.uleb128 0x1
 1942 00ea 01       		.byte	0x1
 1943 00eb 49       		.uleb128 0x49
 1944 00ec 13       		.uleb128 0x13
 1945 00ed 01       		.uleb128 0x1
 1946 00ee 13       		.uleb128 0x13
 1947 00ef 00       		.byte	0
 1948 00f0 00       		.byte	0
 1949 00f1 13       		.uleb128 0x13
 1950 00f2 21       		.uleb128 0x21
 1951 00f3 00       		.byte	0
 1952 00f4 49       		.uleb128 0x49
 1953 00f5 13       		.uleb128 0x13
 1954 00f6 2F       		.uleb128 0x2f
 1955 00f7 0B       		.uleb128 0xb
 1956 00f8 00       		.byte	0
 1957 00f9 00       		.byte	0
 1958 00fa 14       		.uleb128 0x14
 1959 00fb 2E       		.uleb128 0x2e
 1960 00fc 01       		.byte	0x1
 1961 00fd 3F       		.uleb128 0x3f
 1962 00fe 19       		.uleb128 0x19
 1963 00ff 03       		.uleb128 0x3
 1964 0100 0E       		.uleb128 0xe
 1965 0101 3A       		.uleb128 0x3a
 1966 0102 0B       		.uleb128 0xb
 1967 0103 3B       		.uleb128 0x3b
 1968 0104 05       		.uleb128 0x5
 1969 0105 27       		.uleb128 0x27
 1970 0106 19       		.uleb128 0x19
 1971 0107 49       		.uleb128 0x49
 1972 0108 13       		.uleb128 0x13
 1973 0109 11       		.uleb128 0x11
 1974 010a 01       		.uleb128 0x1
 1975 010b 12       		.uleb128 0x12
 1976 010c 06       		.uleb128 0x6
 1977 010d 40       		.uleb128 0x40
 1978 010e 18       		.uleb128 0x18
 1979 010f 9642     		.uleb128 0x2116
 1980 0111 19       		.uleb128 0x19
 1981 0112 01       		.uleb128 0x1
 1982 0113 13       		.uleb128 0x13
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 45


 1983 0114 00       		.byte	0
 1984 0115 00       		.byte	0
 1985 0116 15       		.uleb128 0x15
 1986 0117 05       		.uleb128 0x5
 1987 0118 00       		.byte	0
 1988 0119 03       		.uleb128 0x3
 1989 011a 0E       		.uleb128 0xe
 1990 011b 3A       		.uleb128 0x3a
 1991 011c 0B       		.uleb128 0xb
 1992 011d 3B       		.uleb128 0x3b
 1993 011e 05       		.uleb128 0x5
 1994 011f 49       		.uleb128 0x49
 1995 0120 13       		.uleb128 0x13
 1996 0121 02       		.uleb128 0x2
 1997 0122 18       		.uleb128 0x18
 1998 0123 00       		.byte	0
 1999 0124 00       		.byte	0
 2000 0125 16       		.uleb128 0x16
 2001 0126 34       		.uleb128 0x34
 2002 0127 00       		.byte	0
 2003 0128 03       		.uleb128 0x3
 2004 0129 08       		.uleb128 0x8
 2005 012a 3A       		.uleb128 0x3a
 2006 012b 0B       		.uleb128 0xb
 2007 012c 3B       		.uleb128 0x3b
 2008 012d 05       		.uleb128 0x5
 2009 012e 49       		.uleb128 0x49
 2010 012f 13       		.uleb128 0x13
 2011 0130 02       		.uleb128 0x2
 2012 0131 18       		.uleb128 0x18
 2013 0132 00       		.byte	0
 2014 0133 00       		.byte	0
 2015 0134 17       		.uleb128 0x17
 2016 0135 34       		.uleb128 0x34
 2017 0136 00       		.byte	0
 2018 0137 03       		.uleb128 0x3
 2019 0138 0E       		.uleb128 0xe
 2020 0139 3A       		.uleb128 0x3a
 2021 013a 0B       		.uleb128 0xb
 2022 013b 3B       		.uleb128 0x3b
 2023 013c 05       		.uleb128 0x5
 2024 013d 49       		.uleb128 0x49
 2025 013e 13       		.uleb128 0x13
 2026 013f 02       		.uleb128 0x2
 2027 0140 18       		.uleb128 0x18
 2028 0141 00       		.byte	0
 2029 0142 00       		.byte	0
 2030 0143 18       		.uleb128 0x18
 2031 0144 0B       		.uleb128 0xb
 2032 0145 01       		.byte	0x1
 2033 0146 11       		.uleb128 0x11
 2034 0147 01       		.uleb128 0x1
 2035 0148 12       		.uleb128 0x12
 2036 0149 06       		.uleb128 0x6
 2037 014a 01       		.uleb128 0x1
 2038 014b 13       		.uleb128 0x13
 2039 014c 00       		.byte	0
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 46


 2040 014d 00       		.byte	0
 2041 014e 19       		.uleb128 0x19
 2042 014f 0B       		.uleb128 0xb
 2043 0150 01       		.byte	0x1
 2044 0151 55       		.uleb128 0x55
 2045 0152 17       		.uleb128 0x17
 2046 0153 00       		.byte	0
 2047 0154 00       		.byte	0
 2048 0155 1A       		.uleb128 0x1a
 2049 0156 2E       		.uleb128 0x2e
 2050 0157 01       		.byte	0x1
 2051 0158 3F       		.uleb128 0x3f
 2052 0159 19       		.uleb128 0x19
 2053 015a 03       		.uleb128 0x3
 2054 015b 0E       		.uleb128 0xe
 2055 015c 3A       		.uleb128 0x3a
 2056 015d 0B       		.uleb128 0xb
 2057 015e 3B       		.uleb128 0x3b
 2058 015f 05       		.uleb128 0x5
 2059 0160 27       		.uleb128 0x27
 2060 0161 19       		.uleb128 0x19
 2061 0162 49       		.uleb128 0x49
 2062 0163 13       		.uleb128 0x13
 2063 0164 11       		.uleb128 0x11
 2064 0165 01       		.uleb128 0x1
 2065 0166 12       		.uleb128 0x12
 2066 0167 06       		.uleb128 0x6
 2067 0168 40       		.uleb128 0x40
 2068 0169 18       		.uleb128 0x18
 2069 016a 9642     		.uleb128 0x2116
 2070 016c 19       		.uleb128 0x19
 2071 016d 00       		.byte	0
 2072 016e 00       		.byte	0
 2073 016f 1B       		.uleb128 0x1b
 2074 0170 18       		.uleb128 0x18
 2075 0171 00       		.byte	0
 2076 0172 00       		.byte	0
 2077 0173 00       		.byte	0
 2078 0174 00       		.byte	0
 2079              		.section	.debug_aranges,"",%progbits
 2080 0000 3C000000 		.4byte	0x3c
 2081 0004 0200     		.2byte	0x2
 2082 0006 00000000 		.4byte	.Ldebug_info0
 2083 000a 04       		.byte	0x4
 2084 000b 00       		.byte	0
 2085 000c 0000     		.2byte	0
 2086 000e 0000     		.2byte	0
 2087 0010 00000000 		.4byte	.LFB0
 2088 0014 7C000000 		.4byte	.LFE0-.LFB0
 2089 0018 00000000 		.4byte	.LFB1
 2090 001c 58010000 		.4byte	.LFE1-.LFB1
 2091 0020 00000000 		.4byte	.LFB2
 2092 0024 4E010000 		.4byte	.LFE2-.LFB2
 2093 0028 00000000 		.4byte	.LFB3
 2094 002c 2A030000 		.4byte	.LFE3-.LFB3
 2095 0030 00000000 		.4byte	.LFB4
 2096 0034 30000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 47


 2097 0038 00000000 		.4byte	0
 2098 003c 00000000 		.4byte	0
 2099              		.section	.debug_ranges,"",%progbits
 2100              	.Ldebug_ranges0:
 2101 0000 66020000 		.4byte	.LBB3
 2102 0004 A0020000 		.4byte	.LBE3
 2103 0008 A2020000 		.4byte	.LBB4
 2104 000c A4020000 		.4byte	.LBE4
 2105 0010 00000000 		.4byte	0
 2106 0014 00000000 		.4byte	0
 2107 0018 00000000 		.4byte	.LFB0
 2108 001c 7C000000 		.4byte	.LFE0
 2109 0020 00000000 		.4byte	.LFB1
 2110 0024 58010000 		.4byte	.LFE1
 2111 0028 00000000 		.4byte	.LFB2
 2112 002c 4E010000 		.4byte	.LFE2
 2113 0030 00000000 		.4byte	.LFB3
 2114 0034 2A030000 		.4byte	.LFE3
 2115 0038 00000000 		.4byte	.LFB4
 2116 003c 30000000 		.4byte	.LFE4
 2117 0040 00000000 		.4byte	0
 2118 0044 00000000 		.4byte	0
 2119              		.section	.debug_line,"",%progbits
 2120              	.Ldebug_line0:
 2121 0000 42020000 		.section	.debug_str,"MS",%progbits,1
 2121      0200C400 
 2121      00000201 
 2121      FB0E0D00 
 2121      01010101 
 2122              	.LASF37:
 2123 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2123      43313120 
 2123      352E342E 
 2123      31203230 
 2123      31363036 
 2124 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2124      20726576 
 2124      6973696F 
 2124      6E203233 
 2124      37373135 
 2125 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2125      66756E63 
 2125      74696F6E 
 2125      2D736563 
 2125      74696F6E 
 2126              	.LASF18:
 2127 008e 53454747 		.ascii	"SEGGER_RTT_PRINTF_DESC\000"
 2127      45525F52 
 2127      54545F50 
 2127      52494E54 
 2127      465F4445 
 2128              	.LASF29:
 2129 00a5 57696474 		.ascii	"Width\000"
 2129      6800
 2130              	.LASF35:
 2131 00ab 61634275 		.ascii	"acBuffer\000"
 2131      66666572 
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 48


 2131      00
 2132              	.LASF16:
 2133 00b4 52657475 		.ascii	"ReturnValue\000"
 2133      726E5661 
 2133      6C756500 
 2134              	.LASF15:
 2135 00c0 42756666 		.ascii	"BufferSize\000"
 2135      65725369 
 2135      7A6500
 2136              	.LASF19:
 2137 00cb 5F53746F 		.ascii	"_StoreChar\000"
 2137      72654368 
 2137      617200
 2138              	.LASF13:
 2139 00d6 76615F6C 		.ascii	"va_list\000"
 2139      69737400 
 2140              	.LASF21:
 2141 00de 70427566 		.ascii	"pBufferDesc\000"
 2141      66657244 
 2141      65736300 
 2142              	.LASF4:
 2143 00ea 756E7369 		.ascii	"unsigned char\000"
 2143      676E6564 
 2143      20636861 
 2143      7200
 2144              	.LASF8:
 2145 00f8 6C6F6E67 		.ascii	"long unsigned int\000"
 2145      20756E73 
 2145      69676E65 
 2145      6420696E 
 2145      7400
 2146              	.LASF6:
 2147 010a 73686F72 		.ascii	"short unsigned int\000"
 2147      7420756E 
 2147      7369676E 
 2147      65642069 
 2147      6E7400
 2148              	.LASF39:
 2149 011d 453A5C69 		.ascii	"E:\\iroteam\\prg\\tulue\\code\\cypress\\no-exp -V1-"
 2149      726F7465 
 2149      616D5C70 
 2149      72675C74 
 2149      756C7565 
 2150 014a 6F6C6420 		.ascii	"old board\\new-cy-notask\\cy-notask\\Start\\BoardSu"
 2150      626F6172 
 2150      645C6E65 
 2150      772D6379 
 2150      2D6E6F74 
 2151 0179 70706F72 		.ascii	"pport\\Cypress\\CY8C5868_CY8CKIT_050_PSoC5_DK\\Star"
 2151      745C4379 
 2151      70726573 
 2151      735C4359 
 2151      38433538 
 2152 01a9 745F4359 		.ascii	"t_CY8C5868_AccessV1.0_OldBrd.cydsn\000"
 2152      38433538 
 2152      36385F41 
 2152      63636573 
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 49


 2152      7356312E 
 2153              	.LASF43:
 2154 01cc 53454747 		.ascii	"SEGGER_RTT_printf\000"
 2154      45525F52 
 2154      54545F70 
 2154      72696E74 
 2154      6600
 2155              	.LASF30:
 2156 01de 5F507269 		.ascii	"_PrintInt\000"
 2156      6E74496E 
 2156      7400
 2157              	.LASF42:
 2158 01e8 53454747 		.ascii	"SEGGER_RTT_vprintf\000"
 2158      45525F52 
 2158      54545F76 
 2158      7072696E 
 2158      746600
 2159              	.LASF26:
 2160 01fb 5F615632 		.ascii	"_aV2C\000"
 2160      4300
 2161              	.LASF12:
 2162 0201 5F5F676E 		.ascii	"__gnuc_va_list\000"
 2162      75635F76 
 2162      615F6C69 
 2162      737400
 2163              	.LASF17:
 2164 0210 52545442 		.ascii	"RTTBufferIndex\000"
 2164      75666665 
 2164      72496E64 
 2164      657800
 2165              	.LASF20:
 2166 021f 5F507269 		.ascii	"_PrintUnsigned\000"
 2166      6E74556E 
 2166      7369676E 
 2166      656400
 2167              	.LASF22:
 2168 022e 42617365 		.ascii	"Base\000"
 2168      00
 2169              	.LASF0:
 2170 0233 756E7369 		.ascii	"unsigned int\000"
 2170      676E6564 
 2170      20696E74 
 2170      00
 2171              	.LASF28:
 2172 0240 4E756D62 		.ascii	"Number\000"
 2172      657200
 2173              	.LASF9:
 2174 0247 6C6F6E67 		.ascii	"long long unsigned int\000"
 2174      206C6F6E 
 2174      6720756E 
 2174      7369676E 
 2174      65642069 
 2175              	.LASF41:
 2176 025e 5F5F6170 		.ascii	"__ap\000"
 2176      00
 2177              	.LASF32:
 2178 0263 73466F72 		.ascii	"sFormat\000"
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 50


 2178      6D617400 
 2179              	.LASF14:
 2180 026b 70427566 		.ascii	"pBuffer\000"
 2180      66657200 
 2181              	.LASF24:
 2182 0273 4669656C 		.ascii	"FieldWidth\000"
 2182      64576964 
 2182      746800
 2183              	.LASF10:
 2184 027e 73697A65 		.ascii	"sizetype\000"
 2184      74797065 
 2184      00
 2185              	.LASF40:
 2186 0287 5F5F7661 		.ascii	"__va_list\000"
 2186      5F6C6973 
 2186      7400
 2187              	.LASF1:
 2188 0291 6C6F6E67 		.ascii	"long long int\000"
 2188      206C6F6E 
 2188      6720696E 
 2188      7400
 2189              	.LASF38:
 2190 029f 2E2E5C53 		.ascii	"..\\SEGGER\\SEGGER_RTT_printf.c\000"
 2190      45474745 
 2190      525C5345 
 2190      47474552 
 2190      5F525454 
 2191              	.LASF11:
 2192 02bd 63686172 		.ascii	"char\000"
 2192      00
 2193              	.LASF27:
 2194 02c2 44696769 		.ascii	"Digit\000"
 2194      7400
 2195              	.LASF5:
 2196 02c8 73686F72 		.ascii	"short int\000"
 2196      7420696E 
 2196      7400
 2197              	.LASF36:
 2198 02d2 50617261 		.ascii	"ParamList\000"
 2198      6D4C6973 
 2198      7400
 2199              	.LASF31:
 2200 02dc 42756666 		.ascii	"BufferIndex\000"
 2200      6572496E 
 2200      64657800 
 2201              	.LASF25:
 2202 02e8 466F726D 		.ascii	"FormatFlags\000"
 2202      6174466C 
 2202      61677300 
 2203              	.LASF7:
 2204 02f4 6C6F6E67 		.ascii	"long int\000"
 2204      20696E74 
 2204      00
 2205              	.LASF2:
 2206 02fd 6C6F6E67 		.ascii	"long double\000"
 2206      20646F75 
 2206      626C6500 
ARM GAS  C:\Users\ali\AppData\Local\Temp\ccSDs32I.s 			page 51


 2207              	.LASF34:
 2208 0309 42756666 		.ascii	"BufferDesc\000"
 2208      65724465 
 2208      736300
 2209              	.LASF3:
 2210 0314 7369676E 		.ascii	"signed char\000"
 2210      65642063 
 2210      68617200 
 2211              	.LASF33:
 2212 0320 70506172 		.ascii	"pParamList\000"
 2212      616D4C69 
 2212      737400
 2213              	.LASF23:
 2214 032b 4E756D44 		.ascii	"NumDigits\000"
 2214      69676974 
 2214      7300
 2215              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
